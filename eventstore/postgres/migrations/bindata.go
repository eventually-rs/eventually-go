// Code generated for package migrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// 1_create_stream_tables.down.sql
// 1_create_stream_tables.up.sql
// 2_append_to_store.down.sql
// 2_append_to_store.up.sql
// 3_notification_triggers.down.sql
// 3_notification_triggers.up.sql
// 4_subscriptions_checkpoint.down.sql
// 4_subscriptions_checkpoint.up.sql
// 5_correlated_events.down.sql
// 5_correlated_events.up.sql
// bindata.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_stream_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\x42\x12\x2a\x2e\x29\x4a\x4d\xcc\x2d\xb6\xe6\x02\x04\x00\x00\xff\xff\xc4\xa6\xb6\x55\x27\x00\x00\x00")

func _1_create_stream_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesDownSql,
		"1_create_stream_tables.down.sql",
	)
}

func _1_create_stream_tablesDownSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.down.sql", size: 39, mode: os.FileMode(420), modTime: time.Unix(1610579492, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_stream_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xc2\x30\x14\x84\x77\xff\x8a\x13\x13\x91\x32\x74\xef\x64\xc2\x0b\x4a\xeb\x3a\x95\x63\xa4\x32\x45\xa6\x79\xaa\x22\x91\xd0\x26\x06\xa9\xff\xbe\x22\x94\x34\x25\xa5\xf0\x16\x2f\x9f\xcf\xf7\xee\x1c\x19\x92\x96\x60\xe5\x4c\x11\x5a\xdf\xb0\xab\x5a\x4c\x05\x00\x94\x05\xfa\xb1\xf4\x62\x0f\xa7\x4e\x2d\xf4\x52\xa9\xb0\x23\x8e\x7c\xee\x3f\xdf\xf9\x02\x31\xd9\x73\xd3\x96\xdb\x7a\x02\x20\xd1\x96\x16\x64\x7a\x02\x98\x53\x2c\x97\xca\xe2\x2e\x14\x1d\xfd\x6c\x92\x27\x69\x56\x78\xa4\x15\xa6\x03\xf1\x10\x65\x11\x88\xe0\x5e\x88\x5f\x76\x79\xcf\xb5\x3f\xb9\x7d\xdb\x6c\xd7\x6e\x93\xb7\xfc\xb1\xe3\xfa\x95\xf3\x7a\x57\xad\xb9\x41\x46\x26\x91\x7f\xd8\xc5\x8d\xbb\x0d\x43\xb8\x0c\x77\x4e\x46\xc2\x37\x64\x32\x98\xf3\x78\xbe\xe1\x4e\xfa\x0c\x05\x1e\xb2\x54\xcf\x46\xca\x15\x7b\x57\x38\xef\xae\xc2\x57\xd2\xee\x77\x0f\x7f\xcc\x06\xc7\x27\xe2\xd4\x50\xb2\xd0\xff\x5d\x0a\x60\x28\x26\x43\x3a\xa2\xec\xf4\xa5\x46\x6d\x22\xd5\x98\x93\x22\x4b\x88\x64\x16\xc9\x39\x1d\xfa\xfd\x0a\x00\x00\xff\xff\x44\xce\xe9\x01\x8e\x02\x00\x00")

func _1_create_stream_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesUpSql,
		"1_create_stream_tables.up.sql",
	)
}

func _1_create_stream_tablesUpSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.up.sql", size: 654, mode: os.FileMode(420), modTime: time.Unix(1610579507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x2c\x28\x48\xcd\x4b\x89\x2f\xc9\x8f\x2f\x2e\xc9\x2f\x4a\xb5\xe6\x02\x04\x00\x00\xff\xff\x6d\xdf\x6a\xa8\x29\x00\x00\x00")

func _2_append_to_storeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeDownSql,
		"2_append_to_store.down.sql",
	)
}

func _2_append_to_storeDownSql() (*asset, error) {
	bytes, err := _2_append_to_storeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.down.sql", size: 41, mode: os.FileMode(420), modTime: time.Unix(1610579485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5d\xaf\xda\x46\x14\x7c\xf7\xaf\x18\xa1\x1b\x01\x2a\xa0\xde\x57\x28\x95\x7c\x61\x21\x54\xc4\x10\xdb\x24\xe9\x93\xb5\xf1\x1e\xca\x36\xf8\x43\xbb\xcb\x4d\x69\xd3\xff\x5e\x79\x6d\x8c\x4d\x1d\xa9\x52\x79\xc2\xb3\xc7\x7b\x66\xce\xc7\x78\xe1\x33\x37\x64\xd8\xf9\xf0\xd9\x7e\xeb\x2e\x18\x56\x07\x6f\x11\x6e\x76\x1e\x78\x9e\x53\x2a\x22\x93\x45\xda\x64\x8a\x06\x0e\x00\x44\xda\x28\xe2\x49\x64\xae\x39\x01\x21\xfb\x14\x8e\x2c\x5e\xc1\x52\x14\x0f\x0d\xfc\x95\x94\x96\x59\x1a\xc5\x27\x8a\xbf\x60\xe3\x85\x6c\xcd\xfc\xf2\x88\x5e\x29\x35\x51\xca\x13\x6a\xbf\x52\xe2\x39\xbf\x9e\x33\x2e\xf0\x4b\xb0\xf3\x5e\xca\x83\x84\x0c\x17\xdc\x70\x9b\xa2\x3c\x70\x86\xf0\x59\x78\xf0\xbd\x00\xa1\xfb\xb2\x65\x28\x59\xf6\xaa\xb4\xbd\x5b\x46\x67\x08\x37\xc0\xd3\x93\xb3\x64\x8b\xad\xeb\x33\x1b\x75\xe6\xda\xdc\xf4\x54\x2f\xdc\xe2\x67\xce\x0b\x5b\x6f\x3c\xc7\xc6\x8d\xc7\xf0\xc9\x28\x49\xaf\x04\x73\x22\x9c\xb9\x21\x6d\x2a\xc9\x37\x85\x38\x66\xca\x9e\xea\x9c\x62\x79\x94\x24\xaa\x80\x89\xbd\x23\x60\x5b\xb6\x08\xa1\x27\x35\x35\x0b\x6f\xbc\x70\xd7\xc5\xc3\x1e\xae\xfc\xdd\xbb\xea\x12\x0d\x6d\xa1\x8f\x6f\x99\xcf\x20\x05\xe6\x8d\x8a\xbb\xde\x12\x7a\xd2\x6c\xcc\xbc\xd5\xa7\x59\x29\x63\xb3\x82\xb7\x0b\xb1\xda\x1d\xbc\x25\xc2\xb7\xcc\x73\x50\xfd\xc6\x63\x2c\x14\x71\x43\xe0\x48\xe9\x2b\x28\x35\xea\x5a\x0b\x12\xa4\xa5\x7a\x90\x53\x72\x0f\x98\x1f\x96\x12\x6e\x2c\x07\x52\x8c\xd0\x48\x3d\xac\xa3\x3f\xb8\xdb\x03\x0b\x30\xa8\x69\x8f\x5a\x1c\x87\x15\xc9\x8a\xce\x3b\xfe\x85\xa0\x2f\x8a\x60\x32\xc8\x54\x1a\xc9\xcf\xf2\xcf\xb2\xfc\x0f\x75\x97\x29\xcc\x49\x6a\xc4\x5c\xd3\x9d\x5c\x57\x6f\xe7\xf8\x71\x66\x03\x98\xb7\xc4\x66\x35\xab\xbb\xbb\x27\x75\xcc\x54\x82\x2c\x37\x32\x91\xda\xc8\x18\x71\x96\xc6\x17\xa5\x28\x8d\xaf\xb0\xb3\x3b\xb9\xd5\xb0\x3d\xd1\x3f\xfd\x8c\xf1\xb3\xed\xc0\xbf\xf0\x2e\x0a\xad\xb2\xfb\xee\x26\x60\x60\x9f\x16\x6c\x6f\x17\xae\xff\xa0\xac\xbc\xe9\xc8\xe5\x99\xc4\x08\xf4\x47\x4e\xb1\x21\x31\xc5\x9b\x11\x4a\x6e\x66\x8a\x37\xfd\x51\x3b\xf3\xa8\x2b\x6f\xb7\xec\x4d\x1a\x2b\x4a\x28\x35\x5d\x65\xcd\x95\x2c\xfa\x5f\x54\x5f\x93\x32\x32\xfd\xcd\x46\xd9\xf1\x28\x16\x74\xf2\xdd\x15\x9a\x77\xa2\x3f\xe0\xf9\x9e\xd9\x15\x02\x1c\x8a\xe2\x4c\x09\x12\x11\x37\x30\x32\x21\x6d\x78\x92\x97\xfd\xa4\x7a\xd9\x27\xed\xd5\x9f\xdf\xff\x7e\xfb\x86\x41\xff\xaf\x9e\x5f\xdd\x32\x76\x4d\x6f\x8a\x7e\x01\x9b\x2c\xfa\x5d\x67\xe9\xc0\xdb\x7d\x1c\x0c\x87\x05\xd2\xff\xbb\x3f\x9c\x4e\xad\x65\x34\xf5\x17\xca\x6c\x36\x2b\x09\x32\x35\xd9\xfd\x51\xc3\xf0\xcf\xe7\x6a\xa6\xc6\x63\x7c\xa8\x94\xa4\x97\xe4\x33\x29\x0d\x7d\xca\x2e\xe7\x62\x2d\xb8\x32\x38\xaa\x2c\xc1\x73\x35\x24\x8d\xc5\xa8\x6e\x1a\xd4\x4d\x6f\xcc\xfc\xe8\x11\x94\xe2\x0e\xd5\x3e\x71\x87\x4a\x63\x6c\xbf\xd9\xb3\x60\x23\xe8\x56\x1e\x0b\x0c\xeb\xb5\xab\xcf\xa3\xff\x4a\xa0\xa3\x89\x8f\x54\x0a\xef\x7e\xc4\x2a\xdf\xfe\x1e\xa1\x7b\xf5\x0f\xb9\x28\x1c\xa7\x31\x7a\x5f\xa5\x39\x35\x0d\xb6\xde\x83\x2c\xc9\x2f\x86\x44\x59\xdd\xc3\x7e\x59\x7c\xb1\xda\xbe\x18\xb0\xb0\x61\xfa\x9d\x13\xf8\xbf\xfd\xb3\xfc\xd0\xe0\xfd\x81\xf9\xbf\xd6\xea\x2a\x5f\xef\xdc\x39\x87\x79\xcb\x99\xf3\xf4\x84\xad\xeb\xad\x0f\xee\x9a\x61\xbf\xdd\xaf\x83\xf7\xdb\x99\xf3\x4f\x00\x00\x00\xff\xff\x9a\x3b\x4a\xac\x77\x07\x00\x00")

func _2_append_to_storeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeUpSql,
		"2_append_to_store.up.sql",
	)
}

func _2_append_to_storeUpSql() (*asset, error) {
	bytes, err := _2_append_to_storeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.up.sql", size: 1911, mode: os.FileMode(420), modTime: time.Unix(1620516996, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\xcb\x2f\xc9\x4c\xab\x8c\x2f\x2e\x29\x4a\x4d\xcc\x8d\x2f\xa9\x2c\x48\x8d\xcf\xcf\x8b\x4f\x2c\x28\x48\xcd\x4b\x51\xf0\xf7\x53\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\xc2\xaf\x3d\x31\x27\x07\xbb\x36\x88\x3e\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\xbc\xf6\x5a\x13\x52\x9b\x98\x93\x63\xcd\x05\x08\x00\x00\xff\xff\xd0\xee\xfa\x52\xc7\x00\x00\x00")

func _3_notification_triggersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersDownSql,
		"3_notification_triggers.down.sql",
	)
}

func _3_notification_triggersDownSql() (*asset, error) {
	bytes, err := _3_notification_triggersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.down.sql", size: 199, mode: os.FileMode(420), modTime: time.Unix(1610579019, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x51\x6f\x9b\x30\x10\xc7\xdf\xfd\x29\x4e\x08\xc9\x89\x94\xee\x03\x80\xf6\x40\xc9\x85\x65\x62\x36\x3b\x8c\xda\x37\xe4\x2e\x5e\x15\x89\x90\x2c\xd0\x4a\x55\xe9\x77\x9f\x70\x29\xc1\x55\xb7\x3c\xed\x25\x9a\xdf\xec\xff\xf9\x77\x77\xdc\x1f\xc7\x84\x91\x42\x90\x04\x84\x59\x1a\xc5\x08\xab\x42\xc4\x6a\x2d\x05\xd4\xfb\x76\xfb\xf3\xa9\xd4\x55\x35\x9b\x33\x42\x55\x90\xc8\x41\xd1\x3a\x49\x90\x58\x94\x83\xef\xb3\x25\xc6\x69\x44\xc8\x00\x00\x76\xa6\xd5\x1b\xdd\x6a\xf8\x9a\x4b\x71\x1d\xb2\x6b\x4c\xd6\xc2\x55\x3e\x83\xc0\x9b\x4f\xe3\xb6\xeb\xac\xdc\xaf\x19\x7f\xf6\x92\x6a\x7f\xa7\xab\xab\xdc\xfc\x7a\x30\xf5\x0f\x73\x25\x1e\x76\x77\xe6\xe8\x05\x1c\xba\xce\x5e\xbc\xb7\x01\x65\x33\x04\x94\xb5\x0d\xe8\x55\x0e\x2f\x7c\x1e\x04\x43\x66\x4b\xcd\x90\x56\x92\xbe\xc1\xe1\xbe\x7c\x6d\x64\xc6\x7d\x5d\x55\x7c\x01\x9c\x8f\x69\xfb\xab\xcf\xee\xd6\x6b\xda\xa3\xd1\xbb\x72\xbb\xf1\x02\xf0\xf8\x28\xf4\x05\x8c\x12\x9c\x96\xbd\x03\x8b\x8f\x21\xed\xd3\xc1\x8c\x18\x17\xd2\x4b\x67\x20\xe6\xd1\xd4\xad\xcb\x78\x83\x9c\xa4\x73\x95\x3c\x9a\x63\xb3\xdd\xd7\x5e\x00\x7c\x1a\xd9\x43\x46\xed\x5d\x3b\x0b\xf8\xa8\x10\x87\x70\x62\x0c\x5a\xa0\xf0\x56\xfd\x8d\xf1\x36\xf5\x29\xa6\xeb\x46\x6f\x38\xc1\x2f\x7c\x3e\x4c\xf1\xd5\x76\x7d\xa6\x90\xa1\x58\x86\xcc\xf7\x21\x8d\x44\x52\x44\x09\x42\x96\x66\x49\xfe\x3d\x0d\x19\x3b\xef\xe2\xc9\x57\xbf\x0c\x37\xbf\xb3\xd2\x7f\x5b\x5f\xae\xad\x07\x97\x4e\x1e\xe4\x72\x5f\x97\xfa\x70\x30\xf5\xc6\xe2\xa2\x95\x42\x82\xb5\xc8\x91\x94\x3d\x90\x02\x6c\x03\x8d\xdd\xad\x24\x01\x46\xf1\x17\x20\x79\x63\x0f\xf0\x16\xe3\x42\x21\x64\x24\x63\x5c\x16\x84\xce\x5b\xff\xc7\xc4\x93\x11\xff\xab\x02\x9c\xdf\x34\x64\xbf\x03\x00\x00\xff\xff\x73\x42\x4e\x96\x9e\x06\x00\x00")

func _3_notification_triggersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersUpSql,
		"3_notification_triggers.up.sql",
	)
}

func _3_notification_triggersUpSql() (*asset, error) {
	bytes, err := _3_notification_triggersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.up.sql", size: 1694, mode: os.FileMode(420), modTime: time.Unix(1610579026, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\x4f\x2d\x89\xcf\x2f\x8a\x4f\x2e\x4a\x4d\x2c\x49\x8d\x2f\x2e\x4d\x2a\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x8b\x4f\xce\x48\x4d\xce\x2e\xc8\xcf\xcc\x2b\xb1\xe6\x02\x6b\x0a\x71\x74\xf2\x71\x55\x40\x56\x53\x8c\xa4\xa8\xd8\x9a\x0b\x10\x00\x00\xff\xff\xe0\x60\xe0\xac\x5b\x00\x00\x00")

func _4_subscriptions_checkpointDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointDownSql,
		"4_subscriptions_checkpoint.down.sql",
	)
}

func _4_subscriptions_checkpointDownSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.down.sql", size: 91, mode: os.FileMode(420), modTime: time.Unix(1610579032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6e\xe3\x20\x10\x87\xef\x3c\xc5\x1c\x7c\x88\xa5\x4d\xb4\xf7\x68\x0f\xac\x3d\xb1\xac\x65\xc1\xc5\x50\x25\x27\x94\x38\x24\xb5\xda\x98\x14\x63\xf5\xf5\x2b\x93\xa8\x55\xdc\x7f\x73\xe1\xf0\x9b\x61\x3e\x3e\x32\x89\x54\x21\x28\xfa\x97\x21\xf4\xc3\xae\x6f\x7c\x7b\x0e\xad\xeb\x7a\xd3\x3c\xd8\xe6\xf1\xec\xda\x2e\xf4\x30\x23\x00\x70\x93\x9b\x76\x0f\xb1\x14\xae\xd5\x78\x56\xb2\xfc\x4f\xe5\x06\xfe\xe1\xe6\x57\xec\x7e\xda\xf6\xc1\xf4\xf6\x79\xb0\x5d\x63\x4d\x37\x9c\x76\xd6\x43\xc9\x15\x16\x28\x81\x0b\x05\x5c\x33\x16\xaf\xc8\x71\x45\x35\x53\xf0\x9b\xa4\x4b\x42\xae\x48\x42\x82\xc4\x8a\xd1\x0c\x61\xa5\x79\xa6\x4a\xc1\xe1\x68\x83\x71\xde\x34\xde\x6e\x83\x35\x37\x38\xef\xb4\x17\x56\xf3\x01\x76\x04\x25\x29\x91\xa8\xb4\xe4\xf5\xf5\xc9\xb3\x1f\x51\x49\x0a\xb4\x86\x24\x21\xb1\xb3\xe4\x35\x4a\x35\x66\xe2\x3b\x5d\x93\xe5\x69\x9c\xbd\xa7\x4c\x63\x0d\xb3\x29\xda\x25\x1d\x6b\x3e\x87\xca\xfa\x83\xf3\x27\x18\xce\xfb\x6d\xb0\x10\x1c\x1c\x9c\x6f\x2c\x78\xf7\x02\xde\x86\xc1\x77\x6d\x77\x5c\xbc\x4d\x08\x0e\x99\xe0\x2b\x56\x66\xea\x8b\xad\x51\xb0\x00\x5d\xe5\xa3\xd5\x1a\xd5\xf4\x1b\xff\xe0\x3a\x63\x3a\xc7\x7c\x31\x09\xe2\xf8\x45\x57\xc9\x8b\x4f\x25\x2d\x09\x49\x12\x60\x94\x17\x9a\x16\x08\xf5\x1d\x5b\x92\xd7\x00\x00\x00\xff\xff\xd4\xd0\xd6\x3a\x53\x02\x00\x00")

func _4_subscriptions_checkpointUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointUpSql,
		"4_subscriptions_checkpoint.up.sql",
	)
}

func _4_subscriptions_checkpointUpSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.up.sql", size: 595, mode: os.FileMode(420), modTime: time.Unix(1610579039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\x40\x00\x4f\x37\x05\xd7\x08\xcf\xe0\x90\x60\x85\x82\xa2\xfc\xac\xd4\xe4\x92\xf8\xe4\xfc\xa2\xa2\xd4\x9c\xc4\x92\xd4\x94\xf8\xd4\xb2\xd4\xbc\x92\xf8\xfc\xbc\xf8\xc4\x82\x82\xd4\xbc\x14\x05\x7f\x3f\x05\xb0\x50\xb1\x35\x17\xd8\x38\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\x52\x8c\x83\x6a\xf5\x75\x0c\x71\x0d\xf2\x74\xf4\xf1\x8c\x72\x75\x51\x08\xf3\x74\x0d\x47\xd2\x8a\xae\xa5\x38\xbe\x2c\x33\xb5\x1c\xaa\x31\xc4\xd1\xc9\xc7\x55\x41\x01\xab\x17\x30\x34\x5a\x73\x01\x02\x00\x00\xff\xff\x59\xc9\xda\x7a\xf7\x00\x00\x00")

func _5_correlated_eventsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsDownSql,
		"5_correlated_events.down.sql",
	)
}

func _5_correlated_eventsDownSql() (*asset, error) {
	bytes, err := _5_correlated_eventsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.down.sql", size: 247, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\xbc\xf3\x2b\xf6\x60\x20\x76\xe1\xf8\x07\x84\x04\x60\xa8\x91\xc2\x96\x21\x5d\x8a\x8a\xd3\x5e\x04\xc1\xe2\x41\x45\x63\x1b\xb6\xe0\xa2\x7f\x5f\xe8\x65\xcb\xb6\x52\x84\x17\x01\xe4\xcc\xee\xec\xce\x48\x58\x70\x07\x72\xfc\x49\x81\xd6\xdb\xfd\xde\xff\xce\x2b\x5f\x64\xfe\xe8\x37\xd5\x81\xa6\x8c\x88\x4e\xf7\xe5\x76\x93\x95\x05\x75\xc7\xe1\xcd\xd5\x5f\x6d\x1c\xe9\x54\xa9\x79\x83\x6d\x88\xd9\xa1\xda\xfb\xfc\x3d\xab\xfe\xee\xfc\x67\xb1\xa7\xc2\x9f\xc0\x1e\xfd\xfe\x50\x6e\x37\x44\x52\x3b\xc4\xb0\x03\x2c\x6b\xd0\x91\xb1\x90\xb1\xa6\x6f\xf8\x41\xd3\x1b\x49\xf3\xeb\xce\xf3\xd1\xf2\x33\xd6\x8f\x6a\x11\xc1\x42\x0b\x24\x2d\xf0\x30\xbd\xa8\x36\xa8\xd3\x53\x89\x8c\xa6\x10\x0a\x0e\x24\x78\x22\x78\x08\x36\x0b\x18\xeb\xf6\xfd\xc2\x1d\xac\xe4\x4a\xfe\x44\x48\xaf\x12\xab\xdb\xdd\x67\xc7\xd2\xff\x21\x9e\x34\x22\x12\x28\x08\x47\x6b\xbf\xb8\xf4\x62\x4e\x7e\xf1\xa5\x9d\xd8\x9a\x97\x11\x03\xd7\xfe\x34\x84\xd4\x1a\x96\xbe\x1a\xa9\xbb\x21\xc8\xd7\x22\xfd\x62\x68\xd6\x43\xdd\xe3\x66\x61\xa7\x1a\xf5\xe1\x3a\x3c\x93\xca\x62\x84\x52\x16\x23\x84\xde\xb3\x5b\x78\xf7\x72\xde\x8e\xb1\x64\xb1\x54\x5c\x80\xa2\x54\x0b\x27\x8d\xa6\xdd\x7e\xfb\xcb\xaf\xab\xec\x7a\xc4\xe9\x8c\x59\xb8\xd4\xea\x84\x9c\x95\x71\x0c\xcb\x78\x42\x93\x09\x0b\x21\x14\xb7\x18\x84\xe7\x2a\xc6\x75\xce\x02\xf6\x84\x58\x6a\xf6\x31\xea\x81\x34\x56\x8b\x77\x5f\xe5\x45\x5e\xe5\xf7\x8f\x8f\x77\xe2\x0c\xb8\x97\xc5\x5d\xd0\x70\x65\x34\x4e\x97\x49\x93\x4b\x72\xcf\xd0\x83\x38\xd5\x82\xeb\xc2\x2d\x19\x3a\x24\x19\x05\xad\x0a\xa9\x13\x58\x57\x27\xdb\xdc\xfa\xd9\x20\x5e\xb9\x4a\x91\xf4\xb9\xbe\x0e\x44\x2d\xf7\x22\x9d\x83\x8b\xfe\xbd\x4f\x69\xd7\x72\xa8\x87\x41\x87\x01\x9b\x4c\x48\x71\x1d\xa7\x3c\x06\x2d\xd5\x32\x4e\xbe\xab\xb3\x3d\xdd\x9e\x3f\xb4\x24\xdb\x6e\xb2\x7c\xb7\xf3\x9b\x36\x06\x3c\x72\xb0\xdd\x58\xcd\x85\xe9\x03\xd8\xff\xaa\x04\x2e\x9e\xc9\x9a\x55\xbb\x8d\x37\x88\xd4\x81\x96\xd6\x08\x84\xa9\xc5\x7f\xbc\x0f\xd8\xbf\x00\x00\x00\xff\xff\xed\xee\x53\x34\xc1\x04\x00\x00")

func _5_correlated_eventsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsUpSql,
		"5_correlated_events.up.sql",
	)
}

func _5_correlated_eventsUpSql() (*asset, error) {
	bytes, err := _5_correlated_eventsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.up.sql", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x9b\x59\x6f\x23\x57\x92\x85\x9f\xc5\x5f\x91\x5d\x40\x37\xa4\x41\x8d\x2a\xf7\xa5\x80\x02\x06\x6d\x7b\x00\x3f\x8c\x1b\x18\xbb\x9f\x26\x07\x42\x2e\x37\x65\xa2\x55\xa2\x4c\x52\x76\x96\x0d\xff\xf7\xc1\x17\x71\xb2\x28\x55\x69\x6b\x59\xd5\xf3\x40\x91\x4c\x66\xde\x25\x6e\xc4\x89\x73\xe2\x5e\xbd\x79\x13\x7d\xb5\x19\x43\x74\x1e\x2e\xc3\xb6\xdb\x87\x31\x9a\x36\xdb\xe8\xaa\x1b\xfe\xd1\x9d\x87\xe8\xfd\xfa\x7c\xdb\xed\xd7\x9b\xcb\x5d\xd4\x7f\x88\xce\x37\xff\xde\xaf\x2f\xc7\x6e\xdf\x45\x5f\xff\x2d\xfa\xee\x6f\x3f\x44\xdf\x7c\xfd\xed\x0f\xa7\xd1\xf1\x7f\x7c\x7c\xfa\x64\xf5\xe6\x4d\xb4\xdb\x5c\x6f\x87\xb0\x7b\xcb\xe7\xe4\x6c\xd8\x86\x6e\x1f\xce\x76\xfb\x6d\xe8\xde\x9f\xed\xbb\xfe\x22\xec\x4e\xc7\xcd\x2f\x97\xa7\xbb\x9f\x2e\x1e\xb8\xe5\xfa\x6a\xb9\x21\x3d\xeb\xae\xae\xc2\xe5\x78\xb6\xdf\x9c\xed\xf6\x9b\x6d\xb8\xf5\xf8\xe7\xbf\x1e\x9e\xcc\xce\x2e\x37\xfb\xf5\xb4\x1e\x6c\x12\x67\xfb\xed\xfa\xfc\x3c\x6c\x6f\x77\x7f\xdf\x3d\x87\x56\xf2\xb3\xdd\x75\xbf\x1b\xb6\xeb\x2b\x33\xc5\xd9\xf0\x63\x18\xfe\x71\xb5\x59\x5f\xee\x6f\x35\xf4\xc0\x6d\x87\xb6\x8a\xb3\x61\xb3\xdd\x86\x0b\x8c\x75\x16\x7e\x0e\x97\xfb\xdb\xa3\xb9\xeb\xf7\xc3\xd3\x32\xff\xe9\xf9\x66\xf5\xf9\x12\xad\x56\xeb\xf7\x57\x9b\xed\x3e\x3a\x5e\x1d\xbd\xea\x3f\xec\xc3\xee\xd5\xea\xe8\xd5\xb0\x79\x7f\xb5\x0d\xbb\xdd\x9b\xf3\x5f\xd7\x57\x5c\x98\xde\xef\x79\x5b\x6f\xfc\xef\x9b\xf5\xe6\x7a\xbf\xbe\xe0\xcb\xc6\x1e\xb8\xea\xf6\x3f\xbe\x99\xd6\x17\x81\x0f\x5c\xd8\xed\xb7\xeb\xcb\x73\xfb\x6d\xbf\x7e\x1f\x5e\xad\x4e\x56\xab\xe9\xfa\x72\x58\x46\xf3\xdf\xa1\x1b\x8f\xcd\x2b\xfe\xe7\x7f\xe9\xf6\x75\x74\xd9\xbd\x0f\x91\x3f\x76\x12\x1d\x2f\x57\xc3\x76\xbb\xd9\x9e\x44\xbf\xad\x8e\xce\x7f\xb5\x6f\xd1\xdb\x77\x11\xa3\x3a\xfd\x2e\xfc\x42\x23\x61\x7b\x6c\xc3\xe6\xfb\x5f\xaf\xa7\x29\x6c\xad\xd9\x93\x93\xd5\xd1\x7a\xb2\x07\xfe\xf4\x2e\xba\x5c\x5f\xd0\xc4\xd1\x36\xec\xaf\xb7\x97\x7c\x7d\x1d\x4d\xef\xf7\xa7\xdf\xd0\xfa\x74\xfc\x8a\x86\xa2\x3f\xff\xf4\x36\xfa\xf3\xcf\xaf\x7c\x24\xd6\xd7\xc9\xea\xe8\xf7\xd5\xea\xe8\xe7\x6e\x1b\xf5\xd7\x53\xe4\xfd\x78\x27\xab\xa3\x33\x1f\xce\xbb\x68\xbd\x39\xfd\x6a\x73\xf5\xe1\xf8\x2f\xfd\xf5\xf4\x3a\x3a\xff\xf5\x64\x75\x34\x5c\x7c\xb3\x8c\xf4\xf4\xab\x8b\xcd\x2e\x1c\x9f\xac\x5e\x6a\x3c\x34\xe3\xed\xdf\xd3\x50\xd8\x6e\x7d\xdc\xba\xd8\x5f\x4f\xa7\x7f\x65\xe8\xc7\x27\xaf\xb9\x63\xf5\xfb\x6a\xb5\xff\x70\x15\xa2\x6e\xb7\x0b\x7b\x4c\x7e\x3d\xec\x69\xc5\xe6\xa7\xf5\x58\x1d\xad\x2f\xa7\x4d\x14\x6d\x76\xa7\xff\xb9\xbe\x08\xdf\x5e\x4e\x9b\x8f\xcf\x69\x09\x97\xeb\x37\x5a\xb0\x35\x8c\x22\x2d\xe3\xea\x68\xb7\xfe\xd5\xbe\xaf\x2f\xf7\x65\xbe\x3a\x7a\x0f\x68\x44\x1f\x1b\xfd\xaf\xcd\x18\xec\xe2\x0f\xeb\xf7\x21\xc2\x4d\x4e\xf9\x44\x3f\x6f\xde\x44\xdf\xd1\x96\xa6\x80\x67\x99\x19\xdc\x87\x8e\xa7\xf5\xa7\x83\x38\xb1\xfb\x8f\x4f\xd4\x35\x83\xf9\xf8\xec\xa9\x3d\xe9\xad\x7e\xcf\x88\x6e\xb6\xca\x10\x1f\x68\x95\xfb\x8f\x4f\x7c\x02\xb7\x1b\xb5\x07\xbd\x51\x26\x72\xab\x51\x26\xfa\x40\xa3\xdc\x7f\x7c\x72\xd3\x0c\xb7\x9b\xb6\xc7\xef\x6f\x7a\x3d\x7d\x30\x6b\x3d\xdc\x03\xa6\x3c\x3e\x39\x98\xf5\xb3\x2e\x6e\xd8\xfa\xdb\xdd\xd7\xeb\xed\xad\x6e\x7e\xf9\x31\xec\x7f\x0c\xdb\xa8\x8b\xc6\xf5\x36\x0c\xfb\xcd\xf6\xc3\x03\xdd\xd9\xf3\xc7\x27\x51\xbf\xd9\x5c\x7c\x3e\x95\xbf\x6c\x76\xa7\xcc\x83\x3e\xfe\xf4\x2e\x8a\x97\xa5\xf8\xb0\xbb\xd5\xe5\x7a\x17\xed\x3e\xec\x1e\xb3\xdd\xf7\x1f\x76\xbe\x1e\x61\x3b\x75\x43\xf8\xed\xf7\x1b\xfd\xc9\xb9\x89\xd7\xb3\xb3\xbb\x33\xc4\xd7\x9b\x5f\x2e\xbf\xff\xe9\x22\x7a\x27\x3f\x3f\x7e\xd5\xce\xc9\xd4\xce\x75\xdf\xce\x71\xdd\xce\x71\x7c\xf7\x6b\x9a\xda\xb9\x4a\xdb\x39\x6e\xda\x79\xe2\x7d\x6a\xe7\x22\xf6\x67\xaa\xa4\x9d\xab\xdc\xaf\xf3\xb9\x28\xda\x39\xaf\xdb\x39\x1d\xdb\x39\xef\xdb\x79\x18\xdb\x39\xed\xdb\x39\x6d\xda\xb9\x2f\xdb\x39\x94\xed\x9c\xa7\xed\x9c\xa4\xed\x9c\x76\xed\x9c\x06\xff\x2d\xef\xda\x39\x1f\xdb\x79\x18\xfc\xd9\xe5\xde\x98\xfe\xf2\xdb\x63\xe1\x35\xe4\xed\xdc\x95\x7e\x1f\x7d\xa6\xd5\xcd\x31\xbf\x5a\x10\xf7\x61\x4b\x08\x19\xee\x42\xdc\x05\x3f\x6e\x20\xf6\xea\xe8\xe8\x11\xcb\xbe\x5e\x1d\x1d\xbd\x7a\x24\x81\xbf\x7a\xbd\x3a\x3a\x61\xa5\x9e\x30\x3e\x86\xf6\x6f\x86\x54\x37\x87\x66\x50\xf5\x31\x1f\x3c\x69\x86\x8f\xe1\xef\x47\xd8\x34\xe0\x7b\xfb\xee\x53\xd7\xfb\x0d\x14\x79\x1b\x3d\x3e\x37\x83\x94\xb7\x51\xd6\xbc\x36\x5f\x7e\x7b\x33\xce\x8f\xf3\x34\x3e\xb1\xeb\x44\xdf\x5b\x8f\xce\xbf\x5f\xae\xe7\xe3\xa4\x4c\xe2\xa2\x6a\xf2\x26\x7d\x1d\xc5\x27\xbf\xaf\x8e\x3a\xc6\xf0\x17\x9b\xf9\x6f\x36\xdd\xb7\x91\x66\xcd\x00\xdf\xda\xdf\xdf\x3f\x2e\x52\xf7\xfa\x29\xde\xff\xf7\xab\xe7\xfa\x7e\x3d\xb4\x73\x93\xb6\x73\x96\xb4\x73\x89\xef\xf1\x39\x6e\xe7\x24\x6f\xe7\x3a\x6f\xe7\xaa\xd2\x7d\x5d\x3b\x27\x99\xbf\x9a\xa4\x9d\xb3\xd4\x63\x23\x4c\xed\x5c\xe6\xfe\x5c\xdc\xbb\xaf\x87\xbe\x9d\xb3\xae\x9d\x9b\xa2\x9d\xcb\xac\x9d\xbb\xdc\xef\xcf\x0b\xf7\xeb\xaa\x69\xe7\x8e\xf8\x48\xbd\xad\x31\x6e\xe7\x94\x78\x28\xdb\xb9\x6b\xbc\xbf\x3e\xe8\x77\x9e\xcd\xdb\x39\xe5\xd9\xa2\x9d\x27\xc6\x56\xb6\x73\x3a\xb5\x73\xc3\x78\x89\x99\xaa\x9d\x43\x68\xe7\x64\x68\xe7\xa4\xf1\xf9\x34\x65\x3b\x97\x71\x3b\x07\x62\x96\xeb\xc4\x6f\xd7\xce\x23\x6d\xc7\xed\xdc\xf5\xfe\x9d\xdf\xe2\xc2\xed\x41\x5f\x7c\x9e\xba\x76\xee\x93\x76\x9e\xf2\x76\x2e\x85\x09\x5d\xd5\xce\x79\xf0\xf8\xe5\x7a\x91\xfa\x58\x69\x2b\xcd\xda\xb9\x0e\xed\x5c\x0d\x3e\x8e\x6c\xf2\x7e\xa6\xc6\x63\x1c\xdb\x8e\x4d\x3b\x57\x59\x3b\x8f\x99\x8f\x6d\xec\xdb\xb9\xea\xfc\xf7\x34\x6e\xe7\x31\xf1\xeb\xcc\x0d\x7b\x2e\xbf\x35\x75\x3b\x17\x59\x3b\xa7\xac\x53\xd5\xce\x03\xf6\x4d\x1d\x5b\x58\xa3\x84\xf1\x8c\xed\x5c\x6a\x1d\xc1\x8a\xb2\x69\xe7\x02\x3b\xd7\x6e\xfb\x44\x76\x8f\xb3\x76\x9e\x92\x76\x4e\xe2\x76\x2e\x0b\xb7\x49\x5d\xb7\x73\x88\xdb\xb9\x08\xfe\xb9\x00\x0f\xb5\x46\xd8\xb6\x2f\x7c\x3e\x3d\xe3\x1f\x7d\xdc\xf4\x35\xd2\x4f\x68\xe7\x26\x6b\xe7\x1e\x1f\x19\xdc\x66\x21\x73\xfb\xb1\xf6\x53\xe6\xf3\x28\xaa\x76\xee\x46\x6f\x23\x4f\xda\x39\x2f\x7d\xbd\x59\xfb\x0a\x5b\xd5\xed\x3c\x14\xed\x5c\x73\x0f\x3e\x0b\xbe\xd2\x2e\xbe\x3b\xb8\x0f\x62\x7b\x9e\x33\xff\xac\xdc\x46\x99\xec\x63\xfd\xd4\xee\x33\x21\xf1\x7b\x19\x43\xac\xb5\x4d\x42\x3b\xf7\x69\x3b\x17\xb9\xcf\xc9\xda\xe9\xdc\x2e\x55\xef\xe3\xcb\x6a\xf7\xe5\x2e\x78\x1f\x5c\x1b\x53\x5f\x4f\xfa\xc7\x07\x18\x2b\x18\x8e\x9f\x0e\x95\xdb\x9a\xb5\x18\x73\xcf\x19\xf4\x31\x2a\xae\x8a\xb1\x9d\xe3\xce\x7d\x30\xad\x7d\xbe\xcc\x89\xb8\xe8\x68\x77\x70\x3f\xc2\xa7\x19\x4f\x39\xba\xbf\x8f\x85\xcf\x09\xbb\xf2\x9d\x3c\xc3\xba\x30\x5f\x7c\x63\x68\xda\x39\x6b\xb4\xee\x9d\xaf\x3d\xfd\x7c\x9a\x43\x72\xe6\x8a\x3d\xf0\xc1\xc4\xfd\xd3\xf2\xcd\x93\x72\x88\xe1\xc9\x8b\x65\x10\x6b\xed\xa1\xfc\xe1\x9a\xe6\x49\xd9\xc3\xda\xfa\x03\xb9\xe3\xe6\xcc\xbe\x70\xe6\x58\x66\xa5\xbc\x51\x16\xf9\x73\x12\x47\x11\x57\x2f\x92\x38\x3e\x53\xc6\x2f\xcd\x98\xaa\xd8\x33\xc0\x54\x38\xd2\xc5\xc1\xd1\x06\x2f\x07\xa1\x41\x31\xd0\x9b\xac\xc1\x67\xee\x27\xe2\xb9\x66\x91\x1a\xbc\x4d\x90\xcb\x58\xd6\xe0\x91\xc3\xe7\x41\x8c\xab\x6e\x1c\xf9\x89\x82\x7a\xf2\xcf\x20\xe1\xa0\xeb\x64\x1f\x10\xeb\x21\x76\x45\xa4\x81\xce\x25\x91\x58\x3b\x43\xbb\x8b\x5d\xdd\x67\xb0\x67\x84\xc5\x7d\x4d\x59\x4c\xdc\x5f\xd0\xf8\x24\x20\xee\x6b\xe5\x49\xd1\xf0\xc8\x6c\x5e\x2a\x14\x1e\x9a\x8c\xe2\x20\x4f\x9e\xc5\x9f\xea\xe2\xcb\x84\xc1\xf3\xa9\x13\xa9\x15\x7a\x0e\xd4\x77\xa4\xb1\xce\xa1\x9c\xb4\x0c\x15\xc0\xe9\xb9\x9e\x90\x86\x49\xbb\xbd\x43\x31\xd2\xa0\x23\xe5\x07\x4f\x33\x38\x39\xe9\x92\x67\x4a\x7e\x4f\x94\xaa\x72\x4f\xd5\xa4\xdc\x34\x77\x28\xb7\x74\x5b\x28\x8d\x07\x4f\x63\x59\xd9\xce\x53\xad\x94\x89\x2c\xe9\x5d\x6e\x40\x03\xa0\x1b\x96\x8e\x82\xa7\x74\x9c\x1f\xca\xc7\xef\xa4\x10\x28\x0c\x54\xc6\xd2\x7d\xda\xce\x7d\xe6\xa9\x8d\xb4\x58\x96\x9e\x42\xec\x7b\xed\xa9\x35\xcb\x0e\xe9\x97\xb4\x0d\xc5\x21\x80\x8d\xde\x04\xa7\x7e\x46\x4d\x6a\x0f\xe4\xb8\x72\x5a\x09\xd5\x80\x2e\x40\x2d\x18\x37\xed\x35\x41\xd4\x66\xa1\x82\x99\x53\x44\xec\x48\xfb\x50\x4e\x52\xad\x01\x43\xec\x29\x8d\xdf\xb0\x17\x69\x37\x6f\xfc\x3e\x52\x76\xa6\x34\x87\xed\xa6\x5e\xf4\x35\x38\x88\x30\xf7\x21\xf1\x79\x72\x1d\xc0\x82\x62\x40\x59\xb0\x3b\xb4\x0f\xea\x55\x90\x56\x3b\xa7\x22\xa4\x76\xfa\xef\x27\xd1\x48\x28\x5e\xe1\xd4\x67\xd0\xb3\x80\x9f\x51\x26\xc9\xbc\x0c\x5f\x48\x44\x2d\x32\x07\x18\x9e\xa7\x5f\xc6\xcb\x18\xf9\xce\xbc\xb1\x23\x76\xc2\x76\x00\x1b\x34\x12\x1a\x53\x68\x4d\xeb\xcc\xe9\x37\xc0\x98\x40\x45\x06\x07\xcc\xa6\x77\xfa\x90\xe9\x7b\x5d\x7a\x1b\x8c\x1d\x9b\xf2\xb9\x1f\xdd\x5e\x9d\x6c\x01\x2d\x81\xee\x61\x37\xee\x9b\x4a\xa7\xdf\x7d\xee\xf7\x16\xbd\x28\x48\xe5\x3e\xcf\xfa\x0e\xb1\xa8\x6a\xe6\x3e\x61\xeb\xd1\x3b\x8d\x33\x7a\x9f\xb9\x3f\x57\x02\x5b\xd6\x65\x14\xa5\xc1\x77\x01\x63\xbe\x33\x6f\xda\xc5\x8f\x48\x0e\xf4\x85\x3f\x30\x7e\xfc\x6a\x28\x3d\x09\xf0\x99\xb1\x1b\x90\xd7\xbe\xb6\xc4\x0e\x00\x5e\x89\x0a\x35\x83\x53\x48\xd6\xd8\xe8\x52\x27\x3a\x54\xf9\xda\x40\xe1\x4a\x51\x3b\x6c\x1c\x3a\x7f\xa6\x94\x7f\xb3\xce\xc4\x11\x73\xaf\x63\x4f\x26\xcc\x1f\xfa\xce\x1a\x33\x36\x24\x77\xac\x78\xc5\x07\x58\x53\x5e\xb1\xc6\xdd\xcb\xee\xd0\x5f\xfc\x64\xc8\xdc\x9f\xf1\x41\x7c\x62\x14\x85\xa5\xef\x24\x75\x3f\x63\xac\xb4\x47\xc2\xa2\x8d\x46\xd4\x1a\xda\x1f\xcb\x7e\xd8\xc0\xfc\xad\x77\x5c\xe0\x59\xa8\x33\x14\xd4\x7c\x6e\xf0\xbe\xa1\x87\x48\x11\xd6\x11\x9f\x2b\xb5\x3e\x75\xea\x34\x9c\x71\x42\xc3\x59\x0f\xe2\x9b\x67\x90\x4e\x83\x7e\xa7\x1d\xec\x49\xc2\x86\x3a\x62\xff\x52\xf2\xc2\x70\x2b\x71\x1c\x41\x12\x90\x78\xc1\x1c\x2b\x71\xd4\x6e\x07\xe6\x85\x6c\xa2\x1f\xc6\xd8\x89\xc2\x32\xd6\x26\x56\x62\x17\x29\x80\xc6\x82\xa5\x26\x6b\x52\x8f\x7f\xfa\x01\x13\x88\x09\x70\x68\x54\x3f\x19\x36\x1a\xda\xb9\xcb\x24\x37\x6a\xc7\x3d\x24\x0b\x7d\x21\x49\x49\xd6\xa5\x12\x3f\x63\x40\xee\xd5\x95\xd3\x78\x23\x04\x9d\xfb\x59\x06\x09\x09\xee\x13\xe0\x6c\x2a\xf9\xca\x1a\x23\x19\x86\xda\x7d\x34\x91\xff\x98\x84\x4c\x25\x77\x52\x5f\x47\xa3\xfb\x85\x4b\x2e\xec\x8c\xdd\x0c\x6f\x3a\xc7\xe5\x62\x50\x7c\x8c\xfe\xb9\x10\xce\x85\xca\xb1\x18\x3b\x96\x92\x5c\xd8\xc1\x6c\x9f\xfb\x35\xec\x88\xfc\xec\xf5\xc2\xcf\xe8\x8b\x3e\x18\x17\x6b\x89\x9d\xf0\xeb\x6c\x91\xc8\x9d\x8f\x3b\x51\xdb\xd8\x94\xb5\x03\x1b\x3a\xc5\x76\xad\x3c\x04\x96\xe0\x13\xd8\x81\x78\xc1\x67\xb8\x86\x8d\x91\x99\xd8\x77\x52\x1e\x20\x8f\x70\x6f\x18\x3d\xe6\xc1\x27\xe2\x10\x6c\x42\x56\x98\x6c\x4b\x1d\x47\x90\x42\xa9\x64\x35\x2f\xe4\xb7\xc9\xd5\x41\x18\x5f\x29\x0e\x26\xb7\x7b\x27\x9f\xc5\x87\x18\x3b\x52\xdc\x7c\x3f\xf7\x18\x03\x2b\x72\x49\xbb\x5e\xd8\x8d\x54\x26\xae\xc0\x39\x72\x06\x84\x0e\xbf\xc1\x6e\xac\x21\x36\x61\xec\xe0\xac\xad\x73\x26\x12\xb7\xc4\x67\xe5\xd2\xca\xf2\x5b\xe7\xd7\xf3\xee\xe0\xbf\xe4\x6a\xb0\x10\x0c\x07\xfb\xb1\x33\x32\x0a\xd9\x8b\xed\x79\x07\xf3\xb0\x3b\x2f\x8b\x91\xd1\xf1\x91\x1c\x87\xbd\x68\x8b\x79\x2f\xa5\x41\x62\x1e\x1f\x6c\x3a\x97\x8a\x86\xcf\x93\xc7\x10\xf9\x11\x2c\xe2\x59\xee\x81\x94\x9a\xdf\x4a\xc6\x5b\xf9\xa1\xf1\xf8\x60\xbe\xb6\xe6\xf2\xd3\x05\xe7\x2c\x57\xa6\xee\x8b\x8c\xa7\x53\x79\x80\x36\x4d\x82\x8e\x92\x8d\x4b\xd9\x61\xf2\x5c\xcc\x9a\x91\x1f\x90\xdc\xb6\x26\xca\x3d\xcc\x91\x31\x5b\x09\xa7\x14\x57\x50\x8c\xf0\x1c\x79\x14\xfb\x7f\xb4\xcd\xe8\x18\x6e\xeb\x28\x3e\x52\x8d\x3e\x8f\x58\x31\x08\x8e\x81\x55\x56\xba\xe9\x7d\xfe\x60\x2f\x6b\xdb\xc9\xe6\x59\xee\xe2\x20\x51\x19\x03\xbf\x81\xbb\xb0\x46\xd8\xc0\x6c\x5e\xc8\xce\x5a\xe3\x41\xa2\x61\x50\x6c\x19\x69\x2f\x0f\xb8\x05\x67\x62\xfd\xc1\x76\xec\x82\x8d\x42\xae\xfc\xda\x38\xfe\x32\xd6\x41\xe5\x58\x6b\x23\x55\x19\xb6\x56\x9f\xb5\xca\x51\x83\xf3\x04\xf0\x91\x71\x90\x2b\x2c\x37\x15\xc2\x9e\xe0\x3e\x85\xdc\x5f\x6c\x46\xcc\x82\x17\xa1\xf6\xf5\x63\x1c\xac\x2b\x9c\x85\x35\xc9\x82\xc7\x2b\x36\x32\x5f\xce\x7c\xde\xc4\x19\xf3\xec\x95\x7b\xc8\x41\x41\x9c\x29\x51\xae\xc4\xb6\xe4\xda\x5e\x78\x81\x0d\x3a\xf1\xb9\x5c\x1c\x92\xef\xf5\x82\x89\xb9\xc7\x6c\xd0\xfa\x13\x67\xa9\x4a\x5e\xe0\xa1\xe5\xa9\xc4\xb9\x1d\xeb\x10\xab\xac\x63\xfe\x3c\x78\x5e\x21\xfe\x2a\xc5\x03\xb8\x92\x89\xd7\xc4\x2a\x5b\x93\x9b\x6a\xe5\x8b\x45\x74\x99\x8f\xe5\x9e\x93\xf0\x2b\xd6\x8c\xfe\x8d\x93\x0c\x87\x7c\xd4\x8b\x17\x1a\x3e\xc5\xce\x75\xad\x54\x34\x3a\x5f\x02\x37\x7b\x61\x13\x76\x99\x94\x1f\x82\x72\x55\x9d\x78\x3c\x99\xed\x4a\xcf\x45\xa9\xc6\x1a\xc4\x37\x18\x2f\xb6\x36\x3e\xdb\x3b\xde\x80\x11\x93\xca\x99\x0b\x7f\xe1\x9d\xf9\x83\x69\xc4\x2d\x63\xe9\x15\x17\xc4\x09\x73\x84\xbf\x8f\x37\xda\xc8\xa7\xcf\x35\x00\x2f\x9e\xcf\x84\x33\x9d\xca\x55\x71\xf5\x04\x41\xf9\xdc\x2a\xcb\xdd\x0d\xdd\x23\x26\xef\xac\xad\xdc\xdd\xc2\xf3\x84\xe4\x97\xa8\xa8\xdc\x3f\x0d\x89\xc8\xa4\x49\xfe\x59\x19\x99\xc6\x45\x52\x36\x4d\xf9\x22\x32\xf2\x9e\x73\x02\x5f\x62\x17\x6a\xb9\x56\xa9\x1a\x6f\xee\x35\x3a\x85\x7a\x6a\x3d\x85\xf4\x4b\x38\x2c\xb5\x13\xd2\x0e\x90\x02\x05\x58\x6a\x28\x9f\xee\x54\xd1\x16\xbf\x21\x11\x09\xf7\x5c\x14\x63\x50\xd5\x9d\x39\x11\x12\x77\xd5\x69\x80\x6e\xc6\xb1\xd4\x7d\x1e\xdb\x35\x83\x9e\x12\x76\x50\x94\x4c\xd4\x9b\x10\xb2\x54\x52\xba\xcc\x02\x4a\x49\xef\xd8\x25\x53\x3a\x40\x1e\xe7\xaa\xcc\x66\xa2\xe7\xc8\x9b\x42\x12\x0c\x1b\x91\xca\x96\x8a\x2a\xf0\x4b\xff\x56\xf1\xaf\x3f\x0f\x65\x83\x1b\x55\x8f\x79\x76\xb8\x67\xe7\xed\xe1\xe5\x7f\x46\x48\x3f\xdc\xa0\x85\xf6\x63\xc7\x57\x3e\x09\xf1\x87\x5b\x7c\x52\xa8\x3f\x69\x96\x2f\x15\xf2\x8f\x4f\xef\x63\xe8\x3f\x6b\x03\x2e\x4e\x9a\x2f\x19\xf9\xcf\x2f\x23\x41\x57\xa1\x0d\x85\x76\xe0\x1a\xc9\x1d\x7c\x1b\xff\x1b\x95\x12\x2d\x3e\x83\xb7\x67\x72\x47\x92\x16\x7f\x45\x66\x20\x69\xf1\xfd\x5c\x32\xda\xca\x15\x85\xd3\x1d\x62\x28\x53\xbc\x8f\xa2\xd1\xd0\x24\xe2\xbe\x08\x4e\x4d\xad\xbd\xd8\xe3\xd9\x64\x59\xe7\xe5\x2d\x68\x1f\x98\x03\xbd\x04\x63\x4c\x0e\x69\x37\x9c\x78\x44\xca\x43\x41\x53\x51\xe0\x51\x73\x9a\xb4\x03\xb6\x60\x16\xe9\x19\x9b\x30\x27\x52\x31\xb2\x26\x4f\xbd\xcf\x58\xe9\xf9\x66\x09\xc6\x64\x78\xef\xf7\x98\x74\xea\x1c\x43\x8c\x6a\xe6\x4e\x6f\xa1\xaf\xd3\x22\x03\x1a\xed\xc4\x48\xb2\x37\x2a\x53\xf0\x3c\xd7\xe8\x07\x1c\x84\x0e\x9b\x0c\xea\x5c\xd2\x99\x6c\x15\x85\x24\xed\x43\x25\xa0\x1f\x26\x9b\x4b\x97\x9c\xb6\x9b\x72\x63\x1d\xe9\x17\x1a\x0a\xc5\x4b\x7a\xa7\x0d\x8c\x0f\x0a\x83\x0d\xc0\x39\x68\x5f\x22\xf9\x54\xf6\x8e\xb9\xa3\xb0\xae\x10\x35\xa4\xbf\x41\x65\x1d\x70\x2c\x64\xc2\xc4\xde\xa9\x04\x36\xb3\x12\x62\xe3\x18\xc7\xfa\x22\x05\xe8\xab\xd2\xae\x24\x36\xe2\x35\x8a\x8a\x42\xdf\xf0\x9f\x85\xe2\x55\x9a\x4b\xa2\xf2\x1b\x6b\x01\xe6\x42\x37\x6d\x77\x0c\x8a\x26\xe9\x8c\x2f\x80\xa1\x56\x4a\x48\x44\xdb\x33\x5f\x1f\xec\xd3\x8b\x0a\x1a\x55\x2d\x3c\xc7\x90\x23\xa0\x79\x46\x5b\x73\x2f\x1f\x20\xd7\x16\xac\x37\xfb\x6a\xdc\xbd\x4a\x71\x21\xf1\xcf\x56\xf2\x1c\xb5\x83\x5c\x3a\x55\x47\x6e\x14\x2a\x87\x9a\x14\x19\x54\x3a\x69\x7c\xad\x17\x2a\x8c\xdf\x63\x4f\x6c\x8b\x4f\x43\x85\x59\x57\x72\x06\xb9\x94\x77\xe4\x5a\xac\x3c\xc9\xda\xa4\x92\x9d\xcc\x9b\x58\x48\x54\x56\x42\x4e\x5b\xd9\x2c\xf3\x98\xb5\xbd\x85\x44\xd2\x2a\xf3\x31\xdb\xfd\xb5\xca\x71\xda\x99\x43\x16\xa5\xb1\x4a\x60\x89\xfb\x1f\xd4\x92\x5c\x8b\x6c\x63\x7d\x69\xbf\x53\x19\x0b\xc9\x49\xbc\x34\xdd\xa1\x74\x83\xef\x8c\x95\xdb\xde\x7c\x6b\x90\xcc\x68\xdc\x96\x48\xcf\x20\xbb\x10\xc3\xb6\xc7\x52\xbb\x24\x01\x23\x8c\xee\xc6\xda\xa9\x1e\x3c\xf7\x21\x0d\x26\xd9\xdd\xa8\xf3\xe8\xb6\xb0\x52\x71\xe1\x31\xdc\xc9\xcf\xac\xf4\x37\xb9\x0c\x62\x9e\xcb\x7a\xe2\x9f\xb9\x4a\x04\xf8\x79\xa5\xf5\xe1\xb9\x46\xe5\x45\xe2\x06\xfa\x3f\xa8\xdc\x8d\xcd\xe8\x2b\xd7\x0e\x39\xef\x70\x90\x7c\xd9\x91\x2f\x3d\xe6\x90\x23\xe4\x7a\x7c\x09\xdf\x66\x5e\xc4\x1d\xd2\x09\xec\x2a\x2a\xa7\xe3\xb1\xca\x20\xbd\x62\x12\xbb\xe3\xf7\x45\x2f\x89\x22\x79\x09\x57\x68\x54\x4a\xc0\x0f\xc1\x36\x7c\xc0\xe4\x7c\xe5\xf9\x1c\x1b\x2d\x71\x81\xaf\xd1\x17\x52\x9d\x35\x61\x7c\x56\x42\x2b\x3c\xce\x1b\x49\xb9\x4c\xfe\x1b\xab\x0c\x67\xfe\x31\x4a\x26\x8c\x2e\x11\x63\xed\x68\x5b\x49\x5e\xfe\x50\xa9\x34\x17\x4f\x87\x13\x0b\x41\x58\x64\xb2\x5e\xa5\x48\xee\x29\x06\xff\xbd\xd6\x8e\x2d\x73\x9b\x84\x93\xe0\x1e\xbc\x25\x59\x24\x7c\xaf\x53\x01\x83\xe3\x2c\x92\x9a\xb6\xcc\x56\xd9\xe7\x7c\xa6\x52\x9f\xd8\x05\xfb\x23\xff\xad\xa4\xfe\x34\x3e\xf3\x5c\x81\xf2\x50\x73\x0f\x72\x99\x3b\xc5\xca\x43\xad\xfd\x11\x1e\xf3\x25\x84\xcb\x63\x13\x5b\x38\x4c\xd9\x3c\x6b\x33\x38\x4e\x5f\x46\xbe\xdc\x7f\x3a\xf9\xff\x63\x57\x18\x75\x60\x4a\x62\x74\x16\x32\x4c\x87\xa2\x6d\x2e\x75\xb2\x28\x93\x54\x85\xd8\x45\x9d\xd8\x6f\xda\x0c\xb0\xf3\x39\xda\x40\x59\x54\xc9\xa0\xe2\xed\x4d\xc5\x42\x94\x59\x9f\xa3\x7f\xb6\x67\x6a\x29\x9b\xc1\xd5\x89\x9d\x65\xd1\x2e\x32\x19\x26\xee\xee\x39\x0f\x28\x94\x65\x1e\xb5\x90\x1e\x64\x1e\xc5\x04\xac\x50\x7e\x47\xd1\x20\xa8\x88\x1a\x54\x28\x25\xea\xef\x52\x1a\x8f\xae\xd4\x33\xc2\xf3\xd1\x36\x2d\x46\x9f\x70\xd0\xfd\x93\x40\x7d\xb4\xdd\x27\x45\xeb\x53\x67\xfc\x52\x21\xfb\xa4\x79\x2a\x6e\x9b\x67\xed\x5d\xc7\xd9\xcb\x9c\xfd\xbb\x7f\xa4\x7f\xe0\xfc\x9f\x98\x38\xbe\x5f\x06\xcf\x52\x69\x7c\x60\x16\x61\xd9\xac\x13\x53\x84\x19\xa0\xc6\xed\xdc\xd2\xe8\x9b\x88\xc4\x71\x59\xeb\x9c\xdc\xe0\x59\x93\xf8\xe1\xb3\x15\xdb\x55\xd4\x07\x0f\x52\x6d\xae\x5a\x76\xad\x3d\x0b\xf6\xda\xf4\xb5\x0d\x23\x65\x45\xf0\xc2\x98\x4a\xef\x19\xb0\x13\xe3\xb4\x8d\x50\x65\xb6\xa0\x2a\x03\xec\xb9\x4c\x9c\xb1\xd8\x2b\x75\x1c\xb1\x8d\x48\x15\xec\xad\xd0\x28\x86\x02\xf6\x0c\x99\xb3\x87\x52\x6c\xa7\xea\x1d\x9b\x96\x02\xa1\x15\xd8\x33\x9f\x3b\xb1\x1c\x94\xe1\x83\x14\x94\x6d\xde\xe6\xce\x28\x52\x65\x5e\xdb\xa0\xcd\x7c\x3c\xb0\x25\x2b\xb0\x26\x3e\xa7\x4e\x05\xe1\x4a\x45\xde\x65\xa3\xc9\x58\x7f\xe1\x59\x79\xd2\xf9\x35\xfa\x2a\xb4\x91\x51\x05\xef\x0f\xe6\x3f\x2c\xb8\xa9\xf3\x79\x7d\xac\xe2\x7c\xe6\x6b\x01\x53\x82\x19\xd0\xf7\xa8\xf3\x66\x83\x36\x1e\xec\xcc\x64\xed\x45\x54\x2b\x2e\x17\xce\x3c\x6c\x23\xb7\x74\x95\x31\x68\x73\x29\x97\x82\x5a\x4e\xec\xd8\xa6\x73\xee\x8c\x17\x36\xd1\x2d\xf8\x29\xd6\x34\x68\xb3\x1e\x06\x1c\xeb\x10\x83\x6d\x0a\x8a\x65\x82\xdd\x0b\xeb\x2f\xc5\x8a\xe9\x67\x0c\xce\x60\x78\x2f\xa5\x86\x6c\xc3\xf5\xc6\x79\x3c\xfc\x0b\x56\x65\x4c\x36\x73\xb6\x65\xb6\xd5\x99\x50\x98\x2c\xfe\x8b\x7f\x70\x6f\xc8\x0f\xbe\x33\xa8\xc0\x4e\x2c\xa0\xae\xc9\x1b\xb1\x36\xbe\x61\xad\xa9\xfc\xa3\x5f\x36\xc1\x72\xef\x9f\xf1\xf2\x5e\x8a\x25\xc2\x4e\xb1\x33\x6b\xcb\x5a\xa1\x44\x6c\x33\x7a\xd4\xb9\xd0\x41\x6c\x4f\x85\x6b\xc6\x64\x3e\x52\xb8\x02\x24\x7f\x98\xda\xd3\xc6\xc7\xa4\x0d\x7e\xe6\x43\x2c\xa0\x2a\x06\x6d\xd8\xa0\x86\x7a\xc5\x9f\x9d\x67\x1d\xb4\x89\xad\x4a\x9b\x6d\xf2\x57\x9e\x97\xac\x18\x2f\xbf\x40\xd5\xd9\x66\x51\xe5\xeb\xda\x6b\x13\xcc\xe2\x3f\x78\x11\x9b\x5c\x43\x3c\x15\x62\xe2\xa1\x3b\x6c\xea\x63\x9f\x5e\xb8\xc0\x5c\x99\xa7\x29\xaa\x42\x6a\xa4\x70\xdf\x4b\xfa\x43\xfe\xca\xa4\x62\x78\xb7\x43\x22\x83\x57\xef\xe0\x00\xd8\xcd\x0e\xa5\x14\xee\xcb\x56\x91\x58\x2a\x86\x85\x94\x7c\xe3\x6b\x62\x9b\xc3\x3a\x7f\xcb\x5a\x93\x37\x13\x6d\xc4\x4f\xb2\x21\xf9\x11\x05\x39\x56\x77\x17\xe1\x51\x5e\x63\xec\x7e\xcf\x78\xf0\xdd\xbb\xce\x3b\x3e\x82\xa1\x2f\x9a\x4d\x0f\x7c\xf7\xd1\xff\x06\x7b\x72\x26\x7d\x3a\xeb\x7d\xda\x4c\xff\x05\x59\xf4\x13\xee\x5b\x34\xc5\xf3\x92\xe8\xcb\xd4\xef\xee\xf8\x9f\xba\x7f\x75\xd5\x3e\xd7\xf3\xc4\x42\xb6\x6c\x9e\xea\xf0\xcd\xa0\xd8\x6a\xc4\x0f\xeb\xc2\x31\xb6\x53\xbe\xb0\xaa\x90\x70\xae\x51\x8c\x19\xe6\x0d\x7e\x4f\xa7\xf3\xc8\x60\xc6\xa0\x7b\x46\x55\x6f\xb8\x97\xcf\xbd\xae\xf5\xc3\xa1\x8d\x49\x98\xc1\xe7\x41\x87\x10\xea\x1b\xf7\x25\xaa\x9a\x2c\x95\xf6\x58\x87\x0a\xec\xdc\x73\xe2\x78\x69\x95\x91\xda\xb1\xfb\xb1\x4a\xfd\x72\x00\xa4\xd6\x41\x29\xd3\x07\x85\xce\x7b\x27\x3a\xa0\x25\xfb\x59\xce\x53\x05\x06\x7b\x57\x3a\x68\x15\x2f\x67\xbf\x73\x9d\x19\x57\x65\x86\x5c\x64\x95\x01\x1d\x0a\xea\x75\xf0\x24\xd3\xe1\x39\xdb\xec\xec\x74\xd8\x20\xf7\xbc\x65\x3a\xa1\x12\xa7\x4f\x3c\xcf\xa0\xb6\x93\x65\x43\x3e\xf7\xca\x4a\xa5\x1c\x74\xc0\x96\x03\x06\x15\x8d\xb7\x03\xf6\xc3\x1f\xa6\x7b\x76\x0f\xee\x77\xc1\x67\xc0\xcf\xfd\x8d\x19\xf2\x3c\xf4\x2f\xa6\x9f\x80\xce\xfd\x2d\x3d\x09\x6f\x1e\x9d\xd5\x4b\x41\xcd\xc3\x53\x12\xca\xa4\x79\xf5\xcf\xa2\x4c\x93\xe5\x59\x96\x67\x5f\x0a\x65\xfe\xd8\xff\xe8\x90\xcf\x86\xde\x79\xd2\x78\x63\x87\xc0\x62\x36\xf3\xbc\x3e\xe9\x70\x4e\xaa\x0a\xb5\xf1\xe3\xda\xab\x63\x76\x98\x30\xf7\xdf\x3b\x55\xb8\x06\x55\xe5\xec\xc0\xa9\x0e\xa0\xd5\xe2\xbd\x85\xaa\xb9\xc6\xdb\x52\xfd\xdf\x86\xfe\x9f\x27\xd1\x41\x39\xd3\xae\x4b\x45\x6e\xf2\xaa\xb0\xf1\x7d\xfd\x6e\x31\xae\x9c\x4e\xcc\x80\x53\x83\xfe\x47\x06\x6e\xbb\xe8\xf0\xa2\x56\x9d\xa0\xf2\xf8\x9e\x16\x8d\x9f\x78\x3e\x67\xbe\xd3\xe8\x7c\x67\x92\x7e\x4f\x55\x01\x2c\x73\xf1\x66\x1d\x5c\x84\xa7\xf0\x1c\xbc\xb3\x96\x56\xb1\xff\x07\xa9\x9c\xd3\x60\x97\x46\x95\xd8\x58\x98\x43\xdc\x63\xab\x41\x07\x69\x0a\x9d\x12\x4f\x74\x78\x09\x1d\xd1\x35\xce\x67\x0d\xaf\x46\x6f\x77\x6c\xbc\x0a\x6a\xfc\xbc\xf7\x71\xdb\x41\x36\x1d\x40\x0b\x3a\x14\x58\x56\xd2\x43\x95\x6c\x3e\x79\xd5\x3f\x09\x3e\x2f\xee\x05\x2b\x59\x5b\xe6\xb0\x54\x4f\xe1\x9d\xe0\x93\xf1\x32\x1d\xba\xb0\x6a\x77\xec\xeb\x47\x9b\x8d\xf0\xb7\x53\x15\x77\x5a\x76\x38\xb4\x4e\xb9\x0e\x2f\xa0\x69\x8c\x63\xaa\x4a\x0e\xb6\x82\x87\xd8\xb7\xd6\x69\xf8\xe4\xff\x02\x00\x00\xff\xff\x42\xbd\xcd\xf0\x00\x40\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 36864, mode: os.FileMode(420), modTime: time.Unix(1620517055, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_stream_tables.down.sql":     _1_create_stream_tablesDownSql,
	"1_create_stream_tables.up.sql":       _1_create_stream_tablesUpSql,
	"2_append_to_store.down.sql":          _2_append_to_storeDownSql,
	"2_append_to_store.up.sql":            _2_append_to_storeUpSql,
	"3_notification_triggers.down.sql":    _3_notification_triggersDownSql,
	"3_notification_triggers.up.sql":      _3_notification_triggersUpSql,
	"4_subscriptions_checkpoint.down.sql": _4_subscriptions_checkpointDownSql,
	"4_subscriptions_checkpoint.up.sql":   _4_subscriptions_checkpointUpSql,
	"5_correlated_events.down.sql":        _5_correlated_eventsDownSql,
	"5_correlated_events.up.sql":          _5_correlated_eventsUpSql,
	"bindata.go":                          bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_stream_tables.down.sql":     &bintree{_1_create_stream_tablesDownSql, map[string]*bintree{}},
	"1_create_stream_tables.up.sql":       &bintree{_1_create_stream_tablesUpSql, map[string]*bintree{}},
	"2_append_to_store.down.sql":          &bintree{_2_append_to_storeDownSql, map[string]*bintree{}},
	"2_append_to_store.up.sql":            &bintree{_2_append_to_storeUpSql, map[string]*bintree{}},
	"3_notification_triggers.down.sql":    &bintree{_3_notification_triggersDownSql, map[string]*bintree{}},
	"3_notification_triggers.up.sql":      &bintree{_3_notification_triggersUpSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.down.sql": &bintree{_4_subscriptions_checkpointDownSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.up.sql":   &bintree{_4_subscriptions_checkpointUpSql, map[string]*bintree{}},
	"5_correlated_events.down.sql":        &bintree{_5_correlated_eventsDownSql, map[string]*bintree{}},
	"5_correlated_events.up.sql":          &bintree{_5_correlated_eventsUpSql, map[string]*bintree{}},
	"bindata.go":                          &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
