// Code generated for package migrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// 1_create_stream_tables.down.sql
// 1_create_stream_tables.up.sql
// 2_append_to_store.down.sql
// 2_append_to_store.up.sql
// 3_notification_triggers.down.sql
// 3_notification_triggers.up.sql
// 4_subscriptions_checkpoint.down.sql
// 4_subscriptions_checkpoint.up.sql
// 5_correlated_events.down.sql
// 5_correlated_events.up.sql
// bindata.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_stream_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\x42\x12\x2a\x2e\x29\x4a\x4d\xcc\x2d\xb6\xe6\x02\x04\x00\x00\xff\xff\xc4\xa6\xb6\x55\x27\x00\x00\x00")

func _1_create_stream_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesDownSql,
		"1_create_stream_tables.down.sql",
	)
}

func _1_create_stream_tablesDownSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.down.sql", size: 39, mode: os.FileMode(420), modTime: time.Unix(1610579492, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_stream_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xc2\x30\x14\x84\x77\xff\x8a\x13\x13\x91\x32\x74\xef\x64\xc2\x0b\x4a\xeb\x3a\x95\x63\xa4\x32\x45\xa6\x79\xaa\x22\x91\xd0\x26\x06\xa9\xff\xbe\x22\x94\x34\x25\xa5\xf0\x16\x2f\x9f\xcf\xf7\xee\x1c\x19\x92\x96\x60\xe5\x4c\x11\x5a\xdf\xb0\xab\x5a\x4c\x05\x00\x94\x05\xfa\xb1\xf4\x62\x0f\xa7\x4e\x2d\xf4\x52\xa9\xb0\x23\x8e\x7c\xee\x3f\xdf\xf9\x02\x31\xd9\x73\xd3\x96\xdb\x7a\x02\x20\xd1\x96\x16\x64\x7a\x02\x98\x53\x2c\x97\xca\xe2\x2e\x14\x1d\xfd\x6c\x92\x27\x69\x56\x78\xa4\x15\xa6\x03\xf1\x10\x65\x11\x88\xe0\x5e\x88\x5f\x76\x79\xcf\xb5\x3f\xb9\x7d\xdb\x6c\xd7\x6e\x93\xb7\xfc\xb1\xe3\xfa\x95\xf3\x7a\x57\xad\xb9\x41\x46\x26\x91\x7f\xd8\xc5\x8d\xbb\x0d\x43\xb8\x0c\x77\x4e\x46\xc2\x37\x64\x32\x98\xf3\x78\xbe\xe1\x4e\xfa\x0c\x05\x1e\xb2\x54\xcf\x46\xca\x15\x7b\x57\x38\xef\xae\xc2\x57\xd2\xee\x77\x0f\x7f\xcc\x06\xc7\x27\xe2\xd4\x50\xb2\xd0\xff\x5d\x0a\x60\x28\x26\x43\x3a\xa2\xec\xf4\xa5\x46\x6d\x22\xd5\x98\x93\x22\x4b\x88\x64\x16\xc9\x39\x1d\xfa\xfd\x0a\x00\x00\xff\xff\x44\xce\xe9\x01\x8e\x02\x00\x00")

func _1_create_stream_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesUpSql,
		"1_create_stream_tables.up.sql",
	)
}

func _1_create_stream_tablesUpSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.up.sql", size: 654, mode: os.FileMode(420), modTime: time.Unix(1610579507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x2c\x28\x48\xcd\x4b\x89\x2f\xc9\x8f\x2f\x2e\xc9\x2f\x4a\xb5\xe6\x02\x04\x00\x00\xff\xff\x6d\xdf\x6a\xa8\x29\x00\x00\x00")

func _2_append_to_storeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeDownSql,
		"2_append_to_store.down.sql",
	)
}

func _2_append_to_storeDownSql() (*asset, error) {
	bytes, err := _2_append_to_storeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.down.sql", size: 41, mode: os.FileMode(420), modTime: time.Unix(1610579485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5d\xaf\xda\x46\x14\x7c\xf7\xaf\x18\xa1\x1b\x01\x2a\xa0\xde\x57\x28\x95\x7c\x61\x21\x54\xc4\x10\xdb\x24\xe9\x93\xb5\xf1\x1e\xca\x36\xf8\x43\xbb\xcb\x4d\x69\xd3\xff\x5e\x79\x6d\x8c\x4d\x1d\xa9\x52\x79\xc2\xb3\xc7\x7b\x66\xce\xc7\x78\xe1\x33\x37\x64\xd8\xf9\xf0\xd9\x7e\xeb\x2e\x18\x56\x07\x6f\x11\x6e\x76\x1e\x78\x9e\x53\x2a\x22\x93\x45\xda\x64\x8a\x06\x0e\x00\x44\xda\x28\xe2\x49\x64\xae\x39\x01\x21\xfb\x14\x8e\x2c\x5e\xc1\x52\x14\x0f\x0d\xfc\x95\x94\x96\x59\x1a\xc5\x27\x8a\xbf\x60\xe3\x85\x6c\xcd\xfc\xf2\x88\x5e\x29\x35\x51\xca\x13\x6a\xbf\x52\xe2\x39\xbf\x9e\x33\x2e\xf0\x4b\xb0\xf3\x5e\xca\x83\x84\x0c\x17\xdc\x70\x9b\xa2\x3c\x70\x86\xf0\x59\x78\xf0\xbd\x00\xa1\xfb\xb2\x65\x28\x59\xf6\xaa\xb4\xbd\x5b\x46\x67\x08\x37\xc0\xd3\x93\xb3\x64\x8b\xad\xeb\x33\x1b\x75\xe6\xda\xdc\xf4\x54\x2f\xdc\xe2\x67\xce\x0b\x5b\x6f\x3c\xc7\xc6\x8d\xc7\xf0\xc9\x28\x49\xaf\x04\x73\x22\x9c\xb9\x21\x6d\x2a\xc9\x37\x85\x38\x66\xca\x9e\xea\x9c\x62\x79\x94\x24\xaa\x80\x89\xbd\x23\x60\x5b\xb6\x08\xa1\x27\x35\x35\x0b\x6f\xbc\x70\xd7\xc5\xc3\x1e\xae\xfc\xdd\xbb\xea\x12\x0d\x6d\xa1\x8f\x6f\x99\xcf\x20\x05\xe6\x8d\x8a\xbb\xde\x12\x7a\xd2\x6c\xcc\xbc\xd5\xa7\x59\x29\x63\xb3\x82\xb7\x0b\xb1\xda\x1d\xbc\x25\xc2\xb7\xcc\x73\x50\xfd\xc6\x63\x2c\x14\x71\x43\xe0\x48\xe9\x2b\x28\x35\xea\x5a\x0b\x12\xa4\xa5\x7a\x90\x53\x72\x0f\x98\x1f\x96\x12\x6e\x2c\x07\x52\x8c\xd0\x48\x3d\xac\xa3\x3f\xb8\xdb\x03\x0b\x30\xa8\x69\x8f\x5a\x1c\x87\x15\xc9\x8a\xce\x3b\xfe\x85\xa0\x2f\x8a\x60\x32\xc8\x54\x1a\xc9\xcf\xf2\xcf\xb2\xfc\x0f\x75\x97\x29\xcc\x49\x6a\xc4\x5c\xd3\x9d\x5c\x57\x6f\xe7\xf8\x71\x66\x03\x98\xb7\xc4\x66\x35\xab\xbb\xbb\x27\x75\xcc\x54\x82\x2c\x37\x32\x91\xda\xc8\x18\x71\x96\xc6\x17\xa5\x28\x8d\xaf\xb0\xb3\x3b\xb9\xd5\xb0\x3d\xd1\x3f\xfd\x8c\xf1\xb3\xed\xc0\xbf\xf0\x2e\x0a\xad\xb2\xfb\xee\x26\x60\x60\x9f\x16\x6c\x6f\x17\xae\xff\xa0\xac\xbc\xe9\xc8\xe5\x99\xc4\x08\xf4\x47\x4e\xb1\x21\x31\xc5\x9b\x11\x4a\x6e\x66\x8a\x37\xfd\x51\x3b\xf3\xa8\x2b\x6f\xb7\xec\x4d\x1a\x2b\x4a\x28\x35\x5d\x65\xcd\x95\x2c\xfa\x5f\x54\x5f\x93\x32\x32\xfd\xcd\x46\xd9\xf1\x28\x16\x74\xf2\xdd\x15\x9a\x77\xa2\x3f\xe0\xf9\x9e\xd9\x15\x02\x1c\x8a\xe2\x4c\x09\x12\x11\x37\x30\x32\x21\x6d\x78\x92\x97\xfd\xa4\x7a\xd9\x27\xed\xd5\x9f\xdf\xff\x7e\xfb\x86\x41\xff\xaf\x9e\x5f\xdd\x32\x76\x4d\x6f\x8a\x7e\x01\x9b\x2c\xfa\x5d\x67\xe9\xc0\xdb\x7d\x1c\x0c\x87\x05\xd2\xff\xbb\x3f\x9c\x4e\xad\x65\x34\xf5\x17\xca\x6c\x36\x2b\x09\x32\x35\xd9\xfd\x51\xc3\xf0\xcf\xe7\x6a\xa6\xc6\x63\x7c\xa8\x94\xa4\x97\xe4\x33\x29\x0d\x7d\xca\x2e\xe7\x62\x2d\xb8\x32\x38\xaa\x2c\xc1\x73\x35\x24\x8d\xc5\xa8\x6e\x1a\xd4\x4d\x6f\xcc\xfc\xe8\x11\x94\xe2\x0e\xd5\x3e\x71\x87\x4a\x63\x6c\xbf\xd9\xb3\x60\x23\xe8\x56\x1e\x0b\x0c\xeb\xb5\xab\xcf\xa3\xff\x4a\xa0\xa3\x89\x8f\x54\x0a\xef\x7e\xc4\x2a\xdf\xfe\x1e\xa1\x7b\xf5\x0f\xb9\x28\x1c\xa7\x31\x7a\x5f\xa5\x39\x35\x0d\xb6\xde\x83\x2c\xc9\x2f\x86\x44\x59\xdd\xc3\x7e\x59\x7c\xb1\xda\xbe\x18\xb0\xb0\x61\xfa\x9d\x13\xf8\xbf\xfd\xb3\xfc\xd0\xe0\xfd\x81\xf9\xbf\xd6\xea\x2a\x5f\xef\xdc\x39\x87\x79\xcb\x99\xf3\xf4\x84\xad\xeb\xad\x0f\xee\x9a\x61\xbf\xdd\xaf\x83\xf7\xdb\x99\xf3\x4f\x00\x00\x00\xff\xff\x9a\x3b\x4a\xac\x77\x07\x00\x00")

func _2_append_to_storeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeUpSql,
		"2_append_to_store.up.sql",
	)
}

func _2_append_to_storeUpSql() (*asset, error) {
	bytes, err := _2_append_to_storeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.up.sql", size: 1911, mode: os.FileMode(420), modTime: time.Unix(1620518869, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\xcb\x2f\xc9\x4c\xab\x8c\x2f\x2e\x29\x4a\x4d\xcc\x8d\x2f\xa9\x2c\x48\x8d\xcf\xcf\x8b\x4f\x2c\x28\x48\xcd\x4b\x51\xf0\xf7\x53\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\xc2\xaf\x3d\x31\x27\x07\xbb\x36\x88\x3e\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\xbc\xf6\x5a\x13\x52\x9b\x98\x93\x63\xcd\x05\x08\x00\x00\xff\xff\xd0\xee\xfa\x52\xc7\x00\x00\x00")

func _3_notification_triggersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersDownSql,
		"3_notification_triggers.down.sql",
	)
}

func _3_notification_triggersDownSql() (*asset, error) {
	bytes, err := _3_notification_triggersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.down.sql", size: 199, mode: os.FileMode(420), modTime: time.Unix(1610579019, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xd1\xce\x9a\x30\x14\xc7\xef\xfb\x14\x27\x84\xa4\x9a\x98\x3d\x80\x5c\x31\x3c\x30\x12\x56\x58\x29\xd1\x3b\x52\x67\x67\x4c\x10\x98\xa2\x89\x99\x7b\xf7\x85\x8a\x62\x9d\xc6\x2f\x26\xdf\x9d\xbd\xeb\xf9\x9f\xf3\x6b\x0f\xfc\x7b\x3c\x8e\xae\x40\x88\x39\x70\x4c\x22\xd7\x43\xf0\x33\xe6\x89\x30\x66\x50\x56\xcd\xea\xd7\x21\x97\x45\x31\x18\x12\x8e\x22\xe3\x2c\x05\xc1\xc3\x20\x40\x4e\xdc\x14\x6c\x9b\x7c\xc5\x20\x64\x04\x00\x20\x41\xee\xc7\xfc\x3b\xd4\xcb\xfc\x54\x37\xa0\xb6\x2c\x0a\x3a\x02\x4a\x75\x42\xbb\x8e\x47\xa0\x7f\xcc\xad\xb5\x6d\x36\x4a\xae\xf3\xd5\xc2\x1a\x83\x45\x7b\x85\xe1\xf4\xcb\x45\x03\x63\xe9\x3a\x18\xdd\x07\x35\x87\x5a\xf5\x28\x13\xd4\x6a\xcf\x41\x6a\xaf\xca\xe6\x86\x73\x06\xf5\xda\x47\x6e\xa4\x7e\xef\x54\xf9\x53\xe5\xe5\x6e\x3d\x57\x9b\x13\xad\x03\x2d\x8b\x6a\x2e\x8b\xfc\x26\xe5\x01\x68\xaf\x36\xdb\x55\x55\x5a\x63\xa0\xc6\x99\x2d\xe8\x22\xfe\xff\x8d\x46\x70\xaf\x33\x93\xd2\x73\x3a\x71\x2c\x70\x26\x9e\x70\xd6\xaa\x91\x0b\xd9\x48\x03\xd5\x71\xce\x9a\x51\xf1\x97\x0e\x1d\xa2\x23\x27\x1f\xb5\x99\x0e\x41\x36\x71\x88\x6d\x43\xe4\xb2\x20\x73\x03\x84\x24\x4a\x82\xf4\x47\xe4\x10\xf2\xdc\x96\x57\xbf\xf4\x25\x7b\xde\xd8\xe2\xed\xd3\xb7\x4f\x5f\xf7\x69\x67\xbb\xab\x91\x99\x57\x65\x2e\xeb\x5a\x95\x0b\x8d\x73\x7d\x81\x1c\x42\x96\x22\x17\x3a\x10\x33\xd0\x8d\x6c\xf5\xce\x8f\x39\xa0\xeb\x7d\x03\x1e\x4f\x75\x00\x67\xe8\x65\x02\x21\xe1\xb1\x87\x93\x8c\xa3\x31\x8d\x1f\x1e\x7c\xe5\x9f\xcf\xba\x80\xf1\xee\x1c\xf2\x2f\x00\x00\xff\xff\x1a\x35\x60\x05\x40\x06\x00\x00")

func _3_notification_triggersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersUpSql,
		"3_notification_triggers.up.sql",
	)
}

func _3_notification_triggersUpSql() (*asset, error) {
	bytes, err := _3_notification_triggersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.up.sql", size: 1600, mode: os.FileMode(420), modTime: time.Unix(1620547117, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\x4f\x2d\x89\xcf\x2f\x8a\x4f\x2e\x4a\x4d\x2c\x49\x8d\x2f\x2e\x4d\x2a\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x8b\x4f\xce\x48\x4d\xce\x2e\xc8\xcf\xcc\x2b\xb1\xe6\x02\x6b\x0a\x71\x74\xf2\x71\x55\x40\x56\x53\x8c\xa4\xa8\xd8\x9a\x0b\x10\x00\x00\xff\xff\xe0\x60\xe0\xac\x5b\x00\x00\x00")

func _4_subscriptions_checkpointDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointDownSql,
		"4_subscriptions_checkpoint.down.sql",
	)
}

func _4_subscriptions_checkpointDownSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.down.sql", size: 91, mode: os.FileMode(420), modTime: time.Unix(1610579032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6e\xe3\x20\x10\x87\xef\x3c\xc5\x1c\x7c\x88\xa5\x4d\xb4\xf7\x68\x0f\xac\x3d\xb1\xac\x65\xc1\xc5\x50\x25\x27\x94\x38\x24\xb5\xda\x98\x14\x63\xf5\xf5\x2b\x93\xa8\x55\xdc\x7f\x73\xe1\xf0\x9b\x61\x3e\x3e\x32\x89\x54\x21\x28\xfa\x97\x21\xf4\xc3\xae\x6f\x7c\x7b\x0e\xad\xeb\x7a\xd3\x3c\xd8\xe6\xf1\xec\xda\x2e\xf4\x30\x23\x00\x70\x93\x9b\x76\x0f\xb1\x14\xae\xd5\x78\x56\xb2\xfc\x4f\xe5\x06\xfe\xe1\xe6\x57\xec\x7e\xda\xf6\xc1\xf4\xf6\x79\xb0\x5d\x63\x4d\x37\x9c\x76\xd6\x43\xc9\x15\x16\x28\x81\x0b\x05\x5c\x33\x16\xaf\xc8\x71\x45\x35\x53\xf0\x9b\xa4\x4b\x42\xae\x48\x42\x82\xc4\x8a\xd1\x0c\x61\xa5\x79\xa6\x4a\xc1\xe1\x68\x83\x71\xde\x34\xde\x6e\x83\x35\x37\x38\xef\xb4\x17\x56\xf3\x01\x76\x04\x25\x29\x91\xa8\xb4\xe4\xf5\xf5\xc9\xb3\x1f\x51\x49\x0a\xb4\x86\x24\x21\xb1\xb3\xe4\x35\x4a\x35\x66\xe2\x3b\x5d\x93\xe5\x69\x9c\xbd\xa7\x4c\x63\x0d\xb3\x29\xda\x25\x1d\x6b\x3e\x87\xca\xfa\x83\xf3\x27\x18\xce\xfb\x6d\xb0\x10\x1c\x1c\x9c\x6f\x2c\x78\xf7\x02\xde\x86\xc1\x77\x6d\x77\x5c\xbc\x4d\x08\x0e\x99\xe0\x2b\x56\x66\xea\x8b\xad\x51\xb0\x00\x5d\xe5\xa3\xd5\x1a\xd5\xf4\x1b\xff\xe0\x3a\x63\x3a\xc7\x7c\x31\x09\xe2\xf8\x45\x57\xc9\x8b\x4f\x25\x2d\x09\x49\x12\x60\x94\x17\x9a\x16\x08\xf5\x1d\x5b\x92\xd7\x00\x00\x00\xff\xff\xd4\xd0\xd6\x3a\x53\x02\x00\x00")

func _4_subscriptions_checkpointUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointUpSql,
		"4_subscriptions_checkpoint.up.sql",
	)
}

func _4_subscriptions_checkpointUpSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.up.sql", size: 595, mode: os.FileMode(420), modTime: time.Unix(1610579039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\x40\x00\x4f\x37\x05\xd7\x08\xcf\xe0\x90\x60\x85\x82\xa2\xfc\xac\xd4\xe4\x92\xf8\xe4\xfc\xa2\xa2\xd4\x9c\xc4\x92\xd4\x94\xf8\xd4\xb2\xd4\xbc\x92\xf8\xfc\xbc\xf8\xc4\x82\x82\xd4\xbc\x14\x05\x7f\x3f\x05\xb0\x50\xb1\x35\x17\xd8\x38\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\x52\x8c\x83\x6a\xf5\x75\x0c\x71\x0d\xf2\x74\xf4\xf1\x8c\x72\x75\x51\x08\xf3\x74\x0d\x47\xd2\x8a\xae\xa5\x38\xbe\x2c\x33\xb5\x1c\xaa\x31\xc4\xd1\xc9\xc7\x55\x41\x01\xab\x17\x30\x34\x5a\x73\x01\x02\x00\x00\xff\xff\x59\xc9\xda\x7a\xf7\x00\x00\x00")

func _5_correlated_eventsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsDownSql,
		"5_correlated_events.down.sql",
	)
}

func _5_correlated_eventsDownSql() (*asset, error) {
	bytes, err := _5_correlated_eventsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.down.sql", size: 247, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\xbc\xf3\x2b\xf6\x60\x20\x76\xe1\xf8\x07\x84\x04\x60\xa8\x91\xc2\x96\x21\x5d\x8a\x8a\xd3\x5e\x04\xc1\xe2\x41\x45\x63\x1b\xb6\xe0\xa2\x7f\x5f\xe8\x65\xcb\xb6\x52\x84\x17\x01\xe4\xcc\xee\xec\xce\x48\x58\x70\x07\x72\xfc\x49\x81\xd6\xdb\xfd\xde\xff\xce\x2b\x5f\x64\xfe\xe8\x37\xd5\x81\xa6\x8c\x88\x4e\xf7\xe5\x76\x93\x95\x05\x75\xc7\xe1\xcd\xd5\x5f\x6d\x1c\xe9\x54\xa9\x79\x83\x6d\x88\xd9\xa1\xda\xfb\xfc\x3d\xab\xfe\xee\xfc\x67\xb1\xa7\xc2\x9f\xc0\x1e\xfd\xfe\x50\x6e\x37\x44\x52\x3b\xc4\xb0\x03\x2c\x6b\xd0\x91\xb1\x90\xb1\xa6\x6f\xf8\x41\xd3\x1b\x49\xf3\xeb\xce\xf3\xd1\xf2\x33\xd6\x8f\x6a\x11\xc1\x42\x0b\x24\x2d\xf0\x30\xbd\xa8\x36\xa8\xd3\x53\x89\x8c\xa6\x10\x0a\x0e\x24\x78\x22\x78\x08\x36\x0b\x18\xeb\xf6\xfd\xc2\x1d\xac\xe4\x4a\xfe\x44\x48\xaf\x12\xab\xdb\xdd\x67\xc7\xd2\xff\x21\x9e\x34\x22\x12\x28\x08\x47\x6b\xbf\xb8\xf4\x62\x4e\x7e\xf1\xa5\x9d\xd8\x9a\x97\x11\x03\xd7\xfe\x34\x84\xd4\x1a\x96\xbe\x1a\xa9\xbb\x21\xc8\xd7\x22\xfd\x62\x68\xd6\x43\xdd\xe3\x66\x61\xa7\x1a\xf5\xe1\x3a\x3c\x93\xca\x62\x84\x52\x16\x23\x84\xde\xb3\x5b\x78\xf7\x72\xde\x8e\xb1\x64\xb1\x54\x5c\x80\xa2\x54\x0b\x27\x8d\xa6\xdd\x7e\xfb\xcb\xaf\xab\xec\x7a\xc4\xe9\x8c\x59\xb8\xd4\xea\x84\x9c\x95\x71\x0c\xcb\x78\x42\x93\x09\x0b\x21\x14\xb7\x18\x84\xe7\x2a\xc6\x75\xce\x02\xf6\x84\x58\x6a\xf6\x31\xea\x81\x34\x56\x8b\x77\x5f\xe5\x45\x5e\xe5\xf7\x8f\x8f\x77\xe2\x0c\xb8\x97\xc5\x5d\xd0\x70\x65\x34\x4e\x97\x49\x93\x4b\x72\xcf\xd0\x83\x38\xd5\x82\xeb\xc2\x2d\x19\x3a\x24\x19\x05\xad\x0a\xa9\x13\x58\x57\x27\xdb\xdc\xfa\xd9\x20\x5e\xb9\x4a\x91\xf4\xb9\xbe\x0e\x44\x2d\xf7\x22\x9d\x83\x8b\xfe\xbd\x4f\x69\xd7\x72\xa8\x87\x41\x87\x01\x9b\x4c\x48\x71\x1d\xa7\x3c\x06\x2d\xd5\x32\x4e\xbe\xab\xb3\x3d\xdd\x9e\x3f\xb4\x24\xdb\x6e\xb2\x7c\xb7\xf3\x9b\x36\x06\x3c\x72\xb0\xdd\x58\xcd\x85\xe9\x03\xd8\xff\xaa\x04\x2e\x9e\xc9\x9a\x55\xbb\x8d\x37\x88\xd4\x81\x96\xd6\x08\x84\xa9\xc5\x7f\xbc\x0f\xd8\xbf\x00\x00\x00\xff\xff\xed\xee\x53\x34\xc1\x04\x00\x00")

func _5_correlated_eventsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsUpSql,
		"5_correlated_events.up.sql",
	)
}

func _5_correlated_eventsUpSql() (*asset, error) {
	bytes, err := _5_correlated_eventsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.up.sql", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x9b\xdb\x6f\xdc\x56\x92\xc6\x9f\xd5\x7f\x05\xc7\xc0\x04\xd2\xc2\x2b\xf3\x7e\x31\x60\x60\x31\x49\x16\xc8\xc3\x66\x80\x4d\xe6\x69\xb9\x10\x78\x39\x54\x1a\x23\xa9\x95\xee\x56\x42\x27\xf0\xff\xbe\xf8\x55\x7d\xb4\x24\x5b\xb7\x28\xf2\xec\x43\x4b\x6c\x92\xe7\x56\xa7\xea\xab\xaf\xaa\x4e\xbf\x79\x13\x7d\xbd\x19\x43\x74\x1a\x2e\xc2\xb6\xdb\x87\x31\x9a\x36\xdb\xe8\xb2\x1b\xfe\xd9\x9d\x86\xe8\x7c\x7d\xba\xed\xf6\xeb\xcd\xc5\x2e\xea\xdf\x47\xa7\x9b\x7f\xef\xd7\x17\x63\xb7\xef\xa2\x6f\xfe\x1e\x7d\xff\xf7\x1f\xa3\x6f\xbf\xf9\xee\xc7\xe3\xe8\xf0\x3f\x3e\xb6\x3e\x5a\xbd\x79\x13\xed\x36\x57\xdb\x21\xec\xde\x72\x9d\x9c\x0c\xdb\xd0\xed\xc3\xc9\x6e\xbf\x0d\xdd\xf9\xc9\xbe\xeb\xcf\xc2\xee\x78\xdc\xfc\x7a\x71\xbc\xfb\xf9\xec\x81\x57\xae\x2e\x97\x17\xd2\x93\xee\xf2\x32\x5c\x8c\x27\xfb\xcd\xc9\x6e\xbf\xd9\x86\x5b\xcd\x3f\x7f\x7a\xdd\x32\x3b\xb9\xd8\xec\xd7\xd3\x7a\xb0\x45\x9c\xec\xb7\xeb\xd3\xd3\xb0\xbd\x3d\xfc\x7d\xef\x5c\xf7\x92\x9f\xec\xae\xfa\xdd\xb0\x5d\x5f\x9a\x28\x4e\x86\x9f\xc2\xf0\xcf\xcb\xcd\xfa\x62\x7f\xab\xa3\x07\x5e\xbb\xee\xab\x38\x19\x36\xdb\x6d\x38\x43\x58\x27\xe1\x97\x70\xb1\xbf\x3d\x9b\xbb\x9e\x5f\xb7\x96\xf8\x8f\x4f\x37\xab\xcf\xb7\x68\xb5\x5a\x9f\x5f\x6e\xb6\xfb\xe8\x70\x75\xf0\xaa\x7f\xbf\x0f\xbb\x57\xab\x83\x57\xc3\xe6\xfc\x72\x1b\x76\xbb\x37\xa7\xbf\xad\x2f\xb9\x31\x9d\xef\xf9\xb7\xde\xf8\xdf\x37\xeb\xcd\xd5\x7e\x7d\xc6\x97\x8d\x35\xb8\xec\xf6\x3f\xbd\x99\xd6\x67\x81\x0b\x6e\xec\xf6\xdb\xf5\xc5\xa9\x3d\xdb\xaf\xcf\xc3\xab\xd5\xd1\x6a\x35\x5d\x5d\x0c\xcb\x6c\xfe\x3b\x74\xe3\xa1\x69\xc5\xff\xfc\x2f\xc3\xbe\x8e\x2e\xba\xf3\x10\x79\xb3\xa3\xe8\x70\xb9\x1b\xb6\xdb\xcd\xf6\x28\xfa\x7d\x75\x70\xfa\x9b\x7d\x8b\xde\xbe\x8b\x98\xd5\xf1\xf7\xe1\x57\x3a\x09\xdb\x43\x9b\x36\xdf\xff\x76\x35\x4d\x61\x6b\xdd\x1e\x1d\xad\x0e\xd6\x93\x35\xf8\xcb\xbb\xe8\x62\x7d\x46\x17\x07\xdb\xb0\xbf\xda\x5e\xf0\xf5\x75\x34\x9d\xef\x8f\xbf\xa5\xf7\xe9\xf0\x15\x1d\x45\x7f\xfd\xf9\x6d\xf4\xd7\x5f\x5e\xf9\x4c\x6c\xac\xa3\xd5\xc1\x87\xd5\xea\xe0\x97\x6e\x1b\xf5\x57\x53\xe4\xe3\xf8\x20\xab\x83\x13\x9f\xce\xbb\x68\xbd\x39\xfe\x7a\x73\xf9\xfe\xf0\xab\xfe\x6a\x7a\x1d\x9d\xfe\x76\xb4\x3a\x18\xce\xbe\x5d\x66\x7a\xfc\xf5\xd9\x66\x17\x0e\x8f\x56\x2f\x35\x1f\xba\xf1\xfe\xef\xe9\x28\x6c\xb7\x3e\x6f\xdd\xec\xaf\xa6\xe3\xbf\x31\xf5\xc3\xa3\xd7\xbc\xb1\xfa\xb0\x5a\xed\xdf\x5f\x86\xa8\xdb\xed\xc2\x1e\x91\x5f\x0d\x7b\x7a\xb1\xf5\x69\x3f\x56\x07\xeb\x8b\x69\x13\x45\x9b\xdd\xf1\x7f\xae\xcf\xc2\x77\x17\xd3\xe6\x63\x3b\x6d\xe1\x72\xff\x46\x0f\xb6\x87\x51\xa4\x6d\x5c\x1d\xec\xd6\xbf\xd9\xf7\xf5\xc5\xbe\xcc\x57\x07\xe7\x80\x46\xf4\xb1\xd3\xff\xda\x8c\xc1\x6e\xfe\xb8\x3e\x0f\x11\x6a\x72\xcc\x15\xe3\xbc\x79\x13\x7d\x4f\x5f\x5a\x02\x9a\x65\x62\x70\x1d\x3a\x9c\xd6\x9f\x4e\xe2\xc8\xde\x3f\x3c\xd2\xd0\x4c\xe6\x63\xdb\x63\x6b\xe9\xbd\xfe\xc0\x8c\x6e\xf6\xca\x14\x1f\xe8\x95\xf7\x0f\x8f\x7c\x01\xb7\x3b\xb5\x86\xde\x29\x0b\xb9\xd5\x29\x0b\x7d\xa0\x53\xde\x3f\x3c\xba\x29\x86\xdb\x5d\x5b\xf3\xfb\xbb\x5e\x4f\xef\x4d\x5a\x0f\x8f\x80\x28\x0f\x8f\xae\xc5\xfa\xd9\x10\x37\x64\xfd\xdd\xee\x9b\xf5\xf6\xd6\x30\xbf\xfe\x14\xf6\x3f\x85\x6d\xd4\x45\xe3\x7a\x1b\x86\xfd\x66\xfb\xfe\x81\xe1\xac\xfd\xe1\x51\xd4\x6f\x36\x67\x9f\x2f\xe5\xab\xcd\xee\x98\x75\x30\xc6\x5f\xde\x45\xf1\xb2\x15\xef\x77\xb7\x86\x5c\xef\xa2\xdd\xfb\xdd\x63\xb2\xfb\xe1\xfd\xce\xf7\x23\x6c\xa7\x6e\x08\xbf\x7f\xb8\x31\x9e\x94\x1b\x7b\x3d\x39\xb9\xdb\x43\x7c\xb3\xf9\xf5\xe2\x87\x9f\xcf\xa2\x77\xd2\xf3\xc3\x57\xed\x9c\x4c\xed\x5c\xf7\xed\x1c\xd7\xed\x1c\xc7\x77\x7f\xa6\xa9\x9d\xab\xb4\x9d\xe3\xa6\x9d\x27\xfe\x4f\xed\x5c\xc4\xde\xa6\x4a\xda\xb9\xca\xfd\x3e\xd7\x45\xd1\xce\x79\xdd\xce\xe9\xd8\xce\x79\xdf\xce\xc3\xd8\xce\x69\xdf\xce\x69\xd3\xce\x7d\xd9\xce\xa1\x6c\xe7\x3c\x6d\xe7\x24\x6d\xe7\xb4\x6b\xe7\x34\xf8\xb3\xbc\x6b\xe7\x7c\x6c\xe7\x61\xf0\xb6\xcb\xbb\x31\xe3\xe5\xb7\xe7\xc2\x67\xc8\xdb\xb9\x2b\xfd\x3d\xc6\x4c\xab\x9b\x73\x7e\xb5\x20\xee\xc3\x92\x10\x32\xdc\x85\xb8\x0b\x7e\xdc\x40\xec\xd5\xc1\xc1\x23\x92\x7d\xbd\x3a\x38\x78\xf5\x88\x03\x7f\xf5\x7a\x75\x70\xc4\x4e\x3d\x61\x7e\x4c\xed\xdf\x0c\xa9\x6e\x4e\xcd\xa0\xea\xa3\x3f\x78\xd2\x0a\x1f\xc3\xdf\x8f\xb0\x69\xc0\xf7\xf6\xdd\xa7\xaa\xf7\x3b\x28\xf2\x36\x7a\x7c\x6d\x06\x29\x6f\xa3\xac\x79\x6d\xba\xfc\xf6\xa6\x9d\x1f\xe6\x69\x7c\x64\xf7\xb1\xbe\xb7\x6e\x9d\xff\xb8\x58\xcf\x87\x49\x99\xc4\x45\xd5\xe4\x4d\xfa\x3a\x8a\x8f\x3e\xac\x0e\x3a\xe6\xf0\x95\xad\xfc\x77\x5b\xee\xdb\x48\xab\x66\x82\x6f\xed\xef\x87\x8f\x9b\xd4\xbd\x7e\x8a\xf6\xff\xe3\xf2\xb9\xba\x5f\x0f\xed\xdc\xa4\xed\x9c\x25\xed\x5c\xa2\x7b\x5c\xc7\xed\x9c\xe4\xed\x5c\xe7\xed\x5c\x55\x7a\xaf\x6b\xe7\x24\xf3\x4f\x93\xb4\x73\x96\xba\x6d\x84\xa9\x9d\xcb\xdc\xdb\xc5\xbd\xeb\x7a\xe8\xdb\x39\xeb\xda\xb9\x29\xda\xb9\xcc\xda\xb9\xcb\xfd\xfd\xbc\x70\xbd\xae\x9a\x76\xee\xb0\x8f\xd4\xfb\x1a\xe3\x76\x4e\xb1\x87\xb2\x9d\xbb\xc6\xc7\xeb\x83\x9e\xd3\x36\x6f\xe7\x94\xb6\x45\x3b\x4f\xcc\xad\x6c\xe7\x74\x6a\xe7\x86\xf9\x62\x33\x55\x3b\x87\xd0\xce\xc9\xd0\xce\x49\xe3\xeb\x69\xca\x76\x2e\xe3\x76\x0e\xd8\x2c\xf7\xb1\xdf\xae\x9d\x47\xfa\x8e\xdb\xb9\xeb\xfd\x3b\xcf\xe2\xc2\xe5\xc1\x58\x5c\x4f\x5d\x3b\xf7\x49\x3b\x4f\x79\x3b\x97\xc2\x84\xae\x6a\xe7\x3c\xb8\xfd\x72\xbf\x48\x7d\xae\xf4\x95\x66\xed\x5c\x87\x76\xae\x06\x9f\x47\x36\xf9\x38\x53\xe3\x36\x8e\x6c\xc7\xa6\x9d\xab\xac\x9d\xc7\xcc\xe7\x36\xf6\xed\x5c\x75\xfe\x3c\x8d\xdb\x79\x4c\xfc\x3e\x6b\x43\x9e\xcb\xb3\xa6\x6e\xe7\x22\x6b\xe7\x94\x7d\xaa\xda\x79\x40\xbe\xa9\x63\x0b\x7b\x94\x30\x9f\xb1\x9d\x4b\xed\x23\x58\x51\x36\xed\x5c\x20\xe7\xda\x65\x9f\x48\xee\x71\xd6\xce\x53\xd2\xce\x49\xdc\xce\x65\xe1\x32\xa9\xeb\x76\x0e\x71\x3b\x17\xc1\xaf\x0b\xf0\x50\x7b\x84\x6c\xfb\xc2\xd7\xd3\x33\xff\xd1\xe7\xcd\x58\x23\xe3\x84\x76\x6e\xb2\x76\xee\xd1\x91\xc1\x65\x16\x32\x97\x1f\x7b\x3f\x65\xbe\x8e\xa2\x6a\xe7\x6e\xf4\x3e\xf2\xa4\x9d\xf3\xd2\xf7\x9b\xbd\xaf\x90\x55\xdd\xce\x43\xd1\xce\x35\xef\xa0\xb3\xe0\x2b\xfd\xa2\xbb\x83\xeb\x20\xb2\xa7\x9d\xe9\x67\xe5\x32\xca\x24\x1f\x1b\xa7\x76\x9d\x09\x89\xbf\xcb\x1c\x62\xed\x6d\x12\xda\xb9\x4f\xdb\xb9\xc8\x7d\x4d\xd6\x4f\xe7\x72\xa9\x7a\x9f\x5f\x56\xbb\x2e\x77\xc1\xc7\xe0\xde\x98\xfa\x7e\x32\x3e\x3a\xc0\x5c\xc1\x70\xf4\x74\xa8\x5c\xd6\xec\xc5\x98\xbb\xcf\x60\x8c\x51\x76\x55\x8c\xed\x1c\x77\xae\x83\x69\xed\xeb\x65\x4d\xd8\x45\x47\xbf\x83\xeb\x11\x3a\xcd\x7c\xca\xd1\xf5\x7d\x2c\x7c\x4d\xc8\x95\xef\xf8\x19\xf6\x85\xf5\xa2\x1b\x43\xd3\xce\x59\xa3\x7d\xef\x7c\xef\x19\xe7\x53\x1f\x92\xb3\x56\xe4\x81\x0e\x26\xae\x9f\xe6\x6f\x9e\xe4\x43\x0c\x4f\x5e\xcc\x83\x58\x6f\x0f\xf9\x0f\x8f\x69\x9e\xe4\x3d\xac\xaf\x3f\xe1\x3b\x6e\xae\xec\x0b\x7b\x8e\x65\x55\xf2\x1b\x65\x91\x3f\xc7\x71\x14\x71\xf5\x22\x8e\xe3\xb3\xc8\xf8\xa5\x19\x53\x15\xbb\x07\x98\x0a\x47\xba\x38\x38\xda\xa0\xe5\x20\x34\x28\x06\x7a\xe3\x35\xb8\xe6\x7d\x2c\x9e\x7b\x66\xa9\xc1\xfb\x04\xb9\x8c\x65\x0d\x6e\x39\x5c\x0f\x62\x5c\x75\xe3\xc8\x8f\x15\xd4\x93\x5f\x83\x84\x83\xee\xe3\x7d\x40\xac\x87\xd8\x15\x96\x06\x3a\x97\x58\x62\xed\x0c\xed\x2e\x76\x75\x9f\xc0\x9e\x61\x16\xf7\x75\x65\x36\x71\x7f\x42\xe3\x13\x83\xb8\xaf\x97\x27\x59\xc3\x23\xab\x79\x29\x53\x78\x68\x31\xb2\x83\x3c\x79\x16\x7f\xaa\x8b\x2f\x63\x06\xcf\xa7\x4e\xb8\x56\xe8\x39\x50\xdf\xe1\xc6\x3a\x87\x72\xdc\x32\x54\x00\xa5\xe7\x7e\x82\x1b\xc6\xed\xf6\x0e\xc5\x84\x06\x1d\x2e\x3f\xb8\x9b\x41\xc9\x71\x97\xb4\x29\x79\x9e\xc8\x55\xe5\xee\xaa\x71\xb9\x69\xee\x50\x6e\xee\xb6\x90\x1b\x0f\xee\xc6\xb2\xb2\x9d\xa7\x5a\x2e\x93\xb0\xa4\xf7\x70\x03\x1a\x00\xdd\x30\x77\x14\xdc\xa5\xa3\xfc\x50\x3e\x9e\xe3\x42\xa0\x30\x50\x19\x73\xf7\x69\x3b\xf7\x99\xbb\x36\xdc\x62\x59\xba\x0b\xb1\xef\xb5\xbb\xd6\x2c\xbb\x76\xbf\xb8\x6d\x28\x0e\x06\x6c\xf4\x26\x38\xf5\x33\x6a\x52\xbb\x21\xc7\x95\xd3\x4a\xa8\x06\x74\x01\x6a\xc1\xbc\xe9\xaf\x09\xa2\x36\x0b\x15\xcc\x9c\x22\x22\x47\xfa\x87\x72\xe2\x6a\x0d\x18\x62\x77\x69\x3c\x43\x5e\xb8\xdd\xbc\xf1\xf7\x70\xd9\x99\xdc\x1c\xb2\x9b\x7a\xd1\xd7\xe0\x20\xc2\xda\x87\xc4\xd7\xc9\x7d\x00\x0b\x8a\x01\x65\x41\xee\xd0\x3e\xa8\x57\x81\x5b\xed\x9c\x8a\xe0\xda\x19\xbf\x9f\x44\x23\xa1\x78\x85\x53\x9f\x41\x6d\x01\x3f\xa3\x4c\x0a\xf3\x32\x74\x21\x11\xb5\xc8\x1c\x60\x68\xcf\xb8\xcc\x97\x39\xf2\x9d\x75\x23\x47\xe4\x84\xec\x00\x36\x68\x24\x34\xa6\xd0\x9e\xd6\x99\xd3\x6f\x80\x31\x81\x8a\x0c\x0e\x98\x4d\xef\xf4\x21\xd3\xf7\xba\xf4\x3e\x98\x3b\x32\xe5\xba\x1f\x5d\x5e\x9d\x64\x01\x2d\x81\xee\x21\x37\xde\x9b\x4a\xa7\xdf\x7d\xee\xef\x16\xbd\x28\x48\xe5\x3a\xcf\xfe\x0e\xb1\xa8\x6a\xe6\x3a\x61\xfb\xd1\x3b\x8d\x33\x7a\x9f\xb9\x3e\x57\x02\x5b\xf6\x65\x14\xa5\x41\x77\x01\x63\xbe\xb3\x6e\xfa\x45\x8f\x70\x0e\x8c\x85\x3e\x30\x7f\xf4\x6a\x28\xdd\x09\x70\xcd\xdc\x0d\xc8\x6b\xdf\x5b\x6c\x07\x00\xaf\x44\x85\x9a\xc1\x29\x24\x7b\x6c\x74\xa9\x13\x1d\xaa\x7c\x6f\xa0\x70\xa5\xa8\x1d\x32\x0e\x9d\xb7\x29\xa5\xdf\xec\x33\x76\xc4\xda\xeb\xd8\x9d\x09\xeb\x87\xbe\xb3\xc7\xcc\x8d\x90\x3b\x96\xbd\xa2\x03\xec\x29\x9f\x58\xf3\xee\x25\x77\xe8\x2f\x7a\x32\x64\xae\xcf\xe8\x20\x3a\x31\x8a\xc2\x32\x76\x92\xba\x9e\x31\x57\xfa\xc3\x61\xd1\x47\x23\x6a\x0d\xed\x8f\x25\x3f\x64\x60\xfa\xd6\x3b\x2e\xd0\x16\xea\x0c\x05\x35\x9d\x1b\x7c\x6c\xe8\x21\xa1\x08\xfb\x88\xce\x95\xda\x9f\x3a\x75\x1a\xce\x3c\xa1\xe1\xec\x07\xf6\x4d\x1b\x42\xa7\x41\xcf\xe9\x07\x79\xe2\xb0\xa1\x8e\xc8\xbf\x54\x78\x61\xb8\x95\x38\x8e\x10\x12\xe0\x78\xc1\x1c\x4b\x71\xd4\x2e\x07\xd6\x45\xd8\xc4\x38\xcc\xb1\x13\x85\x65\xae\x4d\x2c\xc7\x2e\x52\x00\x8d\x05\x4b\x2d\xac\x49\xdd\xfe\x19\x07\x4c\xc0\x26\xc0\xa1\x51\xe3\x64\xc8\x68\x68\xe7\x2e\x53\xb8\x51\x3b\xee\x11\xb2\x30\x16\x21\x29\xce\xba\x94\xe3\x67\x0e\x84\x7b\x75\xe5\x34\xde\x08\x41\xe7\x7a\x96\x41\x42\x82\xeb\x04\x38\x9b\x2a\x7c\x65\x8f\x09\x19\x86\xda\x75\x34\x91\xfe\x58\x08\x99\x2a\xdc\x49\x7d\x1f\x8d\xee\x17\x1e\x72\x21\x67\xe4\x66\x78\xd3\x39\x2e\x17\x83\xec\x63\xf4\xeb\x42\x38\x17\x2a\xc7\x62\xe4\x58\x2a\xe4\x42\x0e\x26\xfb\xdc\xef\x21\x47\xc2\xcf\x5e\x1f\xf4\x8c\xb1\x18\x83\x79\xb1\x97\xc8\x09\xbd\xce\x96\x10\xb9\xf3\x79\x27\xea\x1b\x99\xb2\x77\x60\x43\x27\xdb\xae\xe5\x87\xc0\x12\x74\x02\x39\x60\x2f\xe8\x0c\xf7\x90\x31\x61\x26\xf2\x9d\xe4\x07\xf0\x23\xbc\x1b\x46\xb7\x79\xf0\x09\x3b\x04\x9b\x08\x2b\x2c\x6c\x4b\x1d\x47\x08\x85\x52\x85\xd5\x7c\x08\xbf\x2d\x5c\x1d\x84\xf1\x95\xec\x60\x72\xb9\x77\xd2\x59\x74\x88\xb9\x13\x8a\x9b\xee\xe7\x6e\x63\x60\x45\xae\xd0\xae\x17\x76\x13\x2a\x63\x57\xe0\x1c\x3e\x03\x42\x87\xde\x20\x37\xf6\x10\x99\x30\x77\x70\xd6\xf6\x39\x13\x89\x5b\xec\xb3\xf2\xd0\xca\xfc\x5b\xe7\xf7\xf3\xee\x5a\x7f\xf1\xd5\x60\x21\x18\x0e\xf6\x23\x67\xc2\x28\xc2\x5e\x64\xcf\x7f\x30\x0f\xb9\xf3\x31\x1b\x19\x1d\x1f\xf1\x71\xc8\x8b\xbe\x58\xf7\x92\x1a\xc4\xe6\xd1\xc1\xa6\xf3\x50\xd1\xf0\x79\x72\x1b\xc2\x3f\x82\x45\xb4\xe5\x1d\x48\xa9\xe9\xad\xc2\x78\x4b\x3f\x34\x6e\x1f\xac\xd7\xf6\x5c\x7a\xba\xe0\x9c\xf9\xca\xd4\x75\x91\xf9\x74\x4a\x0f\xd0\xa7\x85\xa0\xa3\xc2\xc6\x25\xed\x30\xb9\x2f\x66\xcf\xf0\x0f\x84\xdc\xb6\x27\xf2\x3d\xac\x91\x39\x5b\x0a\xa7\x14\x57\x90\x8d\xd0\x0e\x3f\x8a\xfc\x3f\xca\x66\x74\x0c\xb7\x7d\x14\x1f\xa9\x46\x5f\x47\x2c\x1b\x04\xc7\xc0\x2a\x4b\xdd\xf4\xbe\x7e\xb0\x97\xbd\xed\x24\xf3\x2c\xf7\xe0\x20\x51\x1a\x03\xbd\x81\xbb\xb0\x47\xc8\xc0\x64\x5e\x48\xce\xda\xe3\x41\x41\xc3\x20\xdb\x32\xd2\x5e\x5e\xe3\x16\x9c\x89\xfd\x07\xdb\x91\x0b\x32\x0a\xb9\xfc\x6b\xe3\xf8\xcb\x5c\x07\xa5\x63\xad\x8f\x54\x69\xd8\x5a\x63\xd6\x4a\x47\x0d\xce\x13\xc0\x47\xe6\x81\xaf\x30\xdf\x54\x08\x7b\x82\xeb\x14\xe1\xfe\x22\x33\x6c\x16\xbc\x08\xb5\xef\x1f\xf3\x60\x5f\xe1\x2c\xec\x49\x16\xdc\x5e\x91\x91\xe9\x72\xe6\xeb\xc6\xce\x58\x67\x2f\xdf\x83\x0f\x0a\xe2\x4c\x89\x7c\x25\xb2\xc5\xd7\xf6\xc2\x0b\x64\xd0\x89\xcf\xe5\xe2\x90\x7c\xaf\x17\x4c\xcc\xdd\x66\x83\xf6\x1f\x3b\x4b\x95\xf2\x02\x0f\xcd\x4f\x25\xce\xed\xd8\x87\x58\x69\x1d\xd3\xe7\xc1\xfd\x0a\xf6\x57\xc9\x1e\xc0\x95\x4c\xbc\x26\x56\xda\x1a\xdf\x54\xcb\x5f\x2c\x41\x97\xe9\x58\xee\x3e\x09\xbd\x62\xcf\x18\xdf\x38\xc9\x70\xed\x8f\x7a\xf1\x42\xc3\xa7\xd8\xb9\xae\xa5\x8a\x46\xe7\x4b\xe0\x66\x2f\x6c\x42\x2e\x93\xfc\x43\x90\xaf\xaa\x13\xb7\x27\x93\x5d\xe9\xbe\x28\xd5\x5c\x83\xf8\x06\xf3\x45\xd6\xc6\x67\x7b\xc7\x1b\x30\x62\x52\x3a\x73\xe1\x2f\xfc\x67\xfd\x60\x1a\x76\xcb\x5c\x7a\xd9\x05\x76\xc2\x1a\xe1\xef\xe3\x8d\x3e\xf2\xe9\xf3\x18\x80\x0f\xed\x33\xe1\x4c\xa7\x74\x55\x5c\x3d\x21\xa0\x7c\x6e\x96\xe5\xee\x8e\xee\x09\x26\xef\xcc\xad\xdc\xdd\xc3\xf3\x02\xc9\x2f\x91\x51\xb9\x7f\x19\x0a\x22\x93\x26\xf9\xa3\x61\x64\x1a\x17\x49\x5d\x97\xcd\x8b\x84\x91\xf7\x9c\x13\xf8\x12\x55\xa8\xe5\x5e\xa5\x6c\xbc\xa9\xd7\xe8\x14\xea\xa9\xf9\x14\xdc\x2f\xe6\xb0\xe4\x4e\x70\x3b\x40\x0a\x14\x60\xc9\xa1\x7c\x5a\xa9\xa2\x2f\x9e\x11\x22\x62\xee\xb9\x28\xc6\xa0\xac\x3b\x6b\xc2\x24\xee\xca\xd3\x00\xdd\xcc\x63\xc9\xfb\x3c\x56\x35\x83\x9e\x62\x76\x50\x94\x4c\xd4\x1b\x13\x32\x57\x52\x7a\x98\x05\x94\xe2\xde\x91\x4b\x26\x77\x40\x78\x9c\x2b\x33\x9b\x89\x9e\x13\xde\x14\x0a\xc1\x90\x11\xae\x6c\xc9\xa8\x02\xbf\x8c\x6f\x19\xff\xfa\x73\x53\x36\xb8\x51\xf6\x98\xb6\xc3\x3d\x95\xb7\x87\xb7\xff\x19\x26\xfd\x70\x87\x66\xda\x8f\x1d\x5f\xf9\xc4\xc4\x1f\xee\xf1\x49\xa6\xfe\xa4\x55\xbe\x94\xc9\x3f\xbe\xbc\x8f\xa6\xff\xac\x02\x5c\x9c\x7c\x51\xcb\x7f\x7e\x1a\x09\xba\x0a\x6d\x80\x9a\x0f\x72\x47\x4b\x05\x0e\xfd\xc3\xb5\x2d\x29\x0d\x4b\x4b\x2c\x54\xa7\x73\xbd\xc6\x66\x08\x67\x09\x43\xb0\x1d\x42\x6b\x6b\x9f\xba\xed\x17\xca\x71\x8e\xa2\xcc\x85\x42\x72\x3e\x56\x19\x8b\xbd\x1f\x68\x2b\x54\x02\x77\x67\x14\x41\x61\xb5\x85\x4e\xa9\xbb\xe9\x41\x95\x37\xc2\x00\x68\x05\xf7\x7a\xb9\x54\xa3\xba\x93\xbb\xca\xb2\x77\x0c\xc3\x85\xd3\x17\x73\xaa\x15\x26\xe7\xb1\xec\xb9\x71\xcc\x62\x0e\x56\xf9\xa8\x3c\xf4\x04\x37\xa0\x6f\x16\x16\x37\xbe\x16\xe8\x3f\x76\x6f\x58\x36\xba\xeb\xe7\x7d\x28\x32\x94\x2f\x2f\x7c\xed\xd0\x0b\xd6\x5d\xab\x7a\x18\x44\x55\xb0\xf7\x41\x74\x92\xb0\x9b\x39\x40\x4d\x47\x85\xbd\x56\x3d\xeb\x9d\xae\x58\xfa\x27\xf6\x94\xc7\x92\x3f\xb6\x36\x89\x63\xc3\xa0\x6a\x17\xb2\x84\x0a\x82\xab\x93\x42\x37\xe8\x3b\xb4\x0c\x5c\xb3\x71\x3b\xaf\xf8\x40\xfb\xc1\x56\xc2\xbc\x3c\x75\x5c\x63\x8e\xb9\xde\x5f\x2a\x4b\x16\x6e\x15\x4e\xfb\xc1\x3d\xa3\x14\xc1\x65\x3a\x2a\x8c\x4f\x94\x1e\xca\x55\xbd\x62\x8f\x82\xf2\xec\x96\xfa\x2b\x3c\xec\x04\xeb\xa0\xec\x8c\x8f\x5c\xa0\x36\xb1\x52\x1a\x50\x24\x30\x72\x52\xe8\x08\x56\xb2\x16\x0b\x6f\x27\x5f\xab\x51\xed\x49\x15\xc7\xd2\x69\x9e\xe5\xf5\x4b\x6f\x67\xe9\x4e\x55\x01\x2d\x24\x09\xae\xab\xc8\x01\x5d\x00\xf7\x09\xf9\xf8\xf0\x0e\x7a\x4a\x98\x6c\xa1\x5d\x26\x0a\x96\xb9\x5f\xc0\x4e\x4a\x51\xf4\x5a\xf2\x44\xc7\x68\x4b\x38\x52\xd6\xf2\x0f\xaa\x9c\x5a\xda\xb5\xf0\x35\x58\x85\x39\x76\xdd\x44\x77\xe9\x0f\x2a\xcd\xfe\x4f\x0a\x47\x6b\x85\x70\xe8\x9b\xf5\xa3\xd4\x16\x21\x4b\xa5\xaa\x1c\x34\x3d\x55\x7a\xc7\xaa\x93\x41\xa9\x1e\xa5\xcb\x08\xc3\xa1\xe5\xd0\x76\xfc\x59\xac\x3d\xa9\x6e\xd8\xad\xf9\x3d\xe9\x24\xfe\xd7\x52\xac\xa9\xd3\x7b\x6c\x37\x51\x45\x95\x79\xf2\x1c\x39\xb3\xa6\x4a\x95\xd8\x52\x95\x4f\x42\x98\x5e\x95\x61\x93\xb9\xd2\x81\x84\x24\xe8\x44\x9d\x5e\x87\xcf\x41\x69\x62\x0b\x45\x07\xa5\x32\x2b\x51\x69\x55\xce\x2b\xa5\x95\x46\xa5\x4e\x2d\x64\x54\xe5\x16\xff\x59\xa8\x8a\x5e\x36\x8e\x0b\xe8\x27\xfc\x80\x35\x33\x57\x4b\x6f\x14\x0a\xa1\x54\x39\x6f\x94\x16\x43\xb6\xcc\xb1\x12\x45\x27\x94\xc8\x55\x81\x67\x0f\x08\xf7\x4c\x07\x65\xd7\xa3\x78\x0a\x36\x87\x1e\x21\x3b\xc2\x17\xf0\x80\x7d\x0c\x0a\x2f\x63\xa5\xd6\x72\xa5\x62\xb0\x43\x0b\x43\x6b\x9f\x4b\xac\x10\x19\xdd\xef\x15\x62\xb1\xa7\xf5\x92\x46\x4a\x7c\x1c\x64\x9e\x2c\xd5\xf9\xe2\xfa\xd4\x40\xaf\x34\xe0\x94\x5c\x9f\x1e\x40\x86\xe9\xf4\x39\x2f\xc0\xe6\xb0\x9b\x52\x29\x3b\xf0\xc3\x52\xd3\x4f\xe3\x05\xcf\x25\xfa\x0f\x75\xf7\x20\x27\xb8\x93\xf4\x3f\xd4\xdb\x9f\xe1\x03\x5f\x22\x00\x78\x6c\x61\x0b\x17\x28\xe3\xf8\x8f\x87\x01\x79\x95\x24\x2f\x53\x54\xbd\xff\x94\xef\xff\x47\x75\x15\x54\x32\x46\x3e\xba\xe7\x1c\xa6\xeb\xe4\x67\x2e\x96\xbf\x30\xfc\x54\x09\xcd\x85\xe5\xdb\x33\x25\xd5\xed\x9c\x8b\x0a\x11\x0b\xbb\x1f\x94\x04\xbd\xc9\xfc\xb1\x5c\x1b\x73\xf4\x6b\x6b\x53\x2b\x42\x18\x9c\xe5\xdb\x99\x10\x55\x63\x8d\x15\x74\xf7\x9c\xab\x93\x77\x2f\x16\x0b\xce\x3d\xe9\x02\x62\x35\x4b\xc2\xf9\x8e\xe0\x3b\x28\x19\x19\x94\x70\x2c\xfa\xbb\x19\xfb\xa3\x3b\xf5\x0c\xf3\x7c\xb4\x4f\xb3\xd1\x27\x1c\x18\xff\xc4\x50\x1f\xed\xf7\x49\xd6\xfa\xd4\x15\xbf\x94\xc9\x3e\x69\x9d\xb2\xdb\xe6\x59\x35\xe0\x38\x7b\x99\x33\x74\xf7\xcf\xf4\x4f\x9c\xa3\xcb\xdd\x5b\xa2\xfb\xb0\x9d\x20\xa6\x89\xce\xd6\x62\xf1\x99\xd8\x25\x9e\x06\x6f\x84\xc7\xb7\xf3\x3f\xa3\x17\xe3\xcc\x03\xd7\x3a\x6f\x36\x38\x63\xc2\x7e\xb8\x2e\x17\x06\x5b\x38\x1e\xa4\x2a\x52\xda\xf9\xb8\xda\x99\x41\x2f\x56\x66\x85\x97\xdc\x99\x11\x78\x61\x2c\xaf\x77\xef\x88\x4d\x61\x6f\x56\x50\x9c\x1c\x4b\x82\xa2\x75\x98\x59\x99\x78\xa4\x6d\x1f\x45\x04\x56\xd0\x53\xe2\xdb\x12\x76\x62\xde\xc6\x38\x33\x67\xa8\xe5\xe4\x6b\x82\x69\xc4\xe1\x3a\xd1\x66\x89\xea\xcc\xd7\x6e\xec\xa3\x94\xc7\x1d\x54\xcc\x0d\xde\x4f\xa6\x24\x68\x2c\xac\x63\xae\xc6\xc8\x4b\x25\x2a\x13\x5f\x53\xa7\xc4\x6a\xa5\x64\xe9\x52\xb0\x01\x8f\x8c\x2d\x96\xce\xfa\x82\x70\xa7\x50\x41\x00\x76\xca\x78\x53\xe9\x72\x34\xdc\xd4\x39\xb7\x3e\x56\x92\x3b\xf3\xbd\x80\xc5\x37\x83\x8f\x3d\xea\xdc\xd6\xa0\x04\xbe\x9d\x3d\xac\x9d\xe9\x58\x92\xb6\x50\xe4\x95\xf9\x33\x63\xcc\x2a\xd2\xe4\x2a\x1e\x2e\x27\x5f\xac\x78\x9b\x7b\x16\x04\x86\xd4\x2d\xf8\x99\x3a\xa3\x1b\x54\xf4\x26\x52\x8b\x75\x18\xc0\x8a\x6b\x8d\x27\xbd\xc1\xee\x41\x8c\x07\x3d\x21\x0a\x60\x1c\x98\x5d\x96\xfb\xff\x52\x09\x5a\x2b\x5c\xde\x38\xd7\x86\x7e\xc1\xc4\x90\x19\xd1\x04\xac\xda\x64\x2b\x86\x48\x84\x88\xfe\xa2\x1f\xbc\x1b\xf2\x6b\xdd\x19\x94\xa8\xc6\x16\x60\xb8\xf8\x8d\x58\x05\x64\xa2\x82\x54\xfa\xd1\x2f\xc5\xa4\xdc\xc7\xcf\x17\xd6\x54\xaa\x00\xde\xbb\x9c\x1b\x45\x06\xb0\x4d\x2b\xea\x8e\x3a\x5f\x39\xf8\x1e\xc4\x4a\x00\x5b\xd4\xda\xf9\xfc\x60\xd2\xf8\x0f\xf4\xb2\x56\x01\x61\x52\x24\x34\x2d\xec\xba\x76\x3f\x44\xb4\x0c\x93\xee\x65\x7f\x76\x2e\x74\x50\x31\x58\x19\x2b\x2b\x96\x57\xee\x97\x2c\xa9\x2d\xbd\xa8\x2a\x15\x5d\x2a\xdf\xd7\x5e\xc5\x24\xb3\xff\xe0\x6c\x18\x5f\x83\x3d\x21\xcb\x52\x89\xe8\xa5\x38\x8e\x7c\x7a\xe1\x02\x6b\x65\x9d\x9d\x22\x05\x2b\x1e\x14\xae\x7b\x49\x7f\xed\xbf\x32\x45\x31\xfc\xb7\xc3\x16\x8a\xe4\xe1\x00\xc8\xcd\x0e\x77\x14\xae\xcb\x56\xe8\x5c\x32\x6f\x85\xfb\x7a\xde\xcb\x55\x44\x2a\x75\x8e\x95\xbd\xc6\x6f\x26\x2a\x68\x4f\x92\x21\xfe\xb1\x51\xb4\x7d\x57\x32\x9b\x28\x70\x54\xd4\xc3\x7c\xd0\xdd\xbb\xce\x0d\x3e\x82\xa1\x2f\xea\x4d\xaf\xf9\xee\xa3\xbf\xaa\x7a\xb2\x27\x7d\x3a\xeb\x7d\xda\x4a\xff\x05\x5e\xf4\x13\xee\x5b\x34\xc5\xf3\x9c\xe8\xcb\xe4\xc1\xee\xf8\x6d\xda\xbf\x3a\xfb\x9d\xab\x3d\xb6\x90\x2d\x45\x48\x1d\x62\x19\x64\x5b\x8d\xf8\xa1\x65\xb2\x52\x8f\xc6\xf1\x17\xf8\xd4\x51\x38\xd7\xc8\xc6\x0c\xf3\x06\x7f\xa7\xd3\xb9\x5e\x30\x63\xd0\x3b\xf6\x3d\xf7\x77\x47\x45\xe8\xf6\x7f\xb8\xee\x63\x12\x66\x70\x3d\xa8\x98\x5f\xdf\x78\x2f\xd1\x19\xf3\x25\x63\x1d\xab\x38\x6f\xe7\x87\x13\xc7\x4b\x3b\xf0\x53\x3b\x76\x3f\x96\xf1\x5e\x0e\x52\xd4\x3a\x70\x64\xf1\x41\xa1\x73\xd3\x89\x0e\x3a\x49\x7e\xe6\xf3\x12\x7f\x1f\x79\x57\x3a\xb0\x14\x2f\x67\xa8\x73\x9d\xbd\xd6\xd9\xe7\x5a\xd9\xa7\x4e\x87\x6b\x7a\x1d\xe0\xc8\x74\x08\xcd\x8a\x86\x9d\x8a\xf6\x4b\x06\xb3\x71\x0c\x33\x4e\x9f\xb8\x9f\xe9\x7a\x65\x01\x62\xf7\x53\x45\xa7\x18\x26\xb9\x89\x2d\xd7\x18\x54\x34\xde\x0f\xd8\x0f\x7f\x98\xee\xc9\xc2\xdf\xaf\x82\xcf\x80\x9f\xfb\x3b\x33\xe4\x79\xe8\xa7\x9a\x9f\x80\xce\xfd\x3d\x3d\x09\x6f\x1e\x5d\xd5\x4b\x41\xcd\xc3\x4b\x12\xca\xa4\x79\xf5\x47\x51\xa6\xc9\xf2\x2c\xcb\xb3\x2f\x85\x32\x7f\xee\xb7\x2e\xf8\xb3\xa1\x77\x9e\x34\xea\x60\x11\x36\x65\x36\x9b\xb9\x5f\x9f\x74\xc8\xc5\xb2\x6f\xa5\xf8\x71\xed\xd9\xd3\x5a\x59\xe1\x52\x07\x92\x8c\xf3\x2f\xd9\xae\xc4\x7d\x3e\x76\x53\x8b\xf7\x16\xc1\xdf\x37\xde\x96\xea\xf7\x0f\xfa\x5d\x4c\xa2\x03\x67\x16\xbb\xa6\x6e\xd3\x56\xcc\x56\x86\x6b\xd0\x73\xb3\x71\xf9\x74\x6c\x06\x9c\x1a\xf4\x5b\x13\xb8\xed\x12\x87\x17\xb5\xf2\x04\x95\xdb\xf7\xb4\xc4\xf8\x89\xfb\x73\xd6\x3b\x8d\xce\x77\x26\xc5\xef\xc6\x63\xf4\x1b\x1e\xe3\xcd\x3a\x00\x08\x4f\xa1\x1d\xbc\xb3\x56\xac\x62\xbf\xab\xa8\x9c\xd3\x20\x17\xe3\xe8\x85\xf0\xac\x50\xb5\x22\xf1\x0c\x3d\xed\x0b\x9d\xb6\x4e\x74\x08\x88\x38\xa2\x6b\x9c\xcf\x1a\x5e\x8d\xde\xef\xd8\xf8\xc1\x04\xe3\xe7\xca\xfe\xda\x81\x30\x1d\xe4\x0a\x3a\x5c\x67\x99\xc9\xc4\xb9\xa2\xc9\x7c\xf2\x03\x29\x49\xf0\x75\xf1\x2e\x58\x69\xd9\xe6\x4a\x87\x12\xc4\x3b\xc1\x27\xe3\x65\xaa\x08\xc0\x25\xe1\x39\x8d\x78\x6b\x23\xfc\x65\xbd\x70\x44\xe3\x5c\x89\xef\x21\xfb\x94\xeb\x10\x00\x31\xcd\xb0\x64\xe4\x13\xc7\x56\xcb\x6a\x96\x3a\xe0\xd7\xf9\x41\x10\xf6\x3b\xd7\x6f\xa2\x8c\x1f\xab\x32\x9b\xe9\x80\x26\xba\x93\x95\xca\x71\x64\xca\x7b\x34\xca\x7d\x94\xca\x75\x74\xce\x39\x69\x5f\x29\xa3\xcd\xff\x58\x6d\x2d\x27\x52\xab\xfa\x52\xea\xb0\x52\xaa\xac\xf3\xe0\x7a\x02\x07\x47\x2e\xc8\x22\x57\x16\xdd\x0e\xee\xf5\xae\x0f\xa3\x0e\xf7\xb0\x77\xe3\xff\x05\x00\x00\xff\xff\x00\xfb\x28\x8a\x00\x40\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 36864, mode: os.FileMode(420), modTime: time.Unix(1620547127, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_stream_tables.down.sql":     _1_create_stream_tablesDownSql,
	"1_create_stream_tables.up.sql":       _1_create_stream_tablesUpSql,
	"2_append_to_store.down.sql":          _2_append_to_storeDownSql,
	"2_append_to_store.up.sql":            _2_append_to_storeUpSql,
	"3_notification_triggers.down.sql":    _3_notification_triggersDownSql,
	"3_notification_triggers.up.sql":      _3_notification_triggersUpSql,
	"4_subscriptions_checkpoint.down.sql": _4_subscriptions_checkpointDownSql,
	"4_subscriptions_checkpoint.up.sql":   _4_subscriptions_checkpointUpSql,
	"5_correlated_events.down.sql":        _5_correlated_eventsDownSql,
	"5_correlated_events.up.sql":          _5_correlated_eventsUpSql,
	"bindata.go":                          bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_stream_tables.down.sql":     &bintree{_1_create_stream_tablesDownSql, map[string]*bintree{}},
	"1_create_stream_tables.up.sql":       &bintree{_1_create_stream_tablesUpSql, map[string]*bintree{}},
	"2_append_to_store.down.sql":          &bintree{_2_append_to_storeDownSql, map[string]*bintree{}},
	"2_append_to_store.up.sql":            &bintree{_2_append_to_storeUpSql, map[string]*bintree{}},
	"3_notification_triggers.down.sql":    &bintree{_3_notification_triggersDownSql, map[string]*bintree{}},
	"3_notification_triggers.up.sql":      &bintree{_3_notification_triggersUpSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.down.sql": &bintree{_4_subscriptions_checkpointDownSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.up.sql":   &bintree{_4_subscriptions_checkpointUpSql, map[string]*bintree{}},
	"5_correlated_events.down.sql":        &bintree{_5_correlated_eventsDownSql, map[string]*bintree{}},
	"5_correlated_events.up.sql":          &bintree{_5_correlated_eventsUpSql, map[string]*bintree{}},
	"bindata.go":                          &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
