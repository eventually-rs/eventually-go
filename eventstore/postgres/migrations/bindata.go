// Code generated for package migrations by go-bindata DO NOT EDIT. (@generated)
// sources:
// 1_create_stream_tables.down.sql
// 1_create_stream_tables.up.sql
// 2_append_to_store.down.sql
// 2_append_to_store.up.sql
// 3_notification_triggers.down.sql
// 3_notification_triggers.up.sql
// 4_subscriptions_checkpoint.down.sql
// 4_subscriptions_checkpoint.up.sql
// 5_correlated_events.down.sql
// 5_correlated_events.up.sql
// bindata.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_stream_tablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\x42\x12\x2a\x2e\x29\x4a\x4d\xcc\x2d\xb6\xe6\x02\x04\x00\x00\xff\xff\xc4\xa6\xb6\x55\x27\x00\x00\x00")

func _1_create_stream_tablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesDownSql,
		"1_create_stream_tables.down.sql",
	)
}

func _1_create_stream_tablesDownSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.down.sql", size: 39, mode: os.FileMode(420), modTime: time.Unix(1610579492, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_stream_tablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x31\x6f\xc2\x30\x14\x84\x77\xff\x8a\x13\x13\x91\x32\x74\xef\x64\xc2\x0b\x4a\xeb\x3a\x95\x63\xa4\x32\x45\xa6\x79\xaa\x22\x91\xd0\x26\x06\xa9\xff\xbe\x22\x94\x34\x25\xa5\xf0\x16\x2f\x9f\xcf\xf7\xee\x1c\x19\x92\x96\x60\xe5\x4c\x11\x5a\xdf\xb0\xab\x5a\x4c\x05\x00\x94\x05\xfa\xb1\xf4\x62\x0f\xa7\x4e\x2d\xf4\x52\xa9\xb0\x23\x8e\x7c\xee\x3f\xdf\xf9\x02\x31\xd9\x73\xd3\x96\xdb\x7a\x02\x20\xd1\x96\x16\x64\x7a\x02\x98\x53\x2c\x97\xca\xe2\x2e\x14\x1d\xfd\x6c\x92\x27\x69\x56\x78\xa4\x15\xa6\x03\xf1\x10\x65\x11\x88\xe0\x5e\x88\x5f\x76\x79\xcf\xb5\x3f\xb9\x7d\xdb\x6c\xd7\x6e\x93\xb7\xfc\xb1\xe3\xfa\x95\xf3\x7a\x57\xad\xb9\x41\x46\x26\x91\x7f\xd8\xc5\x8d\xbb\x0d\x43\xb8\x0c\x77\x4e\x46\xc2\x37\x64\x32\x98\xf3\x78\xbe\xe1\x4e\xfa\x0c\x05\x1e\xb2\x54\xcf\x46\xca\x15\x7b\x57\x38\xef\xae\xc2\x57\xd2\xee\x77\x0f\x7f\xcc\x06\xc7\x27\xe2\xd4\x50\xb2\xd0\xff\x5d\x0a\x60\x28\x26\x43\x3a\xa2\xec\xf4\xa5\x46\x6d\x22\xd5\x98\x93\x22\x4b\x88\x64\x16\xc9\x39\x1d\xfa\xfd\x0a\x00\x00\xff\xff\x44\xce\xe9\x01\x8e\x02\x00\x00")

func _1_create_stream_tablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_stream_tablesUpSql,
		"1_create_stream_tables.up.sql",
	)
}

func _1_create_stream_tablesUpSql() (*asset, error) {
	bytes, err := _1_create_stream_tablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_stream_tables.up.sql", size: 654, mode: os.FileMode(420), modTime: time.Unix(1610579507, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x48\x2c\x28\x48\xcd\x4b\x89\x2f\xc9\x8f\x2f\x2e\xc9\x2f\x4a\xb5\xe6\x02\x04\x00\x00\xff\xff\x6d\xdf\x6a\xa8\x29\x00\x00\x00")

func _2_append_to_storeDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeDownSql,
		"2_append_to_store.down.sql",
	)
}

func _2_append_to_storeDownSql() (*asset, error) {
	bytes, err := _2_append_to_storeDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.down.sql", size: 41, mode: os.FileMode(420), modTime: time.Unix(1610579485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_append_to_storeUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x5d\xaf\xda\x46\x14\x7c\xf7\xaf\x18\xa1\x1b\x01\x2a\xa0\xde\x57\x28\x95\x7c\x61\x21\x54\xc4\x10\xdb\x24\xe9\x93\xb5\xf1\x1e\xca\x36\xf8\x43\xbb\xcb\x4d\x69\xd3\xff\x5e\x79\x6d\x8c\x4d\x1d\xa9\x52\x79\xc2\xb3\xc7\x7b\x66\xce\xc7\x78\xe1\x33\x37\x64\xd8\xf9\xf0\xd9\x7e\xeb\x2e\x18\x56\x07\x6f\x11\x6e\x76\x1e\x78\x9e\x53\x2a\x22\x93\x45\xda\x64\x8a\x06\x0e\x00\x44\xda\x28\xe2\x49\x64\xae\x39\x01\x21\xfb\x14\x8e\x2c\x5e\xc1\x52\x14\x0f\x0d\xfc\x95\x94\x96\x59\x1a\xc5\x27\x8a\xbf\x60\xe3\x85\x6c\xcd\xfc\xf2\x88\x5e\x29\x35\x51\xca\x13\x6a\xbf\x52\xe2\x39\xbf\x9e\x33\x2e\xf0\x4b\xb0\xf3\x5e\xca\x83\x84\x0c\x17\xdc\x70\x9b\xa2\x3c\x70\x86\xf0\x59\x78\xf0\xbd\x00\xa1\xfb\xb2\x65\x28\x59\xf6\xaa\xb4\xbd\x5b\x46\x67\x08\x37\xc0\xd3\x93\xb3\x64\x8b\xad\xeb\x33\x1b\x75\xe6\xda\xdc\xf4\x54\x2f\xdc\xe2\x67\xce\x0b\x5b\x6f\x3c\xc7\xc6\x8d\xc7\xf0\xc9\x28\x49\xaf\x04\x73\x22\x9c\xb9\x21\x6d\x2a\xc9\x37\x85\x38\x66\xca\x9e\xea\x9c\x62\x79\x94\x24\xaa\x80\x89\xbd\x23\x60\x5b\xb6\x08\xa1\x27\x35\x35\x0b\x6f\xbc\x70\xd7\xc5\xc3\x1e\xae\xfc\xdd\xbb\xea\x12\x0d\x6d\xa1\x8f\x6f\x99\xcf\x20\x05\xe6\x8d\x8a\xbb\xde\x12\x7a\xd2\x6c\xcc\xbc\xd5\xa7\x59\x29\x63\xb3\x82\xb7\x0b\xb1\xda\x1d\xbc\x25\xc2\xb7\xcc\x73\x50\xfd\xc6\x63\x2c\x14\x71\x43\xe0\x48\xe9\x2b\x28\x35\xea\x5a\x0b\x12\xa4\xa5\x7a\x90\x53\x72\x0f\x98\x1f\x96\x12\x6e\x2c\x07\x52\x8c\xd0\x48\x3d\xac\xa3\x3f\xb8\xdb\x03\x0b\x30\xa8\x69\x8f\x5a\x1c\x87\x15\xc9\x8a\xce\x3b\xfe\x85\xa0\x2f\x8a\x60\x32\xc8\x54\x1a\xc9\xcf\xf2\xcf\xb2\xfc\x0f\x75\x97\x29\xcc\x49\x6a\xc4\x5c\xd3\x9d\x5c\x57\x6f\xe7\xf8\x71\x66\x03\x98\xb7\xc4\x66\x35\xab\xbb\xbb\x27\x75\xcc\x54\x82\x2c\x37\x32\x91\xda\xc8\x18\x71\x96\xc6\x17\xa5\x28\x8d\xaf\xb0\xb3\x3b\xb9\xd5\xb0\x3d\xd1\x3f\xfd\x8c\xf1\xb3\xed\xc0\xbf\xf0\x2e\x0a\xad\xb2\xfb\xee\x26\x60\x60\x9f\x16\x6c\x6f\x17\xae\xff\xa0\xac\xbc\xe9\xc8\xe5\x99\xc4\x08\xf4\x47\x4e\xb1\x21\x31\xc5\x9b\x11\x4a\x6e\x66\x8a\x37\xfd\x51\x3b\xf3\xa8\x2b\x6f\xb7\xec\x4d\x1a\x2b\x4a\x28\x35\x5d\x65\xcd\x95\x2c\xfa\x5f\x54\x5f\x93\x32\x32\xfd\xcd\x46\xd9\xf1\x28\x16\x74\xf2\xdd\x15\x9a\x77\xa2\x3f\xe0\xf9\x9e\xd9\x15\x02\x1c\x8a\xe2\x4c\x09\x12\x11\x37\x30\x32\x21\x6d\x78\x92\x97\xfd\xa4\x7a\xd9\x27\xed\xd5\x9f\xdf\xff\x7e\xfb\x86\x41\xff\xaf\x9e\x5f\xdd\x32\x76\x4d\x6f\x8a\x7e\x01\x9b\x2c\xfa\x5d\x67\xe9\xc0\xdb\x7d\x1c\x0c\x87\x05\xd2\xff\xbb\x3f\x9c\x4e\xad\x65\x34\xf5\x17\xca\x6c\x36\x2b\x09\x32\x35\xd9\xfd\x51\xc3\xf0\xcf\xe7\x6a\xa6\xc6\x63\x7c\xa8\x94\xa4\x97\xe4\x33\x29\x0d\x7d\xca\x2e\xe7\x62\x2d\xb8\x32\x38\xaa\x2c\xc1\x73\x35\x24\x8d\xc5\xa8\x6e\x1a\xd4\x4d\x6f\xcc\xfc\xe8\x11\x94\xe2\x0e\xd5\x3e\x71\x87\x4a\x63\x6c\xbf\xd9\xb3\x60\x23\xe8\x56\x1e\x0b\x0c\xeb\xb5\xab\xcf\xa3\xff\x4a\xa0\xa3\x89\x8f\x54\x0a\xef\x7e\xc4\x2a\xdf\xfe\x1e\xa1\x7b\xf5\x0f\xb9\x28\x1c\xa7\x31\x7a\x5f\xa5\x39\x35\x0d\xb6\xde\x83\x2c\xc9\x2f\x86\x44\x59\xdd\xc3\x7e\x59\x7c\xb1\xda\xbe\x18\xb0\xb0\x61\xfa\x9d\x13\xf8\xbf\xfd\xb3\xfc\xd0\xe0\xfd\x81\xf9\xbf\xd6\xea\x2a\x5f\xef\xdc\x39\x87\x79\xcb\x99\xf3\xf4\x84\xad\xeb\xad\x0f\xee\x9a\x61\xbf\xdd\xaf\x83\xf7\xdb\x99\xf3\x4f\x00\x00\x00\xff\xff\x9a\x3b\x4a\xac\x77\x07\x00\x00")

func _2_append_to_storeUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_append_to_storeUpSql,
		"2_append_to_store.up.sql",
	)
}

func _2_append_to_storeUpSql() (*asset, error) {
	bytes, err := _2_append_to_storeUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_append_to_store.up.sql", size: 1911, mode: os.FileMode(420), modTime: time.Unix(1620518869, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\xcb\x2f\xc9\x4c\xab\x8c\x2f\x2e\x29\x4a\x4d\xcc\x8d\x2f\xa9\x2c\x48\x8d\xcf\xcf\x8b\x4f\x2c\x28\x48\xcd\x4b\x51\xf0\xf7\x53\x48\x2d\x4b\xcd\x2b\x29\xb6\xe6\xc2\xaf\x3d\x31\x27\x07\xbb\x36\x88\x3e\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\xbc\xf6\x5a\x13\x52\x9b\x98\x93\x63\xcd\x05\x08\x00\x00\xff\xff\xd0\xee\xfa\x52\xc7\x00\x00\x00")

func _3_notification_triggersDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersDownSql,
		"3_notification_triggers.down.sql",
	)
}

func _3_notification_triggersDownSql() (*asset, error) {
	bytes, err := _3_notification_triggersDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.down.sql", size: 199, mode: os.FileMode(420), modTime: time.Unix(1610579019, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_notification_triggersUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\xd1\x8e\xa2\x30\x14\x86\xef\xfb\x14\x27\x84\xa4\x9a\x98\x7d\x00\xb9\x62\xf1\xc0\x92\xb0\x85\x2d\x25\x7a\x47\xea\xda\x35\x26\x08\xac\xa2\x89\x59\xf7\xdd\x37\x54\x45\xea\x3a\xe3\xcc\x24\x73\x67\xef\x7a\xfe\xf3\x7f\xb4\xf0\x73\x3c\x8e\xae\x40\x88\x39\x70\x4c\x22\xd7\x43\xf0\x33\xe6\x89\x30\x66\x50\x56\xcd\xea\xd7\x21\x97\x45\x31\x18\x12\x8e\x22\xe3\x2c\x05\xc1\xc3\x20\x40\x4e\xdc\x14\x6c\x9b\x7c\xc5\x20\x64\x04\x00\x20\x41\xee\xc7\xfc\x3b\xd4\xcb\xfc\xe4\x1b\x50\x5b\x16\x05\x1d\x01\xa5\xba\xa1\x5d\xc7\x23\xd0\x3f\xe6\xd6\xda\x36\x1b\x25\xd7\xf9\x6a\x61\x8d\xc1\xa2\x9d\xc0\x70\xfa\xa5\x93\xc0\x58\xda\x36\xba\x8f\x69\x0e\xb5\xea\x40\x26\xa6\x95\x1e\x62\xd4\x5e\x95\x8d\x49\xb9\x60\xae\xd2\x1b\x4e\xa3\x7e\xef\x54\xf9\x53\xe5\xe5\x6e\x3d\x57\x1b\x6b\x0c\xf4\x82\x59\x16\xd5\x5c\x16\xf9\x4d\x87\xb6\xdd\x52\xf6\x6a\xb3\x5d\x55\xa5\x76\xf7\x84\x96\xd2\x69\xff\xbf\x9a\xbb\x57\x32\x18\x57\xca\x59\x1b\x0b\x9c\x89\xd7\x29\x6b\xd5\xc8\x85\x6c\x64\x1f\x74\xa6\x5c\x24\xc3\xf0\x97\x0e\x1d\xa2\x2b\xa7\xe4\xb4\x9d\x0e\x41\x36\x71\x88\x6d\x43\xe4\xb2\x20\x73\x03\x84\x24\x4a\x82\xf4\x47\xe4\x10\xf2\x38\x88\xbd\xef\xf8\xa1\x40\xde\x64\xe1\x99\xcc\x67\x32\xdf\x93\xcc\x73\xd0\x7a\x63\x31\xaf\xca\x5c\xd6\xb5\x2a\x17\x1a\xe7\xfa\x02\x39\x84\x2c\x45\x2e\x74\x21\x66\xa0\xaf\xb1\xd5\x3b\x3f\xe6\x80\xae\xf7\x0d\x78\x3c\xd5\x05\x9c\xa1\x97\x09\x84\x84\xc7\x1e\x4e\x32\x8e\xc6\xc4\x7d\xf1\xc1\xbd\xd0\x7c\xd6\x01\x8c\x3f\xcd\x21\xff\x02\x00\x00\xff\xff\x3a\x7f\xd7\xa5\x24\x06\x00\x00")

func _3_notification_triggersUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_notification_triggersUpSql,
		"3_notification_triggers.up.sql",
	)
}

func _3_notification_triggersUpSql() (*asset, error) {
	bytes, err := _3_notification_triggersUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_notification_triggers.up.sql", size: 1572, mode: os.FileMode(420), modTime: time.Unix(1620554104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x48\x4f\x2d\x89\xcf\x2f\x8a\x4f\x2e\x4a\x4d\x2c\x49\x8d\x2f\x2e\x4d\x2a\x4e\x2e\xca\x2c\x28\xc9\xcc\xcf\x8b\x4f\xce\x48\x4d\xce\x2e\xc8\xcf\xcc\x2b\xb1\xe6\x02\x6b\x0a\x71\x74\xf2\x71\x55\x40\x56\x53\x8c\xa4\xa8\xd8\x9a\x0b\x10\x00\x00\xff\xff\xe0\x60\xe0\xac\x5b\x00\x00\x00")

func _4_subscriptions_checkpointDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointDownSql,
		"4_subscriptions_checkpoint.down.sql",
	)
}

func _4_subscriptions_checkpointDownSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.down.sql", size: 91, mode: os.FileMode(420), modTime: time.Unix(1610579032, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_subscriptions_checkpointUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6e\xe3\x20\x10\x87\xef\x3c\xc5\x1c\x7c\x88\xa5\x4d\xb4\xf7\x68\x0f\xac\x3d\xb1\xac\x65\xc1\xc5\x50\x25\x27\x94\x38\x24\xb5\xda\x98\x14\x63\xf5\xf5\x2b\x93\xa8\x55\xdc\x7f\x73\xe1\xf0\x9b\x61\x3e\x3e\x32\x89\x54\x21\x28\xfa\x97\x21\xf4\xc3\xae\x6f\x7c\x7b\x0e\xad\xeb\x7a\xd3\x3c\xd8\xe6\xf1\xec\xda\x2e\xf4\x30\x23\x00\x70\x93\x9b\x76\x0f\xb1\x14\xae\xd5\x78\x56\xb2\xfc\x4f\xe5\x06\xfe\xe1\xe6\x57\xec\x7e\xda\xf6\xc1\xf4\xf6\x79\xb0\x5d\x63\x4d\x37\x9c\x76\xd6\x43\xc9\x15\x16\x28\x81\x0b\x05\x5c\x33\x16\xaf\xc8\x71\x45\x35\x53\xf0\x9b\xa4\x4b\x42\xae\x48\x42\x82\xc4\x8a\xd1\x0c\x61\xa5\x79\xa6\x4a\xc1\xe1\x68\x83\x71\xde\x34\xde\x6e\x83\x35\x37\x38\xef\xb4\x17\x56\xf3\x01\x76\x04\x25\x29\x91\xa8\xb4\xe4\xf5\xf5\xc9\xb3\x1f\x51\x49\x0a\xb4\x86\x24\x21\xb1\xb3\xe4\x35\x4a\x35\x66\xe2\x3b\x5d\x93\xe5\x69\x9c\xbd\xa7\x4c\x63\x0d\xb3\x29\xda\x25\x1d\x6b\x3e\x87\xca\xfa\x83\xf3\x27\x18\xce\xfb\x6d\xb0\x10\x1c\x1c\x9c\x6f\x2c\x78\xf7\x02\xde\x86\xc1\x77\x6d\x77\x5c\xbc\x4d\x08\x0e\x99\xe0\x2b\x56\x66\xea\x8b\xad\x51\xb0\x00\x5d\xe5\xa3\xd5\x1a\xd5\xf4\x1b\xff\xe0\x3a\x63\x3a\xc7\x7c\x31\x09\xe2\xf8\x45\x57\xc9\x8b\x4f\x25\x2d\x09\x49\x12\x60\x94\x17\x9a\x16\x08\xf5\x1d\x5b\x92\xd7\x00\x00\x00\xff\xff\xd4\xd0\xd6\x3a\x53\x02\x00\x00")

func _4_subscriptions_checkpointUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_subscriptions_checkpointUpSql,
		"4_subscriptions_checkpoint.up.sql",
	)
}

func _4_subscriptions_checkpointUpSql() (*asset, error) {
	bytes, err := _4_subscriptions_checkpointUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_subscriptions_checkpoint.up.sql", size: 595, mode: os.FileMode(420), modTime: time.Unix(1610579039, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x09\xf2\x74\x77\x77\x0d\x52\x40\x00\x4f\x37\x05\xd7\x08\xcf\xe0\x90\x60\x85\x82\xa2\xfc\xac\xd4\xe4\x92\xf8\xe4\xfc\xa2\xa2\xd4\x9c\xc4\x92\xd4\x94\xf8\xd4\xb2\xd4\xbc\x92\xf8\xfc\xbc\xf8\xc4\x82\x82\xd4\xbc\x14\x05\x7f\x3f\x05\xb0\x50\xb1\x35\x17\xd8\x38\xb7\x50\x3f\xe7\x10\x4f\x7f\x3f\x52\x8c\x83\x6a\xf5\x75\x0c\x71\x0d\xf2\x74\xf4\xf1\x8c\x72\x75\x51\x08\xf3\x74\x0d\x47\xd2\x8a\xae\xa5\x38\xbe\x2c\x33\xb5\x1c\xaa\x31\xc4\xd1\xc9\xc7\x55\x41\x01\xab\x17\x30\x34\x5a\x73\x01\x02\x00\x00\xff\xff\x59\xc9\xda\x7a\xf7\x00\x00\x00")

func _5_correlated_eventsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsDownSql,
		"5_correlated_events.down.sql",
	)
}

func _5_correlated_eventsDownSql() (*asset, error) {
	bytes, err := _5_correlated_eventsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.down.sql", size: 247, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_correlated_eventsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xcb\x6e\xdb\x30\x10\xbc\xf3\x2b\xf6\x60\x20\x76\xe1\xf8\x07\x84\x04\x60\xa8\x91\xc2\x96\x21\x5d\x8a\x8a\xd3\x5e\x04\xc1\xe2\x41\x45\x63\x1b\xb6\xe0\xa2\x7f\x5f\xe8\x65\xcb\xb6\x52\x84\x17\x01\xe4\xcc\xee\xec\xce\x48\x58\x70\x07\x72\xfc\x49\x81\xd6\xdb\xfd\xde\xff\xce\x2b\x5f\x64\xfe\xe8\x37\xd5\x81\xa6\x8c\x88\x4e\xf7\xe5\x76\x93\x95\x05\x75\xc7\xe1\xcd\xd5\x5f\x6d\x1c\xe9\x54\xa9\x79\x83\x6d\x88\xd9\xa1\xda\xfb\xfc\x3d\xab\xfe\xee\xfc\x67\xb1\xa7\xc2\x9f\xc0\x1e\xfd\xfe\x50\x6e\x37\x44\x52\x3b\xc4\xb0\x03\x2c\x6b\xd0\x91\xb1\x90\xb1\xa6\x6f\xf8\x41\xd3\x1b\x49\xf3\xeb\xce\xf3\xd1\xf2\x33\xd6\x8f\x6a\x11\xc1\x42\x0b\x24\x2d\xf0\x30\xbd\xa8\x36\xa8\xd3\x53\x89\x8c\xa6\x10\x0a\x0e\x24\x78\x22\x78\x08\x36\x0b\x18\xeb\xf6\xfd\xc2\x1d\xac\xe4\x4a\xfe\x44\x48\xaf\x12\xab\xdb\xdd\x67\xc7\xd2\xff\x21\x9e\x34\x22\x12\x28\x08\x47\x6b\xbf\xb8\xf4\x62\x4e\x7e\xf1\xa5\x9d\xd8\x9a\x97\x11\x03\xd7\xfe\x34\x84\xd4\x1a\x96\xbe\x1a\xa9\xbb\x21\xc8\xd7\x22\xfd\x62\x68\xd6\x43\xdd\xe3\x66\x61\xa7\x1a\xf5\xe1\x3a\x3c\x93\xca\x62\x84\x52\x16\x23\x84\xde\xb3\x5b\x78\xf7\x72\xde\x8e\xb1\x64\xb1\x54\x5c\x80\xa2\x54\x0b\x27\x8d\xa6\xdd\x7e\xfb\xcb\xaf\xab\xec\x7a\xc4\xe9\x8c\x59\xb8\xd4\xea\x84\x9c\x95\x71\x0c\xcb\x78\x42\x93\x09\x0b\x21\x14\xb7\x18\x84\xe7\x2a\xc6\x75\xce\x02\xf6\x84\x58\x6a\xf6\x31\xea\x81\x34\x56\x8b\x77\x5f\xe5\x45\x5e\xe5\xf7\x8f\x8f\x77\xe2\x0c\xb8\x97\xc5\x5d\xd0\x70\x65\x34\x4e\x97\x49\x93\x4b\x72\xcf\xd0\x83\x38\xd5\x82\xeb\xc2\x2d\x19\x3a\x24\x19\x05\xad\x0a\xa9\x13\x58\x57\x27\xdb\xdc\xfa\xd9\x20\x5e\xb9\x4a\x91\xf4\xb9\xbe\x0e\x44\x2d\xf7\x22\x9d\x83\x8b\xfe\xbd\x4f\x69\xd7\x72\xa8\x87\x41\x87\x01\x9b\x4c\x48\x71\x1d\xa7\x3c\x06\x2d\xd5\x32\x4e\xbe\xab\xb3\x3d\xdd\x9e\x3f\xb4\x24\xdb\x6e\xb2\x7c\xb7\xf3\x9b\x36\x06\x3c\x72\xb0\xdd\x58\xcd\x85\xe9\x03\xd8\xff\xaa\x04\x2e\x9e\xc9\x9a\x55\xbb\x8d\x37\x88\xd4\x81\x96\xd6\x08\x84\xa9\xc5\x7f\xbc\x0f\xd8\xbf\x00\x00\x00\xff\xff\xed\xee\x53\x34\xc1\x04\x00\x00")

func _5_correlated_eventsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_correlated_eventsUpSql,
		"5_correlated_events.up.sql",
	)
}

func _5_correlated_eventsUpSql() (*asset, error) {
	bytes, err := _5_correlated_eventsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_correlated_events.up.sql", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1619343343, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x9b\x5b\x6f\x1c\x47\x92\x85\x9f\xd9\xbf\xa2\x46\xc0\x18\xe4\x42\x4b\xd5\xfd\x22\x40\xc0\x62\x6c\x2f\xe0\x87\xf5\x00\x6b\xcf\xd3\xd6\x82\xa8\x4b\x16\xdd\x18\x92\x4d\x77\x37\xed\x92\x0d\xfd\xf7\xc5\x17\x71\x4a\x24\x25\xde\x4c\x53\xb3\x0f\x2d\x55\x57\x57\x65\x46\x46\x46\x9c\x38\x11\x91\x7c\xf3\x26\xfa\x7a\x33\x86\xe8\x34\x5c\x84\x6d\xb7\x0f\x63\x34\x6d\xb6\xd1\x65\x37\xfc\xb3\x3b\x0d\xd1\xf9\xfa\x74\xdb\xed\xd7\x9b\x8b\x5d\xd4\xbf\x8f\x4e\x37\xff\xde\xaf\x2f\xc6\x6e\xdf\x45\xdf\xfc\x3d\xfa\xfe\xef\x3f\x46\xdf\x7e\xf3\xdd\x8f\xc7\xd1\xe1\x7f\x7c\x7c\xfb\x68\xf5\xe6\x4d\xb4\xdb\x5c\x6d\x87\xb0\x7b\xcb\x75\x72\x32\x6c\x43\xb7\x0f\x27\xbb\xfd\x36\x74\xe7\x27\xfb\xae\x3f\x0b\xbb\xe3\x71\xf3\xeb\xc5\xf1\xee\xe7\xb3\x07\x1e\xb9\xba\x5c\x1e\x48\x4f\xba\xcb\xcb\x70\x31\x9e\xec\x37\x27\xbb\xfd\x66\x1b\x6e\xbd\xfe\xf9\xaf\xd7\x6f\x66\x27\x17\x9b\xfd\x7a\x5a\x0f\xb6\x88\x93\xfd\x76\x7d\x7a\x1a\xb6\xb7\xa7\xbf\xef\x99\xeb\x51\xf2\x93\xdd\x55\xbf\x1b\xb6\xeb\x4b\x53\xc5\xc9\xf0\x53\x18\xfe\x79\xb9\x59\x5f\xec\x6f\x0d\xf4\xc0\x63\xd7\x63\x15\x27\xc3\x66\xbb\x0d\x67\x28\xeb\x24\xfc\x12\x2e\xf6\xb7\xa5\xb9\xeb\xf7\xeb\xb7\xa5\xfe\xe3\xd3\xcd\xea\xf3\x2d\x5a\xad\xd6\xe7\x97\x9b\xed\x3e\x3a\x5c\x1d\xbc\xea\xdf\xef\xc3\xee\xd5\xea\xe0\xd5\xb0\x39\xbf\xdc\x86\xdd\xee\xcd\xe9\x6f\xeb\x4b\x6e\x4c\xe7\x7b\xfe\x5b\x6f\xfc\xdf\x37\xeb\xcd\xd5\x7e\x7d\xc6\x97\x8d\xbd\x70\xd9\xed\x7f\x7a\x33\xad\xcf\x02\x17\xdc\xd8\xed\xb7\xeb\x8b\x53\xfb\x6d\xbf\x3e\x0f\xaf\x56\x47\xab\xd5\x74\x75\x31\x2c\xd2\xfc\x77\xe8\xc6\x43\xb3\x8a\xff\xf9\x5f\xa6\x7d\x1d\x5d\x74\xe7\x21\xf2\xd7\x8e\xa2\xc3\xe5\x6e\xd8\x6e\x37\xdb\xa3\xe8\xf7\xd5\xc1\xe9\x6f\xf6\x2d\x7a\xfb\x2e\x42\xaa\xe3\xef\xc3\xaf\x0c\x12\xb6\x87\x26\x36\xdf\xff\x76\x35\x4d\x61\x6b\xc3\x1e\x1d\xad\x0e\xd6\x93\xbd\xf0\x97\x77\xd1\xc5\xfa\x8c\x21\x0e\xb6\x61\x7f\xb5\xbd\xe0\xeb\xeb\x68\x3a\xdf\x1f\x7f\xcb\xe8\xd3\xe1\x2b\x06\x8a\xfe\xfa\xf3\xdb\xe8\xaf\xbf\xbc\x72\x49\x6c\xae\xa3\xd5\xc1\x87\xd5\xea\xe0\x97\x6e\x1b\xf5\x57\x53\xe4\xf3\xf8\x24\xab\x83\x13\x17\xe7\x5d\xb4\xde\x1c\x7f\xbd\xb9\x7c\x7f\xf8\x55\x7f\x35\xbd\x8e\x4e\x7f\x3b\x5a\x1d\x0c\x67\xdf\x2e\x92\x1e\x7f\x7d\xb6\xd9\x85\xc3\xa3\xd5\x4b\xc9\xc3\x30\x3e\xfe\x3d\x03\x85\xed\xd6\xe5\xd6\xcd\xfe\x6a\x3a\xfe\x1b\xa2\x1f\x1e\xbd\xe6\x89\xd5\x87\xd5\x6a\xff\xfe\x32\x44\xdd\x6e\x17\xf6\xa8\xfc\x6a\xd8\x33\x8a\xad\x4f\xfb\xb1\x3a\x58\x5f\x4c\x9b\x28\xda\xec\x8e\xff\x73\x7d\x16\xbe\xbb\x98\x36\x1f\xdf\xd3\x16\x2e\xf7\x6f\x8c\x60\x7b\x18\x45\xda\xc6\xd5\xc1\x6e\xfd\x9b\x7d\x5f\x5f\xec\xcb\x7c\x75\x70\x0e\x68\x44\x1f\x07\xfd\xaf\xcd\x18\xec\xe6\x8f\xeb\xf3\x10\x61\x26\xc7\x5c\x31\xcf\x9b\x37\xd1\xf7\x8c\xa5\x25\x60\x59\xa6\x06\xb7\xa1\xc3\x69\xfd\xa9\x10\x47\xf6\xfc\xe1\x91\xa6\x46\x98\x8f\xef\x1e\xdb\x9b\x3e\xea\x0f\x48\x74\x73\x54\x44\x7c\x60\x54\x9e\x3f\x3c\xf2\x05\xdc\x1e\xd4\x5e\xf4\x41\x59\xc8\xad\x41\x59\xe8\x03\x83\xf2\xfc\xe1\xd1\x4d\x35\xdc\x1e\xda\x5e\xbf\x7f\xe8\xf5\xf4\xde\xb4\xf5\xf0\x0c\xa8\xf2\xf0\xe8\x5a\xad\x9f\x4d\x71\x43\xd7\xdf\xed\xbe\x59\x6f\x6f\x4d\xf3\xeb\x4f\x61\xff\x53\xd8\x46\x5d\x34\xae\xb7\x61\xd8\x6f\xb6\xef\x1f\x98\xce\xde\x3f\x3c\x8a\xfa\xcd\xe6\xec\xf3\xa5\x7c\xb5\xd9\x1d\xb3\x0e\xe6\xf8\xcb\xbb\x28\x5e\xb6\xe2\xfd\xee\xd6\x94\xeb\x5d\xb4\x7b\xbf\x7b\x4c\x77\x3f\xbc\xdf\xf9\x7e\x84\xed\xd4\x0d\xe1\xf7\x0f\x37\xe6\x93\x71\xe3\xaf\x27\x27\x77\x47\x88\x6f\x36\xbf\x5e\xfc\xf0\xf3\x59\xf4\x4e\x76\x7e\xf8\xaa\x9d\x93\xa9\x9d\xeb\xbe\x9d\xe3\xba\x9d\xe3\xf8\xee\xcf\x34\xb5\x73\x95\xb6\x73\xdc\xb4\xf3\xc4\xff\x53\x3b\x17\xb1\xbf\x53\x25\xed\x5c\xe5\x7e\x9f\xeb\xa2\x68\xe7\xbc\x6e\xe7\x74\x6c\xe7\xbc\x6f\xe7\x61\x6c\xe7\xb4\x6f\xe7\xb4\x69\xe7\xbe\x6c\xe7\x50\xb6\x73\x9e\xb6\x73\x92\xb6\x73\xda\xb5\x73\x1a\xfc\xb7\xbc\x6b\xe7\x7c\x6c\xe7\x61\xf0\x77\x97\x67\x63\xe6\xcb\x6f\xcb\xc2\x67\xc8\xdb\xb9\x2b\xfd\x39\xe6\x4c\xab\x9b\x32\xbf\x5a\x10\xf7\x61\x4d\x08\x19\xee\x42\xdc\x05\x3f\x6e\x20\xf6\xea\xe0\xe0\x11\xcd\xbe\x5e\x1d\x1c\xbc\x7a\x24\x80\xbf\x7a\xbd\x3a\x38\x62\xa7\x9e\x20\x1f\xa2\xfd\x9b\x21\xd5\x4d\xd1\x0c\xaa\x3e\xc6\x83\x27\xad\xf0\x31\xfc\xfd\x08\x9b\x06\x7c\x6f\xdf\x7d\x6a\x7a\xbf\x83\x22\x6f\xa3\xc7\xd7\x66\x90\xf2\x36\xca\x9a\xd7\x66\xcb\x6f\x6f\xfa\xf9\x61\x9e\xc6\x47\x76\x1f\xef\x7b\xeb\xde\xf9\x8f\x8b\xf5\x7c\x98\x94\x49\x5c\x54\x4d\xde\xa4\xaf\xa3\xf8\xe8\xc3\xea\xa0\x43\x86\xaf\x6c\xe5\xbf\xdb\x72\xdf\x46\x5a\x35\x02\xbe\xb5\x7f\x3f\x7c\xdc\xa4\xee\xf5\x53\xac\xff\x1f\x97\xcf\xb5\xfd\x7a\x68\xe7\x26\x6d\xe7\x2c\x69\xe7\x12\xdb\xe3\x3a\x6e\xe7\x24\x6f\xe7\x3a\x6f\xe7\xaa\xd2\x73\x5d\x3b\x27\x99\x7f\x9a\xa4\x9d\xb3\xd4\x7d\x23\x4c\xed\x5c\xe6\xfe\x5e\xdc\xbb\xad\x87\xbe\x9d\xb3\xae\x9d\x9b\xa2\x9d\xcb\xac\x9d\xbb\xdc\x9f\xcf\x0b\xb7\xeb\xaa\x69\xe7\x0e\xff\x48\x7d\xac\x31\x6e\xe7\x14\x7f\x28\xdb\xb9\x6b\x7c\xbe\x3e\xe8\x77\xde\xcd\xdb\x39\xe5\xdd\xa2\x9d\x27\x64\x2b\xdb\x39\x9d\xda\xb9\x41\x5e\x7c\xa6\x6a\xe7\x10\xda\x39\x19\xda\x39\x69\x7c\x3d\x4d\xd9\xce\x65\xdc\xce\x01\x9f\xe5\x3e\xfe\xdb\xb5\xf3\xc8\xd8\x71\x3b\x77\xbd\x7f\xe7\xb7\xb8\x70\x7d\x30\x17\xd7\x53\xd7\xce\x7d\xd2\xce\x53\xde\xce\xa5\x30\xa1\xab\xda\x39\x0f\xee\xbf\xdc\x2f\x52\x97\x95\xb1\xd2\xac\x9d\xeb\xd0\xce\xd5\xe0\x72\x64\x93\xcf\x33\x35\xee\xe3\xe8\x76\x6c\xda\xb9\xca\xda\x79\xcc\x5c\xb6\xb1\x6f\xe7\xaa\xf3\xdf\xd3\xb8\x9d\xc7\xc4\xef\xb3\x36\xf4\xb9\xfc\xd6\xd4\xed\x5c\x64\xed\x9c\xb2\x4f\x55\x3b\x0f\xe8\x37\x75\x6c\x61\x8f\x12\xe4\x19\xdb\xb9\xd4\x3e\x82\x15\x65\xd3\xce\x05\x7a\xae\x5d\xf7\x89\xf4\x1e\x67\xed\x3c\x25\xed\x9c\xc4\xed\x5c\x16\xae\x93\xba\x6e\xe7\x10\xb7\x73\x11\xfc\xba\x00\x0f\xb5\x47\xe8\xb6\x2f\x7c\x3d\x3d\xf2\x8f\x2e\x37\x73\x8d\xcc\x13\xda\xb9\xc9\xda\xb9\xc7\x46\x06\xd7\x59\xc8\x5c\x7f\xec\xfd\x94\xf9\x3a\x8a\xaa\x9d\xbb\xd1\xc7\xc8\x93\x76\xce\x4b\xdf\x6f\xf6\xbe\x42\x57\x75\x3b\x0f\x45\x3b\xd7\x3c\x83\xcd\x82\xaf\x8c\x8b\xed\x0e\x6e\x83\xe8\x9e\xf7\xcc\x3e\x2b\xd7\x51\x26\xfd\xd8\x3c\xb5\xdb\x4c\x48\xfc\x59\x64\x88\xb5\xb7\x49\x68\xe7\x3e\x6d\xe7\x22\xf7\x35\xd9\x38\x9d\xeb\xa5\xea\x5d\xbe\xac\x76\x5b\xee\x82\xcf\xc1\xbd\x31\xf5\xfd\x64\x7e\x6c\x00\x59\xc1\x70\xec\x74\xa8\x5c\xd7\xec\xc5\x98\x7b\xcc\x60\x8e\x51\x7e\x55\x8c\xed\x1c\x77\x6e\x83\x69\xed\xeb\x65\x4d\xf8\x45\xc7\xb8\x83\xdb\x11\x36\x8d\x3c\xe5\xe8\xf6\x3e\x16\xbe\x26\xf4\xca\x77\xe2\x0c\xfb\xc2\x7a\xb1\x8d\xa1\x69\xe7\xac\xd1\xbe\x77\xbe\xf7\xcc\xf3\x69\x0c\xc9\x59\x2b\xfa\xc0\x06\x13\xb7\x4f\x8b\x37\x4f\x8a\x21\x86\x27\x2f\x16\x41\x6c\xb4\x87\xe2\x87\xe7\x34\x4f\x8a\x1e\x36\xd6\x9f\x88\x1d\x37\x57\xf6\x85\x23\xc7\xb2\x2a\xc5\x8d\xb2\xc8\x9f\x13\x38\x8a\xb8\x7a\x91\xc0\xf1\x59\x66\xfc\xd2\x8c\xa9\x8a\x3d\x02\x4c\x85\x23\x5d\x1c\x1c\x6d\xb0\x72\x10\x1a\x14\x03\xbd\x89\x1a\x5c\xf3\x3c\x1e\xcf\x3d\xf3\xd4\xe0\x63\x82\x5c\xc6\xb2\x06\xf7\x1c\xae\x07\x31\xae\xba\x71\xe4\xc7\x0b\xea\xc9\xaf\x41\xc2\x41\xf7\x89\x3e\x20\xd6\x43\xec\x0a\x4f\x03\x9d\x4b\x3c\xb1\x76\x86\x76\x17\xbb\xba\x4f\x61\xcf\x70\x8b\xfb\x86\x32\x9f\xb8\xbf\xa0\xf1\x89\x43\xdc\x37\xca\x93\xbc\xe1\x91\xd5\xbc\x94\x2b\x3c\xb4\x18\xf9\x41\x9e\x3c\x8b\x3f\xd5\xc5\x97\x71\x83\xe7\x53\x27\x42\x2b\xf4\x1c\xa8\xef\x08\x63\x9d\x43\x39\x61\x19\x2a\x80\xd1\x73\x3f\x21\x0c\x13\x76\x7b\x87\x62\x52\x83\x8e\x90\x1f\x3c\xcc\x60\xe4\x84\x4b\xde\x29\xf9\x3d\x51\xa8\xca\x3d\x54\x13\x72\xd3\xdc\xa1\xdc\xc2\x6d\xa1\x30\x1e\x3c\x8c\x65\x65\x3b\x4f\xb5\x42\x26\x69\x49\xef\xe9\x06\x34\x00\xba\x61\xe1\x28\x78\x48\xc7\xf8\xa1\x7c\xfc\x4e\x08\x81\xc2\x40\x65\x2c\xdc\xa7\xed\xdc\x67\x1e\xda\x08\x8b\x65\xe9\x21\xc4\xbe\xd7\x1e\x5a\xb3\xec\x3a\xfc\x12\xb6\xa1\x38\x38\xb0\xd1\x9b\xe0\xd4\xcf\xa8\x49\xed\x8e\x1c\x57\x4e\x2b\xa1\x1a\xd0\x05\xa8\x05\x72\x33\x5e\x13\x44\x6d\x16\x2a\x98\x39\x45\x44\x8f\x8c\x0f\xe5\x24\xd4\x1a\x30\xc4\x1e\xd2\xf8\x0d\x7d\x11\x76\xf3\xc6\x9f\x23\x64\x67\x0a\x73\xe8\x6e\xea\x45\x5f\x83\x83\x08\x6b\x1f\x12\x5f\x27\xf7\x01\x2c\x28\x06\x94\x05\xbd\x43\xfb\xa0\x5e\x05\x61\xb5\x73\x2a\x42\x68\x67\xfe\x7e\x12\x8d\x84\xe2\x15\x4e\x7d\x06\xbd\x0b\xf8\x19\x65\x52\x9a\x97\x61\x0b\x89\xa8\x45\xe6\x00\xc3\xfb\xcc\x8b\xbc\xc8\xc8\x77\xd6\x8d\x1e\xd1\x13\xba\x03\xd8\xa0\x91\xd0\x98\x42\x7b\x5a\x67\x4e\xbf\x01\xc6\x04\x2a\x32\x38\x60\x36\xbd\xd3\x87\x4c\xdf\xeb\xd2\xc7\x40\x76\x74\xca\x75\x3f\xba\xbe\x3a\xe9\x02\x5a\x02\xdd\x43\x6f\x3c\x37\x95\x4e\xbf\xfb\xdc\x9f\x2d\x7a\x51\x90\xca\x6d\x9e\xfd\x1d\x62\x51\xd5\xcc\x6d\xc2\xf6\xa3\x77\x1a\x67\xf4\x3e\x73\x7b\xae\x04\xb6\xec\xcb\x28\x4a\x83\xed\x02\xc6\x7c\x67\xdd\x8c\x8b\x1d\x11\x1c\x98\x0b\x7b\x40\x7e\xec\x6a\x28\x3d\x08\x70\x8d\xec\x06\xe4\xb5\xef\x2d\xbe\x03\x80\x57\xa2\x42\xcd\xe0\x14\x92\x3d\x36\xba\xd4\x89\x0e\x55\xbe\x37\x50\xb8\x52\xd4\x0e\x1d\x87\xce\xdf\x29\x65\xdf\xec\x33\x7e\xc4\xda\xeb\xd8\x83\x09\xeb\x87\xbe\xb3\xc7\xc8\x46\xca\x1d\xcb\x5f\xb1\x01\xf6\x94\x4f\x2c\xb9\x7b\xe9\x1d\xfa\x8b\x9d\x0c\x99\xdb\x33\x36\x88\x4d\x8c\xa2\xb0\xcc\x9d\xa4\x6e\x67\xc8\xca\x78\x04\x2c\xc6\x68\x44\xad\xa1\xfd\xb1\xf4\x87\x0e\xcc\xde\x7a\xc7\x05\xde\x85\x3a\x43\x41\xcd\xe6\x06\x9f\x1b\x7a\x48\x2a\xc2\x3e\x62\x73\xa5\xf6\xa7\x4e\x9d\x86\x23\x27\x34\x9c\xfd\xc0\xbf\x79\x87\xd4\x69\xd0\xef\x8c\x83\x3e\x09\xd8\x50\x47\xf4\x5f\x2a\xbd\x30\xdc\x4a\x1c\x47\x48\x09\x08\xbc\x60\x8e\x95\x38\x6a\xd7\x03\xeb\x22\x6d\x62\x1e\x64\xec\x44\x61\x91\xb5\x89\x15\xd8\x45\x0a\xa0\xb1\x60\xa9\xa5\x35\xa9\xfb\x3f\xf3\x80\x09\xf8\x04\x38\x34\x6a\x9e\x0c\x1d\x0d\xed\xdc\x65\x4a\x37\x6a\xc7\x3d\x52\x16\xe6\x22\x25\x25\x58\x97\x0a\xfc\xc8\x40\xba\x57\x57\x4e\xe3\x8d\x10\x74\x6e\x67\x19\x24\x24\xb8\x4d\x80\xb3\xa9\xd2\x57\xf6\x98\x94\x61\xa8\xdd\x46\x13\xd9\x8f\xa5\x90\xa9\xd2\x9d\xd4\xf7\xd1\xe8\x7e\xe1\x29\x17\x7a\x46\x6f\x86\x37\x9d\xe3\x72\x31\xc8\x3f\x46\xbf\x2e\x84\x73\xa1\x72\x2c\x46\x8f\xa5\x52\x2e\xf4\x60\xba\xcf\xfd\x1e\x7a\x24\xfd\xec\xf5\xc1\xce\x98\x8b\x39\x90\x8b\xbd\x44\x4f\xd8\x75\xb6\xa4\xc8\x9d\xcb\x9d\x68\x6c\x74\xca\xde\x81\x0d\x9d\x7c\xbb\x56\x1c\x02\x4b\xb0\x09\xf4\x80\xbf\x60\x33\xdc\x43\xc7\xa4\x99\xe8\x77\x52\x1c\x20\x8e\xf0\x6c\x18\xdd\xe7\xc1\x27\xfc\x10\x6c\x22\xad\xb0\xb4\x2d\x75\x1c\x21\x15\x4a\x95\x56\xf3\x21\xfd\xb6\x74\x75\x10\xc6\x57\xf2\x83\xc9\xf5\xde\xc9\x66\xb1\x21\x64\x27\x15\x37\xdb\xcf\xdd\xc7\xc0\x8a\x5c\xa9\x5d\x2f\xec\x26\x55\xc6\xaf\xc0\x39\x62\x06\x84\x0e\xbb\x41\x6f\xec\x21\x3a\x41\x76\x70\xd6\xf6\x39\x13\x89\x5b\xfc\xb3\xf2\xd4\xca\xe2\x5b\xe7\xf7\xf3\xee\xda\x7e\x89\xd5\x60\x21\x18\x0e\xf6\xa3\x67\xd2\x28\xd2\x5e\x74\xcf\xff\x60\x1e\x7a\xe7\x63\x3e\x32\x3a\x3e\x12\xe3\xd0\x17\x63\xb1\xee\xa5\x34\x88\xcf\x63\x83\x4d\xe7\xa9\xa2\xe1\xf3\xe4\x3e\x44\x7c\x04\x8b\x78\x97\x67\x20\xa5\x66\xb7\x4a\xe3\xad\xfc\xd0\xb8\x7f\xb0\x5e\xdb\x73\xd9\xe9\x82\x73\x16\x2b\x53\xb7\x45\xe4\xe9\x54\x1e\x60\x4c\x4b\x41\x47\xa5\x8d\x4b\xd9\x61\xf2\x58\xcc\x9e\x11\x1f\x48\xb9\x6d\x4f\x14\x7b\x58\x23\x32\x5b\x09\xa7\x14\x57\x90\x8f\xf0\x1e\x71\x14\xfd\x7f\xd4\xcd\xe8\x18\x6e\xfb\x28\x3e\x52\x8d\xbe\x8e\x58\x3e\x08\x8e\x81\x55\x56\xba\xe9\x7d\xfd\x60\x2f\x7b\xdb\x49\xe7\x59\xee\xc9\x41\xa2\x32\x06\x76\x03\x77\x61\x8f\xd0\x81\xe9\xbc\x90\x9e\xb5\xc7\x83\x92\x86\x41\xbe\x65\xa4\xbd\xbc\xc6\x2d\x38\x13\xfb\x0f\xb6\xa3\x17\x74\x14\x72\xc5\xd7\xc6\xf1\x17\x59\x07\x95\x63\x6d\x8c\x54\x65\xd8\x5a\x73\xd6\x2a\x47\x0d\xce\x13\xc0\x47\xe4\x20\x56\x58\x6c\x2a\x84\x3d\xc1\x6d\x8a\x74\x7f\xd1\x19\x3e\x0b\x5e\x84\xda\xf7\x0f\x39\xd8\x57\x38\x0b\x7b\x92\x05\xf7\x57\x74\x64\xb6\x9c\xf9\xba\xf1\x33\xd6\xd9\x2b\xf6\x10\x83\x82\x38\x53\xa2\x58\x89\x6e\x89\xb5\xbd\xf0\x02\x1d\x74\xe2\x73\xb9\x38\x24\xdf\xeb\x05\x13\x73\xf7\xd9\xa0\xfd\xc7\xcf\x52\x95\xbc\xc0\x43\x8b\x53\x89\x73\x3b\xf6\x21\x56\x59\xc7\xec\x79\xf0\xb8\x82\xff\x55\xf2\x07\x70\x25\x13\xaf\x89\x55\xb6\x26\x36\xd5\x8a\x17\x4b\xd2\x65\x36\x96\x7b\x4c\xc2\xae\xd8\x33\xe6\x37\x4e\x32\x5c\xc7\xa3\x5e\xbc\xd0\xf0\x29\x76\xae\x6b\xa5\xa2\xd1\xf9\x12\xb8\xd9\x0b\x9b\xd0\xcb\xa4\xf8\x10\x14\xab\xea\xc4\xfd\xc9\x74\x57\x7a\x2c\x4a\x25\x6b\x10\xdf\x40\x5e\x74\x6d\x7c\xb6\x77\xbc\x01\x23\x26\x95\x33\x17\xfe\xc2\xff\xac\x1f\x4c\xc3\x6f\x91\xa5\x97\x5f\xe0\x27\xac\x11\xfe\x3e\xde\x18\x23\x9f\x3e\xcf\x01\xf8\xf0\x7e\x26\x9c\xe9\x54\xae\x8a\xab\x27\x24\x94\xcf\xad\xb2\xdc\x3d\xd0\x3d\xc9\xe4\x9d\xb5\x95\xbb\x47\x78\x5e\x22\xf9\x25\x2a\x2a\xf7\x2f\x43\x49\x64\xd2\x24\x7f\x34\x8d\x4c\xe3\x22\xa9\xeb\xb2\x79\x91\x34\xf2\x9e\x73\x02\x5f\xa2\x0b\xb5\xdc\xab\x54\x8d\x37\xf3\x1a\x9d\x42\x3d\xb5\x9e\x42\xf8\xc5\x1d\x96\xda\x09\x61\x07\x48\x81\x02\x2c\x35\x94\x4f\x3b\x55\x8c\xc5\x6f\xa4\x88\xb8\x7b\x2e\x8a\x31\xa8\xea\xce\x9a\x70\x89\xbb\xea\x34\x40\x37\x72\x2c\x75\x9f\xc7\xba\x66\xd0\x53\xdc\x0e\x8a\x92\x89\x7a\xe3\x42\x16\x4a\x4a\x4f\xb3\x80\x52\xc2\x3b\x7a\xc9\x14\x0e\x48\x8f\x73\x55\x66\x33\xd1\x73\xd2\x9b\x42\x29\x18\x3a\x22\x94\x2d\x15\x55\xe0\x97\xf9\xad\xe2\x5f\x7f\xee\xca\x06\x37\xaa\x1e\xf3\xee\x70\x4f\xe7\xed\xe1\xed\x7f\x86\x4b\x3f\x3c\xa0\xb9\xf6\x63\xc7\x57\x3e\x71\xf1\x87\x47\x7c\x92\xab\x3f\x69\x95\x2f\xe5\xf2\x8f\x2f\xef\xa3\xeb\x3f\xab\x01\x17\x27\x5f\xd4\xf3\x9f\x5f\x46\x82\xae\x42\x1b\x46\x55\xe9\xbb\x9b\x1d\xb8\xd2\x43\xdb\x52\xd2\xb0\xb2\xc4\x42\x75\x3a\xb7\xeb\x4a\xe9\x3e\xa1\x1c\x6a\x03\x45\x85\xa6\x41\x19\x09\xb3\xa4\x41\xf8\x5e\xaa\x34\x0d\xca\x4d\xe8\x24\x24\x1b\xcd\x59\x52\xde\xc1\xe7\x86\x4e\x58\x99\xa0\x12\x4d\xac\x9c\x5a\xe4\x4a\xff\xb2\xce\xcb\x21\xd6\xcd\x56\x7a\x6e\xf4\x70\xf2\xf1\xa1\x1a\xd6\x91\x99\xbc\xc4\x60\x18\x95\x79\xca\x5f\x2b\x55\xce\x63\xf9\x74\xe3\xb8\x05\x1e\x59\xf7\xa3\xf2\xf4\x93\x77\xa0\x70\x96\x1a\x37\xae\x0f\x52\x00\x7c\xdf\xf0\x6c\xd4\x1a\x2a\xa7\xc9\xd0\x3e\xe4\x03\x3b\xa0\x18\xd0\xe9\x5a\x1d\xc4\x20\xba\x82\xcf\x0f\xa2\x94\xa4\xde\xc8\x00\x3d\x1d\x95\xfa\x5a\x07\xad\x77\xca\x62\x25\xa0\xd8\xcb\x1e\x4b\x0d\xd9\xde\x49\x1c\x1f\x06\x75\xbc\x08\xfb\xd0\x41\xb0\xd5\x68\x60\xee\x65\x91\x42\xe5\x04\xd2\x04\xeb\x40\x8d\x4e\xab\xa1\x54\x7d\xe7\x34\xac\x50\xd9\x03\xea\x37\x2e\x98\x56\x3a\xb5\x19\x55\xd6\x63\x2c\xf6\x8d\x75\x4e\x4a\x3f\xa1\x2a\x86\xc3\x89\xef\x57\xa3\xd4\x0d\x3d\x82\x5b\xcc\x01\xd6\x71\xaf\xa8\xaf\xc7\x62\x5e\x2b\x41\x34\x1e\x1b\x7a\xed\x67\xae\xee\x2b\xb4\xba\x51\xb7\xac\x5c\xba\x5a\xc1\xef\x31\x1f\xe9\xaf\xd9\x58\xec\x7b\x08\xdd\x47\x3e\xa3\xf8\xa2\x7c\x41\x34\x14\x59\xc1\x7d\x52\x3e\x3e\x50\x67\xb0\x9d\x34\x99\x77\x4a\xd1\xdb\x49\xe9\xae\x95\xde\x4a\xa7\xcc\xa4\xd3\x5c\x33\x06\xb1\x08\x3a\x67\xd4\x73\x89\x79\xa5\x4a\x6b\x99\xeb\xb0\x50\x67\x98\x54\x66\x92\x7f\x58\x87\x35\xf5\xb5\x5a\x4a\x22\x9a\xd6\x2f\xdd\xbe\x54\x25\x4a\xa5\x22\x36\x7f\xef\xb4\x9b\xb4\x05\x9b\x1b\x95\xfa\x23\x2b\x72\x11\x43\x97\x12\xa0\x75\xe3\x26\x8f\xbd\xe8\xad\x90\x2f\x2c\xe9\x0a\xf6\x88\x8e\xad\xc4\x9a\x7a\xbc\xeb\x94\x9a\xe0\x13\xec\x19\xbf\x63\x4f\xec\x4d\xa5\x4e\x6c\xa9\xce\xa7\x3d\xa7\xce\xb0\xf5\x52\x54\x0e\x64\x0e\x62\x34\x3a\x5b\xd2\xe7\xa0\x32\xf1\xa4\x54\x86\x71\xfa\x51\xb8\xa1\x52\x56\xae\x72\x33\x72\x87\x44\x69\xf8\xe0\x7e\x8b\x2e\x46\xa5\xbd\x4b\x79\x08\x7b\xac\x94\xae\xe0\x53\xc4\x66\xd3\xd3\xe0\xf6\x89\xed\x40\xbd\x49\xe5\x48\x89\xac\xec\xa1\x8e\xb5\x51\xf0\x5c\x9c\xa1\x70\x6e\x81\x9e\x52\x95\x44\x2c\x6d\x99\x94\x16\x14\xee\x43\x8b\xed\xd7\xb2\xad\x49\x1c\x87\xd4\x37\x53\xd9\x0b\x3f\x62\x6f\x3a\xf9\x7b\xac\x79\xf8\xe0\x47\xd8\x2d\xb6\x98\xc9\xf7\x49\x11\x49\x81\xc0\x47\xc3\xc4\xc4\xf5\x62\x6b\xd3\x3a\xac\x33\x3a\xf8\xfc\xc6\x4b\x94\x2a\x5f\x77\x4a\xaf\xb9\x01\xb8\x67\xdd\xea\xa5\xe4\x92\xab\x3c\xfd\x34\x6e\xf0\x5c\xb2\xff\xd0\x70\x0f\xf2\x82\x3b\x89\xff\x43\xa3\xfd\x19\x4e\xf0\x25\x92\x80\xc7\x16\xb6\xf0\x81\xa2\x4a\xff\x78\x2a\x50\xe4\x49\x9c\xbf\x08\x21\xb8\xff\xa4\xef\xff\x47\x87\x15\xa6\x6d\xac\x7c\x74\x14\x1b\xa6\xeb\x02\x68\x2e\xa6\xbf\xb0\xfc\x54\x45\xcd\x85\xe9\xdb\x6f\x2a\xac\xdb\x59\x17\x35\x23\x16\x86\x3f\x08\x35\x6e\xb2\xff\x21\x68\xce\xd1\xaf\xed\x9d\x5a\x59\xc2\xe0\xc8\x67\xe7\x42\xd4\x91\x35\xe4\xef\xee\x39\x5b\xa7\xe8\xce\x3a\xf0\x4a\x2b\x2e\xd7\xde\x68\x6a\x96\xa2\xf3\x1d\x09\x78\x50\x41\x32\xa8\xe8\x48\xe4\xbd\x8b\xb5\x3f\xba\x53\xcf\x70\xcf\x47\xc7\x34\x1f\x7d\xc2\xa1\xf1\x4f\x1c\xf5\xd1\x71\x9f\xe4\xad\x4f\x5d\xf1\x4b\xb9\xec\x93\xd6\x29\xbf\x6d\x9e\xd5\x07\x8e\xb3\x97\x39\x47\x77\xbf\xa4\x7f\xe2\x2c\x5d\xee\xc5\x7a\x6c\x1f\xc6\x13\xc4\x34\xb1\xd9\x5a\x0c\x39\x13\xbb\x4c\x06\x8f\x42\x44\x6b\x3b\x03\x34\x8a\x2d\x57\xed\x5c\xd6\x3a\x73\x36\x38\x6b\xc2\x7f\xb8\x2e\x17\x06\x5b\x38\x1e\xa4\x6a\x54\xda\x19\xb9\xda\x23\x52\xaf\x06\xaa\x35\x5f\x72\x8f\xe0\xe0\x05\x1f\x7c\xb1\x51\xc1\x1c\x7f\xb3\xa6\xe2\xe4\x58\x12\x94\xb1\xc3\x80\x61\x98\x64\xdb\xd9\x12\x4d\x1b\x35\xf5\x54\xfc\xb6\xa2\x9d\x98\xf7\x24\xd6\x43\xd4\x2e\x27\x5f\x53\xd5\x3b\x36\x2d\xc5\x36\x2b\x56\x2b\x03\xc0\x97\xc1\x02\x70\x8b\xcc\x67\x54\x61\x96\x71\x32\x15\x42\x63\x61\x1d\xb2\x1a\x23\x2f\x55\xac\x4c\x7c\x4d\x9d\x8a\xab\x95\x0a\xa6\x4b\xd3\x06\x3c\x82\x6d\x12\x95\x27\x9d\x05\x63\xae\x42\x4d\x01\x18\x2a\xf3\xc1\x20\x87\x05\x37\x75\xd6\x8d\x4c\xc9\x0a\xdd\x99\xef\x05\x59\x0f\x6c\xa3\x12\x23\x87\x95\x0d\x2a\xe2\xdb\xf9\xc3\xda\x0b\x92\x56\xa8\x15\x6b\xb5\xa6\x68\x29\xb6\xa4\x46\x4d\xae\x06\xe2\x72\xfa\xc5\x1a\xb8\xb9\x57\x42\xf2\x54\xd9\x50\xed\xd7\xb0\xba\x41\x8d\x6f\xb2\xc1\x58\x07\x02\x8c\xdd\x36\xce\x34\xc1\x6e\x64\x67\x6d\xd8\x49\x9d\xf9\x3c\xb0\xbb\x2c\x17\xcb\x53\x91\xd6\x9a\x97\x37\xce\xb6\x61\x5f\x30\x36\x74\x46\x86\x06\xfb\x31\xdd\xea\x7c\x25\x6c\x17\xfb\xc5\x3e\x78\x36\xe4\xd7\xb6\x33\xa8\x58\x8d\x2f\x14\x89\xc7\x8d\x58\x4d\x64\xb2\xd4\x54\xf6\xd1\x2f\x0d\xa5\xdc\xe7\xcf\x95\x65\xc2\xfc\xac\x09\xde\xbb\x9e\x1b\x65\x07\x30\x74\x6b\xec\x8e\x3a\x63\x39\xf8\x1e\xc4\x2a\x02\x23\x93\xd9\x88\xb2\x28\xe2\x07\x76\x59\x8b\xb9\x4f\x6a\x96\xb3\x1e\x7c\x01\x56\x3f\xa8\xf9\x01\x9b\xee\xe5\x7f\x76\x36\x74\x50\x43\x58\x55\x2b\x6b\x98\x57\x1e\x97\xac\xb0\x2d\xbb\xa8\x2a\x35\x5e\x2a\xdf\xd7\x5e\x0d\x25\xf3\xff\xe0\xec\x99\x58\x83\x3f\xa1\xcb\x52\xc5\xe8\xa5\x41\x8e\x7e\x7a\xe1\x02\x6b\x65\x9d\x64\x48\xd8\xac\x35\x10\x0a\xb7\x3d\x32\x8e\x25\x7e\x65\x0b\xdb\xee\x74\xe0\x62\x70\xe6\x0d\x07\x40\x6f\x76\xc0\xa3\x50\xc6\xd2\xdc\xa8\xbe\x29\xbb\xe7\xb9\x5c\x8d\xa4\x52\x67\x59\xd9\x6b\xe2\x66\xa2\x0c\x7f\x92\x0e\x89\x8f\x8d\xb2\xed\xbb\x0a\xda\x64\x7e\xb0\x64\xec\x1e\x79\xb0\xdd\xbb\xce\x0e\x3e\x82\xa1\x2f\x1a\x4d\xaf\xf9\xee\xa3\x7f\x59\xf5\xe4\x48\xfa\x74\xd6\xfb\xb4\x95\xfe\x0b\xa2\xe8\x27\xdc\xb7\x68\x8a\xe7\x05\xd1\x97\xa9\x85\xdd\xf1\xf7\x69\xff\xea\x0a\x78\xae\xf7\xf1\x85\x6c\x69\x44\xea\x20\xcb\x20\xdf\x6a\xc4\x0f\xc9\xde\xc1\xd8\x4e\xf1\x82\x98\x3a\x0a\xe7\x1a\xf9\x98\x61\x9e\x2a\x61\x9d\xaa\x20\x60\xc6\xa0\x67\xec\x7b\xee\xcf\x8e\xca\xd2\xed\xff\xe1\x7a\x8c\x49\x98\xc1\xf5\xa0\x0a\x47\x7d\xe3\xb9\x44\xe7\xcc\x97\xaa\x75\xac\x06\xbd\x9d\x21\x4e\x1c\x2f\xed\xd0\x4f\xed\xd8\xfd\x58\xd5\x7b\x39\x4c\x51\xeb\xd0\x91\xe5\x07\x85\xce\x4e\x27\x3a\xec\x24\xfd\x59\xcc\x53\xd6\x8b\xbe\x2b\x1d\x5a\x8a\x97\x73\xd4\xb9\xce\x5f\xeb\xfc\x33\xb1\x88\x18\xd5\xe9\x80\x4d\xaf\x43\x1c\x99\x0e\xa2\x59\xe3\xb0\x53\xe3\x5e\x55\x4c\xcb\x13\x2a\x71\xfa\x44\x95\xaf\xde\xd7\x64\xcd\xed\xdc\x2b\xf4\x95\x62\xd0\x5d\xd9\x76\xd1\xf8\x38\x60\xbf\x55\x15\xef\xa9\xc4\xdf\x6f\x82\xcf\x80\x9f\xfb\x07\x33\xe4\x79\xe8\xcf\x35\x3f\x01\x9d\xfb\x47\x7a\x12\xde\x3c\xba\xaa\x97\x82\x9a\x87\x97\x24\x94\x49\xf3\xea\x8f\xa2\x4c\x93\xe5\x59\x96\x67\x5f\x0a\x65\xfe\xdc\xdf\xbb\x10\xcf\x86\xde\x79\xd2\xa8\xc3\x45\xf8\x94\xf9\x6c\xe6\x71\x7d\xd2\x41\x17\xab\xc0\x95\xe2\xc7\xb5\x77\xa5\x6a\x55\x85\x4b\x1d\x4a\x32\xce\xaf\xbf\x39\x49\x55\xd9\xc5\x6f\x6a\xf1\xde\x22\xf8\xf3\xc6\xdb\x52\xfd\x0d\x84\xfe\x36\x26\xd1\xa1\x33\xcb\x5d\x53\xf7\x69\x6b\x68\xd7\xe2\xfb\xfa\xdd\x7c\x5c\x31\x1d\x9f\x01\xa7\x06\xfd\xbd\x09\xdc\x76\xc9\xc3\x8b\x5a\x75\x82\xca\xfd\x7b\x5a\x72\xfc\x44\x95\xe5\xde\x9b\xe9\xa3\x0e\xea\x58\xce\xde\xfb\x9c\x65\x2e\xde\xac\x43\x80\xf0\x14\xde\x83\x77\xd6\xca\x55\x72\x55\xe7\x82\x2a\xae\xc6\xd1\x55\x9d\xb3\x43\x4c\x95\xeb\x6a\xd0\xa1\x94\x42\x27\xae\x13\x1d\x04\x22\x8f\xe8\x1a\xe7\xb3\x86\x57\xa3\x8f\x3b\x36\x5e\xd9\x33\x7e\xae\x6a\xba\x1d\x0a\xd3\x61\xae\xa0\x03\x76\x65\xa5\x7c\xa8\x92\xce\x27\xaf\x74\x27\xc1\xd7\xc5\xb3\x60\xa5\x55\x9c\x2b\x1d\x4c\x10\xef\x04\x9f\x8c\x97\xa9\x23\x60\x95\xdd\xd8\xf7\x8f\x31\x1b\xe1\x2f\xeb\x2d\x55\x3d\x65\xaf\x46\xed\x53\xae\x83\x00\xe4\x34\x83\xba\x1c\xe0\x9d\x55\x5e\x33\xd7\x6f\xad\x93\xe5\x89\x2a\x8e\xb9\xfe\x2e\xca\xf8\xb1\xba\xb3\x99\x0e\x69\x62\x3b\x59\xa9\x1a\x47\xa6\xba\x47\xa3\xda\x47\xa9\x5a\x47\xe7\x9c\xd3\x3a\x2d\xb5\x77\x34\xf8\x3f\xd6\xbb\x56\x13\xa9\x5d\x26\x6c\xd6\x0e\x2c\xa5\xaa\x3c\xab\x23\x91\xab\x2b\x83\x2e\xb0\x11\x3b\x94\x9c\xba\x6e\xb1\x87\x51\x07\x7c\x86\xff\x0b\x00\x00\xff\xff\xd5\x16\x6c\x5a\x00\x40\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 36864, mode: os.FileMode(420), modTime: time.Unix(1620554111, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_stream_tables.down.sql":     _1_create_stream_tablesDownSql,
	"1_create_stream_tables.up.sql":       _1_create_stream_tablesUpSql,
	"2_append_to_store.down.sql":          _2_append_to_storeDownSql,
	"2_append_to_store.up.sql":            _2_append_to_storeUpSql,
	"3_notification_triggers.down.sql":    _3_notification_triggersDownSql,
	"3_notification_triggers.up.sql":      _3_notification_triggersUpSql,
	"4_subscriptions_checkpoint.down.sql": _4_subscriptions_checkpointDownSql,
	"4_subscriptions_checkpoint.up.sql":   _4_subscriptions_checkpointUpSql,
	"5_correlated_events.down.sql":        _5_correlated_eventsDownSql,
	"5_correlated_events.up.sql":          _5_correlated_eventsUpSql,
	"bindata.go":                          bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_stream_tables.down.sql":     &bintree{_1_create_stream_tablesDownSql, map[string]*bintree{}},
	"1_create_stream_tables.up.sql":       &bintree{_1_create_stream_tablesUpSql, map[string]*bintree{}},
	"2_append_to_store.down.sql":          &bintree{_2_append_to_storeDownSql, map[string]*bintree{}},
	"2_append_to_store.up.sql":            &bintree{_2_append_to_storeUpSql, map[string]*bintree{}},
	"3_notification_triggers.down.sql":    &bintree{_3_notification_triggersDownSql, map[string]*bintree{}},
	"3_notification_triggers.up.sql":      &bintree{_3_notification_triggersUpSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.down.sql": &bintree{_4_subscriptions_checkpointDownSql, map[string]*bintree{}},
	"4_subscriptions_checkpoint.up.sql":   &bintree{_4_subscriptions_checkpointUpSql, map[string]*bintree{}},
	"5_correlated_events.down.sql":        &bintree{_5_correlated_eventsDownSql, map[string]*bintree{}},
	"5_correlated_events.up.sql":          &bintree{_5_correlated_eventsUpSql, map[string]*bintree{}},
	"bindata.go":                          &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
